//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Data.Entity.Infrastructure.MappingViews;

[assembly: DbMappingViewCacheTypeAttribute(
    typeof(iRely.MobileBilling.Model.MBILEntities),
    typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySets93b3862e62e1be5eb0da38f5215253fe6b797aba85f0fa9619ce1aeb1ed50ff9))]

namespace Edm_EntityMappingGeneratedViews
{
    using System;
    using System.CodeDom.Compiler;
    using System.Data.Entity.Core.Metadata.Edm;

    /// <summary>
    /// Implements a mapping view cache.
    /// </summary>
    [GeneratedCode("Entity Framework 6 Power Tools", "0.9.5.0")]
    internal sealed class ViewsForBaseEntitySets93b3862e62e1be5eb0da38f5215253fe6b797aba85f0fa9619ce1aeb1ed50ff9 : DbMappingViewCache
    {
        /// <summary>
        /// Gets a hash value computed over the mapping closure.
        /// </summary>
        public override string MappingHashValue
        {
            get { return "93b3862e62e1be5eb0da38f5215253fe6b797aba85f0fa9619ce1aeb1ed50ff9"; }
        }

        /// <summary>
        /// Gets a view corresponding to the specified extent.
        /// </summary>
        /// <param name="extent">The extent.</param>
        /// <returns>The mapping view, or null if the extent is not associated with a mapping view.</returns>
        public override DbMappingView GetView(EntitySetBase extent)
        {
            if (extent == null)
            {
                throw new ArgumentNullException("extent");
            }

            var extentName = extent.EntityContainer.Name + "." + extent.Name;

            if (extentName == "CodeFirstDatabase.tblMBILExportFiles")
            {
                return GetView0();
            }

            if (extentName == "MBILEntities.tblMBILExportFiles")
            {
                return GetView1();
            }

            if (extentName == "CodeFirstDatabase.tblMBILInvoice")
            {
                return GetView2();
            }

            if (extentName == "CodeFirstDatabase.tblMBILInvoiceItem")
            {
                return GetView3();
            }

            if (extentName == "CodeFirstDatabase.tblMBILInvoiceTaxCode")
            {
                return GetView4();
            }

            if (extentName == "MBILEntities.tblMBILInvoice")
            {
                return GetView5();
            }

            if (extentName == "MBILEntities.tblMBILInvoiceItem")
            {
                return GetView6();
            }

            if (extentName == "MBILEntities.tblMBILInvoiceTaxCode")
            {
                return GetView7();
            }

            if (extentName == "CodeFirstDatabase.tblMBILOrder")
            {
                return GetView8();
            }

            if (extentName == "CodeFirstDatabase.tblMBILOrderItem")
            {
                return GetView9();
            }

            if (extentName == "CodeFirstDatabase.tblMBILOrderTaxCode")
            {
                return GetView10();
            }

            if (extentName == "MBILEntities.tblMBILOrder")
            {
                return GetView11();
            }

            if (extentName == "MBILEntities.tblMBILOrderItem")
            {
                return GetView12();
            }

            if (extentName == "MBILEntities.tblMBILOrderTaxCode")
            {
                return GetView13();
            }

            if (extentName == "CodeFirstDatabase.vyuMBILOrder")
            {
                return GetView14();
            }

            if (extentName == "MBILEntities.vyuMBILOrders")
            {
                return GetView15();
            }

            if (extentName == "CodeFirstDatabase.vyuMBILOrderItem")
            {
                return GetView16();
            }

            if (extentName == "MBILEntities.vyuMBILOrderItems")
            {
                return GetView17();
            }

            if (extentName == "CodeFirstDatabase.vyuMBILOrderTaxCode")
            {
                return GetView18();
            }

            if (extentName == "MBILEntities.vyuMBILOrderTaxCodes")
            {
                return GetView19();
            }

            if (extentName == "CodeFirstDatabase.vyuMBILInvoice")
            {
                return GetView20();
            }

            if (extentName == "CodeFirstDatabase.vyuMBILInvoiceItem")
            {
                return GetView21();
            }

            if (extentName == "CodeFirstDatabase.vyuMBILInvoiceTaxCode")
            {
                return GetView22();
            }

            if (extentName == "CodeFirstDatabase.tblMBILShift")
            {
                return GetView23();
            }

            if (extentName == "CodeFirstDatabase.vyuMBILPayment")
            {
                return GetView24();
            }

            if (extentName == "CodeFirstDatabase.vyuMBILShift")
            {
                return GetView25();
            }

            if (extentName == "MBILEntities.vyuMBILInvoices")
            {
                return GetView26();
            }

            if (extentName == "MBILEntities.vyuMBILInvoiceItems")
            {
                return GetView27();
            }

            if (extentName == "MBILEntities.vyuMBILInvoiceTaxCodes")
            {
                return GetView28();
            }

            if (extentName == "MBILEntities.tblMBILShifts")
            {
                return GetView29();
            }

            if (extentName == "MBILEntities.vyuMBILPayments")
            {
                return GetView30();
            }

            if (extentName == "MBILEntities.vyuMBILShifts")
            {
                return GetView31();
            }

            if (extentName == "CodeFirstDatabase.tblMBILPayment")
            {
                return GetView32();
            }

            if (extentName == "MBILEntities.tblMBILPayments")
            {
                return GetView33();
            }

            if (extentName == "CodeFirstDatabase.tblMBILOutOfGas")
            {
                return GetView34();
            }

            if (extentName == "MBILEntities.tblMBILOutOfGas")
            {
                return GetView35();
            }

            if (extentName == "CodeFirstDatabase.vyuMBILOutOfGas")
            {
                return GetView36();
            }

            if (extentName == "MBILEntities.vyuMBILOutOfGas")
            {
                return GetView37();
            }

            if (extentName == "CodeFirstDatabase.tblMBILCompanyPreference")
            {
                return GetView38();
            }

            if (extentName == "MBILEntities.tblMBILCompanyPreferences")
            {
                return GetView39();
            }

            if (extentName == "CodeFirstDatabase.tblSMStartingNumber")
            {
                return GetView40();
            }

            if (extentName == "MBILEntities.tblSMStartingNumbers")
            {
                return GetView41();
            }

            return null;
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.tblMBILExportFiles.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView0()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing tblMBILExportFiles
        [CodeFirstDatabaseSchema.tblMBILExportFiles](T1.tblMBILExportFiles_intExportFilesId, T1.tblMBILExportFiles_strFileName, T1.tblMBILExportFiles_dtmCreatedDate, T1.tblMBILExportFiles_intUserId, T1.tblMBILExportFiles_intConcurrencyId)
    FROM (
        SELECT 
            T.intExportFilesId AS tblMBILExportFiles_intExportFilesId, 
            T.strFileName AS tblMBILExportFiles_strFileName, 
            T.dtmCreatedDate AS tblMBILExportFiles_dtmCreatedDate, 
            T.intUserId AS tblMBILExportFiles_intUserId, 
            T.intConcurrencyId AS tblMBILExportFiles_intConcurrencyId, 
            True AS _from0
        FROM MBILEntities.tblMBILExportFiles AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for MBILEntities.tblMBILExportFiles.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView1()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing tblMBILExportFiles
        [iRely.MobileBilling.Model.tblMBILExportFiles](T1.tblMBILExportFiles_intExportFilesId, T1.tblMBILExportFiles_strFileName, T1.tblMBILExportFiles_dtmCreatedDate, T1.tblMBILExportFiles_intUserId, T1.tblMBILExportFiles_intConcurrencyId)
    FROM (
        SELECT 
            T.intExportFilesId AS tblMBILExportFiles_intExportFilesId, 
            T.strFileName AS tblMBILExportFiles_strFileName, 
            T.dtmCreatedDate AS tblMBILExportFiles_dtmCreatedDate, 
            T.intUserId AS tblMBILExportFiles_intUserId, 
            T.intConcurrencyId AS tblMBILExportFiles_intConcurrencyId, 
            True AS _from0
        FROM CodeFirstDatabase.tblMBILExportFiles AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.tblMBILInvoice.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView2()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing tblMBILInvoice
        [CodeFirstDatabaseSchema.tblMBILInvoice](T1.tblMBILInvoice_intInvoiceId, T1.tblMBILInvoice_strInvoiceNo, T1.tblMBILInvoice_intOrderId, T1.tblMBILInvoice_intEntityCustomerId, T1.tblMBILInvoice_intLocationId, T1.tblMBILInvoice_strType, T1.tblMBILInvoice_dtmDeliveryDate, T1.tblMBILInvoice_dtmInvoiceDate, T1.tblMBILInvoice_intDriverId, T1.tblMBILInvoice_intShiftId, T1.tblMBILInvoice_strComments, T1.tblMBILInvoice_strVoidComments, T1.tblMBILInvoice_dblTotal, T1.tblMBILInvoice_intTermId, T1.tblMBILInvoice_ysnPosted, T1.tblMBILInvoice_ysnVoided, T1.tblMBILInvoice_dtmPostedDate, T1.tblMBILInvoice_dtmVoidedDate, T1.tblMBILInvoice_inti21InvoiceId, T1.tblMBILInvoice_intPaymentMethodId, T1.tblMBILInvoice_strPaymentInfo, T1.tblMBILInvoice_intConcurrencyId)
    FROM (
        SELECT 
            T.intInvoiceId AS tblMBILInvoice_intInvoiceId, 
            T.strInvoiceNo AS tblMBILInvoice_strInvoiceNo, 
            T.intOrderId AS tblMBILInvoice_intOrderId, 
            T.intEntityCustomerId AS tblMBILInvoice_intEntityCustomerId, 
            T.intLocationId AS tblMBILInvoice_intLocationId, 
            T.strType AS tblMBILInvoice_strType, 
            T.dtmDeliveryDate AS tblMBILInvoice_dtmDeliveryDate, 
            T.dtmInvoiceDate AS tblMBILInvoice_dtmInvoiceDate, 
            T.intDriverId AS tblMBILInvoice_intDriverId, 
            T.intShiftId AS tblMBILInvoice_intShiftId, 
            T.strComments AS tblMBILInvoice_strComments, 
            T.strVoidComments AS tblMBILInvoice_strVoidComments, 
            T.dblTotal AS tblMBILInvoice_dblTotal, 
            T.intTermId AS tblMBILInvoice_intTermId, 
            T.ysnPosted AS tblMBILInvoice_ysnPosted, 
            T.ysnVoided AS tblMBILInvoice_ysnVoided, 
            T.dtmPostedDate AS tblMBILInvoice_dtmPostedDate, 
            T.dtmVoidedDate AS tblMBILInvoice_dtmVoidedDate, 
            T.inti21InvoiceId AS tblMBILInvoice_inti21InvoiceId, 
            T.intPaymentMethodId AS tblMBILInvoice_intPaymentMethodId, 
            T.strPaymentInfo AS tblMBILInvoice_strPaymentInfo, 
            T.intConcurrencyId AS tblMBILInvoice_intConcurrencyId, 
            True AS _from0
        FROM MBILEntities.tblMBILInvoice AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.tblMBILInvoiceItem.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView3()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing tblMBILInvoiceItem
        [CodeFirstDatabaseSchema.tblMBILInvoiceItem](T1.tblMBILInvoiceItem_intInvoiceItemId, T1.tblMBILInvoiceItem_intInvoiceId, T1.tblMBILInvoiceItem_intSiteId, T1.tblMBILInvoiceItem_intItemId, T1.tblMBILInvoiceItem_intItemUOMId, T1.tblMBILInvoiceItem_intContractDetailId, T1.tblMBILInvoiceItem_dblQuantity, T1.tblMBILInvoiceItem_dblPrice, T1.tblMBILInvoiceItem_dblPercentageFull, T1.tblMBILInvoiceItem_inti21InvoiceDetailId, T1.tblMBILInvoiceItem_dblItemTotal, T1.tblMBILInvoiceItem_dblTaxTotal, T1.tblMBILInvoiceItem_intConcurrencyId)
    FROM (
        SELECT 
            T.intInvoiceItemId AS tblMBILInvoiceItem_intInvoiceItemId, 
            T.intInvoiceId AS tblMBILInvoiceItem_intInvoiceId, 
            T.intSiteId AS tblMBILInvoiceItem_intSiteId, 
            T.intItemId AS tblMBILInvoiceItem_intItemId, 
            T.intItemUOMId AS tblMBILInvoiceItem_intItemUOMId, 
            T.intContractDetailId AS tblMBILInvoiceItem_intContractDetailId, 
            T.dblQuantity AS tblMBILInvoiceItem_dblQuantity, 
            T.dblPrice AS tblMBILInvoiceItem_dblPrice, 
            T.dblPercentageFull AS tblMBILInvoiceItem_dblPercentageFull, 
            T.inti21InvoiceDetailId AS tblMBILInvoiceItem_inti21InvoiceDetailId, 
            T.dblItemTotal AS tblMBILInvoiceItem_dblItemTotal, 
            T.dblTaxTotal AS tblMBILInvoiceItem_dblTaxTotal, 
            T.intConcurrencyId AS tblMBILInvoiceItem_intConcurrencyId, 
            True AS _from0
        FROM MBILEntities.tblMBILInvoiceItem AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.tblMBILInvoiceTaxCode.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView4()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing tblMBILInvoiceTaxCode
        [CodeFirstDatabaseSchema.tblMBILInvoiceTaxCode](T1.tblMBILInvoiceTaxCode_intInvoiceTaxId, T1.tblMBILInvoiceTaxCode_intInvoiceItemId, T1.tblMBILInvoiceTaxCode_intItemId, T1.tblMBILInvoiceTaxCode_intTransactionDetailTaxId, T1.tblMBILInvoiceTaxCode_intInvoiceDetailId, T1.tblMBILInvoiceTaxCode_intTaxGroupMasterId, T1.tblMBILInvoiceTaxCode_intTaxGroupId, T1.tblMBILInvoiceTaxCode_intTaxCodeId, T1.tblMBILInvoiceTaxCode_intTaxClassId, T1.tblMBILInvoiceTaxCode_strTaxableByOtherTaxes, T1.tblMBILInvoiceTaxCode_strCalculationMethod, T1.tblMBILInvoiceTaxCode_dblRate, T1.tblMBILInvoiceTaxCode_dblExemptionPercent, T1.tblMBILInvoiceTaxCode_dblTax, T1.tblMBILInvoiceTaxCode_dblAdjustedTax, T1.tblMBILInvoiceTaxCode_dblBaseAdjustedTax, T1.tblMBILInvoiceTaxCode_intSalesTaxAccountId, T1.tblMBILInvoiceTaxCode_ysnSeparateOnInvoice, T1.tblMBILInvoiceTaxCode_ysnCheckoffTax, T1.tblMBILInvoiceTaxCode_strTaxCode, T1.tblMBILInvoiceTaxCode_ysnTaxExempt, T1.tblMBILInvoiceTaxCode_ysnTaxOnly, T1.tblMBILInvoiceTaxCode_ysnInvalidSetup, T1.tblMBILInvoiceTaxCode_strTaxGroup, T1.tblMBILInvoiceTaxCode_strNotes, T1.tblMBILInvoiceTaxCode_intUnitMeasureId, T1.tblMBILInvoiceTaxCode_strUnitMeasure, T1.tblMBILInvoiceTaxCode_intConcurrencyId)
    FROM (
        SELECT 
            T.intInvoiceTaxId AS tblMBILInvoiceTaxCode_intInvoiceTaxId, 
            T.intInvoiceItemId AS tblMBILInvoiceTaxCode_intInvoiceItemId, 
            T.intItemId AS tblMBILInvoiceTaxCode_intItemId, 
            T.intTransactionDetailTaxId AS tblMBILInvoiceTaxCode_intTransactionDetailTaxId, 
            T.intInvoiceDetailId AS tblMBILInvoiceTaxCode_intInvoiceDetailId, 
            T.intTaxGroupMasterId AS tblMBILInvoiceTaxCode_intTaxGroupMasterId, 
            T.intTaxGroupId AS tblMBILInvoiceTaxCode_intTaxGroupId, 
            T.intTaxCodeId AS tblMBILInvoiceTaxCode_intTaxCodeId, 
            T.intTaxClassId AS tblMBILInvoiceTaxCode_intTaxClassId, 
            T.strTaxableByOtherTaxes AS tblMBILInvoiceTaxCode_strTaxableByOtherTaxes, 
            T.strCalculationMethod AS tblMBILInvoiceTaxCode_strCalculationMethod, 
            T.dblRate AS tblMBILInvoiceTaxCode_dblRate, 
            T.dblExemptionPercent AS tblMBILInvoiceTaxCode_dblExemptionPercent, 
            T.dblTax AS tblMBILInvoiceTaxCode_dblTax, 
            T.dblAdjustedTax AS tblMBILInvoiceTaxCode_dblAdjustedTax, 
            T.dblBaseAdjustedTax AS tblMBILInvoiceTaxCode_dblBaseAdjustedTax, 
            T.intSalesTaxAccountId AS tblMBILInvoiceTaxCode_intSalesTaxAccountId, 
            T.ysnSeparateOnInvoice AS tblMBILInvoiceTaxCode_ysnSeparateOnInvoice, 
            T.ysnCheckoffTax AS tblMBILInvoiceTaxCode_ysnCheckoffTax, 
            T.strTaxCode AS tblMBILInvoiceTaxCode_strTaxCode, 
            T.ysnTaxExempt AS tblMBILInvoiceTaxCode_ysnTaxExempt, 
            T.ysnTaxOnly AS tblMBILInvoiceTaxCode_ysnTaxOnly, 
            T.ysnInvalidSetup AS tblMBILInvoiceTaxCode_ysnInvalidSetup, 
            T.strTaxGroup AS tblMBILInvoiceTaxCode_strTaxGroup, 
            T.strNotes AS tblMBILInvoiceTaxCode_strNotes, 
            T.intUnitMeasureId AS tblMBILInvoiceTaxCode_intUnitMeasureId, 
            T.strUnitMeasure AS tblMBILInvoiceTaxCode_strUnitMeasure, 
            T.intConcurrencyId AS tblMBILInvoiceTaxCode_intConcurrencyId, 
            True AS _from0
        FROM MBILEntities.tblMBILInvoiceTaxCode AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for MBILEntities.tblMBILInvoice.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView5()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing tblMBILInvoice
        [iRely.MobileBilling.Model.tblMBILInvoice](T1.tblMBILInvoice_intInvoiceId, T1.tblMBILInvoice_strInvoiceNo, T1.tblMBILInvoice_intOrderId, T1.tblMBILInvoice_intEntityCustomerId, T1.tblMBILInvoice_intLocationId, T1.tblMBILInvoice_strType, T1.tblMBILInvoice_dtmDeliveryDate, T1.tblMBILInvoice_dtmInvoiceDate, T1.tblMBILInvoice_intDriverId, T1.tblMBILInvoice_intShiftId, T1.tblMBILInvoice_strComments, T1.tblMBILInvoice_strVoidComments, T1.tblMBILInvoice_dblTotal, T1.tblMBILInvoice_intTermId, T1.tblMBILInvoice_ysnPosted, T1.tblMBILInvoice_ysnVoided, T1.tblMBILInvoice_dtmPostedDate, T1.tblMBILInvoice_dtmVoidedDate, T1.tblMBILInvoice_inti21InvoiceId, T1.tblMBILInvoice_intPaymentMethodId, T1.tblMBILInvoice_strPaymentInfo, T1.tblMBILInvoice_intConcurrencyId)
    FROM (
        SELECT 
            T.intInvoiceId AS tblMBILInvoice_intInvoiceId, 
            T.strInvoiceNo AS tblMBILInvoice_strInvoiceNo, 
            T.intOrderId AS tblMBILInvoice_intOrderId, 
            T.intEntityCustomerId AS tblMBILInvoice_intEntityCustomerId, 
            T.intLocationId AS tblMBILInvoice_intLocationId, 
            T.strType AS tblMBILInvoice_strType, 
            T.dtmDeliveryDate AS tblMBILInvoice_dtmDeliveryDate, 
            T.dtmInvoiceDate AS tblMBILInvoice_dtmInvoiceDate, 
            T.intDriverId AS tblMBILInvoice_intDriverId, 
            T.intShiftId AS tblMBILInvoice_intShiftId, 
            T.strComments AS tblMBILInvoice_strComments, 
            T.strVoidComments AS tblMBILInvoice_strVoidComments, 
            T.dblTotal AS tblMBILInvoice_dblTotal, 
            T.intTermId AS tblMBILInvoice_intTermId, 
            T.ysnPosted AS tblMBILInvoice_ysnPosted, 
            T.ysnVoided AS tblMBILInvoice_ysnVoided, 
            T.dtmPostedDate AS tblMBILInvoice_dtmPostedDate, 
            T.dtmVoidedDate AS tblMBILInvoice_dtmVoidedDate, 
            T.inti21InvoiceId AS tblMBILInvoice_inti21InvoiceId, 
            T.intPaymentMethodId AS tblMBILInvoice_intPaymentMethodId, 
            T.strPaymentInfo AS tblMBILInvoice_strPaymentInfo, 
            T.intConcurrencyId AS tblMBILInvoice_intConcurrencyId, 
            True AS _from0
        FROM CodeFirstDatabase.tblMBILInvoice AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for MBILEntities.tblMBILInvoiceItem.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView6()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing tblMBILInvoiceItem
        [iRely.MobileBilling.Model.tblMBILInvoiceItem](T1.tblMBILInvoiceItem_intInvoiceItemId, T1.tblMBILInvoiceItem_intInvoiceId, T1.tblMBILInvoiceItem_intSiteId, T1.tblMBILInvoiceItem_intItemId, T1.tblMBILInvoiceItem_intItemUOMId, T1.tblMBILInvoiceItem_intContractDetailId, T1.tblMBILInvoiceItem_dblQuantity, T1.tblMBILInvoiceItem_dblPrice, T1.tblMBILInvoiceItem_dblPercentageFull, T1.tblMBILInvoiceItem_inti21InvoiceDetailId, T1.tblMBILInvoiceItem_dblItemTotal, T1.tblMBILInvoiceItem_dblTaxTotal, T1.tblMBILInvoiceItem_intConcurrencyId)
    FROM (
        SELECT 
            T.intInvoiceItemId AS tblMBILInvoiceItem_intInvoiceItemId, 
            T.intInvoiceId AS tblMBILInvoiceItem_intInvoiceId, 
            T.intSiteId AS tblMBILInvoiceItem_intSiteId, 
            T.intItemId AS tblMBILInvoiceItem_intItemId, 
            T.intItemUOMId AS tblMBILInvoiceItem_intItemUOMId, 
            T.intContractDetailId AS tblMBILInvoiceItem_intContractDetailId, 
            T.dblQuantity AS tblMBILInvoiceItem_dblQuantity, 
            T.dblPrice AS tblMBILInvoiceItem_dblPrice, 
            T.dblPercentageFull AS tblMBILInvoiceItem_dblPercentageFull, 
            T.inti21InvoiceDetailId AS tblMBILInvoiceItem_inti21InvoiceDetailId, 
            T.dblItemTotal AS tblMBILInvoiceItem_dblItemTotal, 
            T.dblTaxTotal AS tblMBILInvoiceItem_dblTaxTotal, 
            T.intConcurrencyId AS tblMBILInvoiceItem_intConcurrencyId, 
            True AS _from0
        FROM CodeFirstDatabase.tblMBILInvoiceItem AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for MBILEntities.tblMBILInvoiceTaxCode.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView7()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing tblMBILInvoiceTaxCode
        [iRely.MobileBilling.Model.tblMBILInvoiceTaxCode](T1.tblMBILInvoiceTaxCode_intInvoiceTaxId, T1.tblMBILInvoiceTaxCode_intInvoiceItemId, T1.tblMBILInvoiceTaxCode_intItemId, T1.tblMBILInvoiceTaxCode_intTransactionDetailTaxId, T1.tblMBILInvoiceTaxCode_intInvoiceDetailId, T1.tblMBILInvoiceTaxCode_intTaxGroupMasterId, T1.tblMBILInvoiceTaxCode_intTaxGroupId, T1.tblMBILInvoiceTaxCode_intTaxCodeId, T1.tblMBILInvoiceTaxCode_intTaxClassId, T1.tblMBILInvoiceTaxCode_strTaxableByOtherTaxes, T1.tblMBILInvoiceTaxCode_strCalculationMethod, T1.tblMBILInvoiceTaxCode_dblRate, T1.tblMBILInvoiceTaxCode_dblExemptionPercent, T1.tblMBILInvoiceTaxCode_dblTax, T1.tblMBILInvoiceTaxCode_dblAdjustedTax, T1.tblMBILInvoiceTaxCode_dblBaseAdjustedTax, T1.tblMBILInvoiceTaxCode_intSalesTaxAccountId, T1.tblMBILInvoiceTaxCode_ysnSeparateOnInvoice, T1.tblMBILInvoiceTaxCode_ysnCheckoffTax, T1.tblMBILInvoiceTaxCode_strTaxCode, T1.tblMBILInvoiceTaxCode_ysnTaxExempt, T1.tblMBILInvoiceTaxCode_ysnTaxOnly, T1.tblMBILInvoiceTaxCode_ysnInvalidSetup, T1.tblMBILInvoiceTaxCode_strTaxGroup, T1.tblMBILInvoiceTaxCode_strNotes, T1.tblMBILInvoiceTaxCode_intUnitMeasureId, T1.tblMBILInvoiceTaxCode_strUnitMeasure, T1.tblMBILInvoiceTaxCode_intConcurrencyId)
    FROM (
        SELECT 
            T.intInvoiceTaxId AS tblMBILInvoiceTaxCode_intInvoiceTaxId, 
            T.intInvoiceItemId AS tblMBILInvoiceTaxCode_intInvoiceItemId, 
            T.intItemId AS tblMBILInvoiceTaxCode_intItemId, 
            T.intTransactionDetailTaxId AS tblMBILInvoiceTaxCode_intTransactionDetailTaxId, 
            T.intInvoiceDetailId AS tblMBILInvoiceTaxCode_intInvoiceDetailId, 
            T.intTaxGroupMasterId AS tblMBILInvoiceTaxCode_intTaxGroupMasterId, 
            T.intTaxGroupId AS tblMBILInvoiceTaxCode_intTaxGroupId, 
            T.intTaxCodeId AS tblMBILInvoiceTaxCode_intTaxCodeId, 
            T.intTaxClassId AS tblMBILInvoiceTaxCode_intTaxClassId, 
            T.strTaxableByOtherTaxes AS tblMBILInvoiceTaxCode_strTaxableByOtherTaxes, 
            T.strCalculationMethod AS tblMBILInvoiceTaxCode_strCalculationMethod, 
            T.dblRate AS tblMBILInvoiceTaxCode_dblRate, 
            T.dblExemptionPercent AS tblMBILInvoiceTaxCode_dblExemptionPercent, 
            T.dblTax AS tblMBILInvoiceTaxCode_dblTax, 
            T.dblAdjustedTax AS tblMBILInvoiceTaxCode_dblAdjustedTax, 
            T.dblBaseAdjustedTax AS tblMBILInvoiceTaxCode_dblBaseAdjustedTax, 
            T.intSalesTaxAccountId AS tblMBILInvoiceTaxCode_intSalesTaxAccountId, 
            T.ysnSeparateOnInvoice AS tblMBILInvoiceTaxCode_ysnSeparateOnInvoice, 
            T.ysnCheckoffTax AS tblMBILInvoiceTaxCode_ysnCheckoffTax, 
            T.strTaxCode AS tblMBILInvoiceTaxCode_strTaxCode, 
            T.ysnTaxExempt AS tblMBILInvoiceTaxCode_ysnTaxExempt, 
            T.ysnTaxOnly AS tblMBILInvoiceTaxCode_ysnTaxOnly, 
            T.ysnInvalidSetup AS tblMBILInvoiceTaxCode_ysnInvalidSetup, 
            T.strTaxGroup AS tblMBILInvoiceTaxCode_strTaxGroup, 
            T.strNotes AS tblMBILInvoiceTaxCode_strNotes, 
            T.intUnitMeasureId AS tblMBILInvoiceTaxCode_intUnitMeasureId, 
            T.strUnitMeasure AS tblMBILInvoiceTaxCode_strUnitMeasure, 
            T.intConcurrencyId AS tblMBILInvoiceTaxCode_intConcurrencyId, 
            True AS _from0
        FROM CodeFirstDatabase.tblMBILInvoiceTaxCode AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.tblMBILOrder.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView8()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing tblMBILOrder
        [CodeFirstDatabaseSchema.tblMBILOrder](T1.tblMBILOrder_intOrderId, T1.tblMBILOrder_intDispatchId, T1.tblMBILOrder_intShiftId, T1.tblMBILOrder_strOrderNumber, T1.tblMBILOrder_strOrderStatus, T1.tblMBILOrder_dtmRequestedDate, T1.tblMBILOrder_intEntityId, T1.tblMBILOrder_intTermId, T1.tblMBILOrder_strComments, T1.tblMBILOrder_intDriverId, T1.tblMBILOrder_intRouteId, T1.tblMBILOrder_intStopNumber, T1.tblMBILOrder_intTaxStateId, T1.tblMBILOrder_intShipToId, T1.tblMBILOrder_intLocationId, T1.tblMBILOrder_intConcurrencyId)
    FROM (
        SELECT 
            T.intOrderId AS tblMBILOrder_intOrderId, 
            T.intDispatchId AS tblMBILOrder_intDispatchId, 
            T.intShiftId AS tblMBILOrder_intShiftId, 
            T.strOrderNumber AS tblMBILOrder_strOrderNumber, 
            T.strOrderStatus AS tblMBILOrder_strOrderStatus, 
            T.dtmRequestedDate AS tblMBILOrder_dtmRequestedDate, 
            T.intEntityId AS tblMBILOrder_intEntityId, 
            T.intTermId AS tblMBILOrder_intTermId, 
            T.strComments AS tblMBILOrder_strComments, 
            T.intDriverId AS tblMBILOrder_intDriverId, 
            T.intRouteId AS tblMBILOrder_intRouteId, 
            T.intStopNumber AS tblMBILOrder_intStopNumber, 
            T.intTaxStateId AS tblMBILOrder_intTaxStateId, 
            T.intShipToId AS tblMBILOrder_intShipToId, 
            T.intLocationId AS tblMBILOrder_intLocationId, 
            T.intConcurrencyId AS tblMBILOrder_intConcurrencyId, 
            True AS _from0
        FROM MBILEntities.tblMBILOrder AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.tblMBILOrderItem.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView9()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing tblMBILOrderItem
        [CodeFirstDatabaseSchema.tblMBILOrderItem](T1.tblMBILOrderItem_intOrderItemId, T1.tblMBILOrderItem_intOrderId, T1.tblMBILOrderItem_intSiteId, T1.tblMBILOrderItem_intContractDetailId, T1.tblMBILOrderItem_intItemId, T1.tblMBILOrderItem_intItemUOMId, T1.tblMBILOrderItem_dblQuantity, T1.tblMBILOrderItem_dblPrice, T1.tblMBILOrderItem_intConcurrencyId)
    FROM (
        SELECT 
            T.intOrderItemId AS tblMBILOrderItem_intOrderItemId, 
            T.intOrderId AS tblMBILOrderItem_intOrderId, 
            T.intSiteId AS tblMBILOrderItem_intSiteId, 
            T.intContractDetailId AS tblMBILOrderItem_intContractDetailId, 
            T.intItemId AS tblMBILOrderItem_intItemId, 
            T.intItemUOMId AS tblMBILOrderItem_intItemUOMId, 
            T.dblQuantity AS tblMBILOrderItem_dblQuantity, 
            T.dblPrice AS tblMBILOrderItem_dblPrice, 
            T.intConcurrencyId AS tblMBILOrderItem_intConcurrencyId, 
            True AS _from0
        FROM MBILEntities.tblMBILOrderItem AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.tblMBILOrderTaxCode.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView10()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing tblMBILOrderTaxCode
        [CodeFirstDatabaseSchema.tblMBILOrderTaxCode](T1.tblMBILOrderTaxCode_intOrderTaxId, T1.tblMBILOrderTaxCode_intOrderItemId, T1.tblMBILOrderTaxCode_intItemId, T1.tblMBILOrderTaxCode_intTransactionDetailTaxId, T1.tblMBILOrderTaxCode_intInvoiceDetailId, T1.tblMBILOrderTaxCode_intTaxGroupMasterId, T1.tblMBILOrderTaxCode_intTaxGroupId, T1.tblMBILOrderTaxCode_intTaxCodeId, T1.tblMBILOrderTaxCode_intTaxClassId, T1.tblMBILOrderTaxCode_strTaxableByOtherTaxes, T1.tblMBILOrderTaxCode_strCalculationMethod, T1.tblMBILOrderTaxCode_dblRate, T1.tblMBILOrderTaxCode_dblExemptionPercent, T1.tblMBILOrderTaxCode_dblTax, T1.tblMBILOrderTaxCode_dblAdjustedTax, T1.tblMBILOrderTaxCode_dblBaseAdjustedTax, T1.tblMBILOrderTaxCode_intSalesTaxAccountId, T1.tblMBILOrderTaxCode_ysnSeparateOnInvoice, T1.tblMBILOrderTaxCode_ysnCheckoffTax, T1.tblMBILOrderTaxCode_strTaxCode, T1.tblMBILOrderTaxCode_ysnTaxExempt, T1.tblMBILOrderTaxCode_ysnTaxOnly, T1.tblMBILOrderTaxCode_ysnInvalidSetup, T1.tblMBILOrderTaxCode_strTaxGroup, T1.tblMBILOrderTaxCode_strNotes, T1.tblMBILOrderTaxCode_intUnitMeasureId, T1.tblMBILOrderTaxCode_strUnitMeasure, T1.tblMBILOrderTaxCode_intConcurrencyId)
    FROM (
        SELECT 
            T.intOrderTaxId AS tblMBILOrderTaxCode_intOrderTaxId, 
            T.intOrderItemId AS tblMBILOrderTaxCode_intOrderItemId, 
            T.intItemId AS tblMBILOrderTaxCode_intItemId, 
            T.intTransactionDetailTaxId AS tblMBILOrderTaxCode_intTransactionDetailTaxId, 
            T.intInvoiceDetailId AS tblMBILOrderTaxCode_intInvoiceDetailId, 
            T.intTaxGroupMasterId AS tblMBILOrderTaxCode_intTaxGroupMasterId, 
            T.intTaxGroupId AS tblMBILOrderTaxCode_intTaxGroupId, 
            T.intTaxCodeId AS tblMBILOrderTaxCode_intTaxCodeId, 
            T.intTaxClassId AS tblMBILOrderTaxCode_intTaxClassId, 
            T.strTaxableByOtherTaxes AS tblMBILOrderTaxCode_strTaxableByOtherTaxes, 
            T.strCalculationMethod AS tblMBILOrderTaxCode_strCalculationMethod, 
            T.dblRate AS tblMBILOrderTaxCode_dblRate, 
            T.dblExemptionPercent AS tblMBILOrderTaxCode_dblExemptionPercent, 
            T.dblTax AS tblMBILOrderTaxCode_dblTax, 
            T.dblAdjustedTax AS tblMBILOrderTaxCode_dblAdjustedTax, 
            T.dblBaseAdjustedTax AS tblMBILOrderTaxCode_dblBaseAdjustedTax, 
            T.intSalesTaxAccountId AS tblMBILOrderTaxCode_intSalesTaxAccountId, 
            T.ysnSeparateOnInvoice AS tblMBILOrderTaxCode_ysnSeparateOnInvoice, 
            T.ysnCheckoffTax AS tblMBILOrderTaxCode_ysnCheckoffTax, 
            T.strTaxCode AS tblMBILOrderTaxCode_strTaxCode, 
            T.ysnTaxExempt AS tblMBILOrderTaxCode_ysnTaxExempt, 
            T.ysnTaxOnly AS tblMBILOrderTaxCode_ysnTaxOnly, 
            T.ysnInvalidSetup AS tblMBILOrderTaxCode_ysnInvalidSetup, 
            T.strTaxGroup AS tblMBILOrderTaxCode_strTaxGroup, 
            T.strNotes AS tblMBILOrderTaxCode_strNotes, 
            T.intUnitMeasureId AS tblMBILOrderTaxCode_intUnitMeasureId, 
            T.strUnitMeasure AS tblMBILOrderTaxCode_strUnitMeasure, 
            T.intConcurrencyId AS tblMBILOrderTaxCode_intConcurrencyId, 
            True AS _from0
        FROM MBILEntities.tblMBILOrderTaxCode AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for MBILEntities.tblMBILOrder.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView11()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing tblMBILOrder
        [iRely.MobileBilling.Model.tblMBILOrder](T1.tblMBILOrder_intOrderId, T1.tblMBILOrder_intDispatchId, T1.tblMBILOrder_intShiftId, T1.tblMBILOrder_strOrderNumber, T1.tblMBILOrder_strOrderStatus, T1.tblMBILOrder_dtmRequestedDate, T1.tblMBILOrder_intEntityId, T1.tblMBILOrder_intTermId, T1.tblMBILOrder_strComments, T1.tblMBILOrder_intDriverId, T1.tblMBILOrder_intRouteId, T1.tblMBILOrder_intStopNumber, T1.tblMBILOrder_intTaxStateId, T1.tblMBILOrder_intShipToId, T1.tblMBILOrder_intLocationId, T1.tblMBILOrder_intConcurrencyId)
    FROM (
        SELECT 
            T.intOrderId AS tblMBILOrder_intOrderId, 
            T.intDispatchId AS tblMBILOrder_intDispatchId, 
            T.intShiftId AS tblMBILOrder_intShiftId, 
            T.strOrderNumber AS tblMBILOrder_strOrderNumber, 
            T.strOrderStatus AS tblMBILOrder_strOrderStatus, 
            T.dtmRequestedDate AS tblMBILOrder_dtmRequestedDate, 
            T.intEntityId AS tblMBILOrder_intEntityId, 
            T.intTermId AS tblMBILOrder_intTermId, 
            T.strComments AS tblMBILOrder_strComments, 
            T.intDriverId AS tblMBILOrder_intDriverId, 
            T.intRouteId AS tblMBILOrder_intRouteId, 
            T.intStopNumber AS tblMBILOrder_intStopNumber, 
            T.intTaxStateId AS tblMBILOrder_intTaxStateId, 
            T.intShipToId AS tblMBILOrder_intShipToId, 
            T.intLocationId AS tblMBILOrder_intLocationId, 
            T.intConcurrencyId AS tblMBILOrder_intConcurrencyId, 
            True AS _from0
        FROM CodeFirstDatabase.tblMBILOrder AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for MBILEntities.tblMBILOrderItem.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView12()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing tblMBILOrderItem
        [iRely.MobileBilling.Model.tblMBILOrderItem](T1.tblMBILOrderItem_intOrderItemId, T1.tblMBILOrderItem_intOrderId, T1.tblMBILOrderItem_intSiteId, T1.tblMBILOrderItem_intContractDetailId, T1.tblMBILOrderItem_intItemId, T1.tblMBILOrderItem_intItemUOMId, T1.tblMBILOrderItem_dblQuantity, T1.tblMBILOrderItem_dblPrice, T1.tblMBILOrderItem_intConcurrencyId)
    FROM (
        SELECT 
            T.intOrderItemId AS tblMBILOrderItem_intOrderItemId, 
            T.intOrderId AS tblMBILOrderItem_intOrderId, 
            T.intSiteId AS tblMBILOrderItem_intSiteId, 
            T.intContractDetailId AS tblMBILOrderItem_intContractDetailId, 
            T.intItemId AS tblMBILOrderItem_intItemId, 
            T.intItemUOMId AS tblMBILOrderItem_intItemUOMId, 
            T.dblQuantity AS tblMBILOrderItem_dblQuantity, 
            T.dblPrice AS tblMBILOrderItem_dblPrice, 
            T.intConcurrencyId AS tblMBILOrderItem_intConcurrencyId, 
            True AS _from0
        FROM CodeFirstDatabase.tblMBILOrderItem AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for MBILEntities.tblMBILOrderTaxCode.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView13()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing tblMBILOrderTaxCode
        [iRely.MobileBilling.Model.tblMBILOrderTaxCode](T1.tblMBILOrderTaxCode_intOrderTaxId, T1.tblMBILOrderTaxCode_intOrderItemId, T1.tblMBILOrderTaxCode_intItemId, T1.tblMBILOrderTaxCode_intTransactionDetailTaxId, T1.tblMBILOrderTaxCode_intInvoiceDetailId, T1.tblMBILOrderTaxCode_intTaxGroupMasterId, T1.tblMBILOrderTaxCode_intTaxGroupId, T1.tblMBILOrderTaxCode_intTaxCodeId, T1.tblMBILOrderTaxCode_intTaxClassId, T1.tblMBILOrderTaxCode_strTaxableByOtherTaxes, T1.tblMBILOrderTaxCode_strCalculationMethod, T1.tblMBILOrderTaxCode_dblRate, T1.tblMBILOrderTaxCode_dblExemptionPercent, T1.tblMBILOrderTaxCode_dblTax, T1.tblMBILOrderTaxCode_dblAdjustedTax, T1.tblMBILOrderTaxCode_dblBaseAdjustedTax, T1.tblMBILOrderTaxCode_intSalesTaxAccountId, T1.tblMBILOrderTaxCode_ysnSeparateOnInvoice, T1.tblMBILOrderTaxCode_ysnCheckoffTax, T1.tblMBILOrderTaxCode_strTaxCode, T1.tblMBILOrderTaxCode_ysnTaxExempt, T1.tblMBILOrderTaxCode_ysnTaxOnly, T1.tblMBILOrderTaxCode_ysnInvalidSetup, T1.tblMBILOrderTaxCode_strTaxGroup, T1.tblMBILOrderTaxCode_strNotes, T1.tblMBILOrderTaxCode_intUnitMeasureId, T1.tblMBILOrderTaxCode_strUnitMeasure, T1.tblMBILOrderTaxCode_intConcurrencyId)
    FROM (
        SELECT 
            T.intOrderTaxId AS tblMBILOrderTaxCode_intOrderTaxId, 
            T.intOrderItemId AS tblMBILOrderTaxCode_intOrderItemId, 
            T.intItemId AS tblMBILOrderTaxCode_intItemId, 
            T.intTransactionDetailTaxId AS tblMBILOrderTaxCode_intTransactionDetailTaxId, 
            T.intInvoiceDetailId AS tblMBILOrderTaxCode_intInvoiceDetailId, 
            T.intTaxGroupMasterId AS tblMBILOrderTaxCode_intTaxGroupMasterId, 
            T.intTaxGroupId AS tblMBILOrderTaxCode_intTaxGroupId, 
            T.intTaxCodeId AS tblMBILOrderTaxCode_intTaxCodeId, 
            T.intTaxClassId AS tblMBILOrderTaxCode_intTaxClassId, 
            T.strTaxableByOtherTaxes AS tblMBILOrderTaxCode_strTaxableByOtherTaxes, 
            T.strCalculationMethod AS tblMBILOrderTaxCode_strCalculationMethod, 
            T.dblRate AS tblMBILOrderTaxCode_dblRate, 
            T.dblExemptionPercent AS tblMBILOrderTaxCode_dblExemptionPercent, 
            T.dblTax AS tblMBILOrderTaxCode_dblTax, 
            T.dblAdjustedTax AS tblMBILOrderTaxCode_dblAdjustedTax, 
            T.dblBaseAdjustedTax AS tblMBILOrderTaxCode_dblBaseAdjustedTax, 
            T.intSalesTaxAccountId AS tblMBILOrderTaxCode_intSalesTaxAccountId, 
            T.ysnSeparateOnInvoice AS tblMBILOrderTaxCode_ysnSeparateOnInvoice, 
            T.ysnCheckoffTax AS tblMBILOrderTaxCode_ysnCheckoffTax, 
            T.strTaxCode AS tblMBILOrderTaxCode_strTaxCode, 
            T.ysnTaxExempt AS tblMBILOrderTaxCode_ysnTaxExempt, 
            T.ysnTaxOnly AS tblMBILOrderTaxCode_ysnTaxOnly, 
            T.ysnInvalidSetup AS tblMBILOrderTaxCode_ysnInvalidSetup, 
            T.strTaxGroup AS tblMBILOrderTaxCode_strTaxGroup, 
            T.strNotes AS tblMBILOrderTaxCode_strNotes, 
            T.intUnitMeasureId AS tblMBILOrderTaxCode_intUnitMeasureId, 
            T.strUnitMeasure AS tblMBILOrderTaxCode_strUnitMeasure, 
            T.intConcurrencyId AS tblMBILOrderTaxCode_intConcurrencyId, 
            True AS _from0
        FROM CodeFirstDatabase.tblMBILOrderTaxCode AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.vyuMBILOrder.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView14()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing vyuMBILOrder
        [CodeFirstDatabaseSchema.vyuMBILOrder](T1.vyuMBILOrder_intOrderId, T1.vyuMBILOrder_intDispatchId, T1.vyuMBILOrder_strOrderNumber, T1.vyuMBILOrder_strOrderStatus, T1.vyuMBILOrder_dtmRequestedDate, T1.vyuMBILOrder_intEntityId, T1.vyuMBILOrder_strCustomerNumber, T1.vyuMBILOrder_strCustomerName, T1.vyuMBILOrder_intTermId, T1.vyuMBILOrder_strTerm, T1.vyuMBILOrder_strComments, T1.vyuMBILOrder_intDriverId, T1.vyuMBILOrder_strDriverNo, T1.vyuMBILOrder_strDriverName, T1.vyuMBILOrder_intRouteId, T1.vyuMBILOrder_strRouteId, T1.vyuMBILOrder_intSequence, T1.vyuMBILOrder_intStopNumber, T1.vyuMBILOrder_intShiftId, T1.vyuMBILOrder_intShiftNumber)
    FROM (
        SELECT 
            T.intOrderId AS vyuMBILOrder_intOrderId, 
            T.intDispatchId AS vyuMBILOrder_intDispatchId, 
            T.strOrderNumber AS vyuMBILOrder_strOrderNumber, 
            T.strOrderStatus AS vyuMBILOrder_strOrderStatus, 
            T.dtmRequestedDate AS vyuMBILOrder_dtmRequestedDate, 
            T.intEntityId AS vyuMBILOrder_intEntityId, 
            T.strCustomerNumber AS vyuMBILOrder_strCustomerNumber, 
            T.strCustomerName AS vyuMBILOrder_strCustomerName, 
            T.intTermId AS vyuMBILOrder_intTermId, 
            T.strTerm AS vyuMBILOrder_strTerm, 
            T.strComments AS vyuMBILOrder_strComments, 
            T.intDriverId AS vyuMBILOrder_intDriverId, 
            T.strDriverNo AS vyuMBILOrder_strDriverNo, 
            T.strDriverName AS vyuMBILOrder_strDriverName, 
            T.intRouteId AS vyuMBILOrder_intRouteId, 
            T.strRouteId AS vyuMBILOrder_strRouteId, 
            T.intSequence AS vyuMBILOrder_intSequence, 
            T.intStopNumber AS vyuMBILOrder_intStopNumber, 
            T.intShiftId AS vyuMBILOrder_intShiftId, 
            T.intShiftNumber AS vyuMBILOrder_intShiftNumber, 
            True AS _from0
        FROM MBILEntities.vyuMBILOrders AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for MBILEntities.vyuMBILOrders.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView15()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing vyuMBILOrders
        [iRely.MobileBilling.Model.vyuMBILOrder](T1.vyuMBILOrder_intOrderId, T1.vyuMBILOrder_intDispatchId, T1.vyuMBILOrder_strOrderNumber, T1.vyuMBILOrder_strOrderStatus, T1.vyuMBILOrder_dtmRequestedDate, T1.vyuMBILOrder_intEntityId, T1.vyuMBILOrder_strCustomerNumber, T1.vyuMBILOrder_strCustomerName, T1.vyuMBILOrder_intTermId, T1.vyuMBILOrder_strTerm, T1.vyuMBILOrder_strComments, T1.vyuMBILOrder_intDriverId, T1.vyuMBILOrder_strDriverNo, T1.vyuMBILOrder_strDriverName, T1.vyuMBILOrder_intRouteId, T1.vyuMBILOrder_strRouteId, T1.vyuMBILOrder_intSequence, T1.vyuMBILOrder_intStopNumber, T1.vyuMBILOrder_intShiftId, T1.vyuMBILOrder_intShiftNumber)
    FROM (
        SELECT 
            T.intOrderId AS vyuMBILOrder_intOrderId, 
            T.intDispatchId AS vyuMBILOrder_intDispatchId, 
            T.strOrderNumber AS vyuMBILOrder_strOrderNumber, 
            T.strOrderStatus AS vyuMBILOrder_strOrderStatus, 
            T.dtmRequestedDate AS vyuMBILOrder_dtmRequestedDate, 
            T.intEntityId AS vyuMBILOrder_intEntityId, 
            T.strCustomerNumber AS vyuMBILOrder_strCustomerNumber, 
            T.strCustomerName AS vyuMBILOrder_strCustomerName, 
            T.intTermId AS vyuMBILOrder_intTermId, 
            T.strTerm AS vyuMBILOrder_strTerm, 
            T.strComments AS vyuMBILOrder_strComments, 
            T.intDriverId AS vyuMBILOrder_intDriverId, 
            T.strDriverNo AS vyuMBILOrder_strDriverNo, 
            T.strDriverName AS vyuMBILOrder_strDriverName, 
            T.intRouteId AS vyuMBILOrder_intRouteId, 
            T.strRouteId AS vyuMBILOrder_strRouteId, 
            T.intSequence AS vyuMBILOrder_intSequence, 
            T.intStopNumber AS vyuMBILOrder_intStopNumber, 
            T.intShiftId AS vyuMBILOrder_intShiftId, 
            T.intShiftNumber AS vyuMBILOrder_intShiftNumber, 
            True AS _from0
        FROM CodeFirstDatabase.vyuMBILOrder AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.vyuMBILOrderItem.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView16()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing vyuMBILOrderItem
        [CodeFirstDatabaseSchema.vyuMBILOrderItem](T1.vyuMBILOrderItem_intOrderItemId, T1.vyuMBILOrderItem_intOrderId, T1.vyuMBILOrderItem_strOrderNumber, T1.vyuMBILOrderItem_strOrderStatus, T1.vyuMBILOrderItem_dtmRequestedDate, T1.vyuMBILOrderItem_intEntityId, T1.vyuMBILOrderItem_strCustomerNumber, T1.vyuMBILOrderItem_strCustomerName, T1.vyuMBILOrderItem_intTermId, T1.vyuMBILOrderItem_strTerm, T1.vyuMBILOrderItem_strComments, T1.vyuMBILOrderItem_intDriverId, T1.vyuMBILOrderItem_strDriverNo, T1.vyuMBILOrderItem_strDriverName, T1.vyuMBILOrderItem_intRouteId, T1.vyuMBILOrderItem_strRouteId, T1.vyuMBILOrderItem_intSequence, T1.vyuMBILOrderItem_intStopNumber, T1.vyuMBILOrderItem_intSiteId, T1.vyuMBILOrderItem_intSiteNumber, T1.vyuMBILOrderItem_strSiteDescription, T1.vyuMBILOrderItem_strSiteAddress, T1.vyuMBILOrderItem_strCity, T1.vyuMBILOrderItem_strState, T1.vyuMBILOrderItem_strZipCode, T1.vyuMBILOrderItem_intItemId, T1.vyuMBILOrderItem_strItemNo, T1.vyuMBILOrderItem_strItemDescription, T1.vyuMBILOrderItem_intContractDetailId, T1.vyuMBILOrderItem_strContractNumber, T1.vyuMBILOrderItem_intContractSeq, T1.vyuMBILOrderItem_intItemUOMId, T1.vyuMBILOrderItem_strUOM, T1.vyuMBILOrderItem_dblQuantity, T1.vyuMBILOrderItem_dblPrice, T1.vyuMBILOrderItem_dblTotal)
    FROM (
        SELECT 
            T.intOrderItemId AS vyuMBILOrderItem_intOrderItemId, 
            T.intOrderId AS vyuMBILOrderItem_intOrderId, 
            T.strOrderNumber AS vyuMBILOrderItem_strOrderNumber, 
            T.strOrderStatus AS vyuMBILOrderItem_strOrderStatus, 
            T.dtmRequestedDate AS vyuMBILOrderItem_dtmRequestedDate, 
            T.intEntityId AS vyuMBILOrderItem_intEntityId, 
            T.strCustomerNumber AS vyuMBILOrderItem_strCustomerNumber, 
            T.strCustomerName AS vyuMBILOrderItem_strCustomerName, 
            T.intTermId AS vyuMBILOrderItem_intTermId, 
            T.strTerm AS vyuMBILOrderItem_strTerm, 
            T.strComments AS vyuMBILOrderItem_strComments, 
            T.intDriverId AS vyuMBILOrderItem_intDriverId, 
            T.strDriverNo AS vyuMBILOrderItem_strDriverNo, 
            T.strDriverName AS vyuMBILOrderItem_strDriverName, 
            T.intRouteId AS vyuMBILOrderItem_intRouteId, 
            T.strRouteId AS vyuMBILOrderItem_strRouteId, 
            T.intSequence AS vyuMBILOrderItem_intSequence, 
            T.intStopNumber AS vyuMBILOrderItem_intStopNumber, 
            T.intSiteId AS vyuMBILOrderItem_intSiteId, 
            T.intSiteNumber AS vyuMBILOrderItem_intSiteNumber, 
            T.strSiteDescription AS vyuMBILOrderItem_strSiteDescription, 
            T.strSiteAddress AS vyuMBILOrderItem_strSiteAddress, 
            T.strCity AS vyuMBILOrderItem_strCity, 
            T.strState AS vyuMBILOrderItem_strState, 
            T.strZipCode AS vyuMBILOrderItem_strZipCode, 
            T.intItemId AS vyuMBILOrderItem_intItemId, 
            T.strItemNo AS vyuMBILOrderItem_strItemNo, 
            T.strItemDescription AS vyuMBILOrderItem_strItemDescription, 
            T.intContractDetailId AS vyuMBILOrderItem_intContractDetailId, 
            T.strContractNumber AS vyuMBILOrderItem_strContractNumber, 
            T.intContractSeq AS vyuMBILOrderItem_intContractSeq, 
            T.intItemUOMId AS vyuMBILOrderItem_intItemUOMId, 
            T.strUOM AS vyuMBILOrderItem_strUOM, 
            T.dblQuantity AS vyuMBILOrderItem_dblQuantity, 
            T.dblPrice AS vyuMBILOrderItem_dblPrice, 
            T.dblTotal AS vyuMBILOrderItem_dblTotal, 
            True AS _from0
        FROM MBILEntities.vyuMBILOrderItems AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for MBILEntities.vyuMBILOrderItems.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView17()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing vyuMBILOrderItems
        [iRely.MobileBilling.Model.vyuMBILOrderItem](T1.vyuMBILOrderItem_intOrderItemId, T1.vyuMBILOrderItem_intOrderId, T1.vyuMBILOrderItem_strOrderNumber, T1.vyuMBILOrderItem_strOrderStatus, T1.vyuMBILOrderItem_dtmRequestedDate, T1.vyuMBILOrderItem_intEntityId, T1.vyuMBILOrderItem_strCustomerNumber, T1.vyuMBILOrderItem_strCustomerName, T1.vyuMBILOrderItem_intTermId, T1.vyuMBILOrderItem_strTerm, T1.vyuMBILOrderItem_strComments, T1.vyuMBILOrderItem_intDriverId, T1.vyuMBILOrderItem_strDriverNo, T1.vyuMBILOrderItem_strDriverName, T1.vyuMBILOrderItem_intRouteId, T1.vyuMBILOrderItem_strRouteId, T1.vyuMBILOrderItem_intSequence, T1.vyuMBILOrderItem_intStopNumber, T1.vyuMBILOrderItem_intSiteId, T1.vyuMBILOrderItem_intSiteNumber, T1.vyuMBILOrderItem_strSiteDescription, T1.vyuMBILOrderItem_strSiteAddress, T1.vyuMBILOrderItem_strCity, T1.vyuMBILOrderItem_strState, T1.vyuMBILOrderItem_strZipCode, T1.vyuMBILOrderItem_intItemId, T1.vyuMBILOrderItem_strItemNo, T1.vyuMBILOrderItem_strItemDescription, T1.vyuMBILOrderItem_intContractDetailId, T1.vyuMBILOrderItem_strContractNumber, T1.vyuMBILOrderItem_intContractSeq, T1.vyuMBILOrderItem_intItemUOMId, T1.vyuMBILOrderItem_strUOM, T1.vyuMBILOrderItem_dblQuantity, T1.vyuMBILOrderItem_dblPrice, T1.vyuMBILOrderItem_dblTotal)
    FROM (
        SELECT 
            T.intOrderItemId AS vyuMBILOrderItem_intOrderItemId, 
            T.intOrderId AS vyuMBILOrderItem_intOrderId, 
            T.strOrderNumber AS vyuMBILOrderItem_strOrderNumber, 
            T.strOrderStatus AS vyuMBILOrderItem_strOrderStatus, 
            T.dtmRequestedDate AS vyuMBILOrderItem_dtmRequestedDate, 
            T.intEntityId AS vyuMBILOrderItem_intEntityId, 
            T.strCustomerNumber AS vyuMBILOrderItem_strCustomerNumber, 
            T.strCustomerName AS vyuMBILOrderItem_strCustomerName, 
            T.intTermId AS vyuMBILOrderItem_intTermId, 
            T.strTerm AS vyuMBILOrderItem_strTerm, 
            T.strComments AS vyuMBILOrderItem_strComments, 
            T.intDriverId AS vyuMBILOrderItem_intDriverId, 
            T.strDriverNo AS vyuMBILOrderItem_strDriverNo, 
            T.strDriverName AS vyuMBILOrderItem_strDriverName, 
            T.intRouteId AS vyuMBILOrderItem_intRouteId, 
            T.strRouteId AS vyuMBILOrderItem_strRouteId, 
            T.intSequence AS vyuMBILOrderItem_intSequence, 
            T.intStopNumber AS vyuMBILOrderItem_intStopNumber, 
            T.intSiteId AS vyuMBILOrderItem_intSiteId, 
            T.intSiteNumber AS vyuMBILOrderItem_intSiteNumber, 
            T.strSiteDescription AS vyuMBILOrderItem_strSiteDescription, 
            T.strSiteAddress AS vyuMBILOrderItem_strSiteAddress, 
            T.strCity AS vyuMBILOrderItem_strCity, 
            T.strState AS vyuMBILOrderItem_strState, 
            T.strZipCode AS vyuMBILOrderItem_strZipCode, 
            T.intItemId AS vyuMBILOrderItem_intItemId, 
            T.strItemNo AS vyuMBILOrderItem_strItemNo, 
            T.strItemDescription AS vyuMBILOrderItem_strItemDescription, 
            T.intContractDetailId AS vyuMBILOrderItem_intContractDetailId, 
            T.strContractNumber AS vyuMBILOrderItem_strContractNumber, 
            T.intContractSeq AS vyuMBILOrderItem_intContractSeq, 
            T.intItemUOMId AS vyuMBILOrderItem_intItemUOMId, 
            T.strUOM AS vyuMBILOrderItem_strUOM, 
            T.dblQuantity AS vyuMBILOrderItem_dblQuantity, 
            T.dblPrice AS vyuMBILOrderItem_dblPrice, 
            T.dblTotal AS vyuMBILOrderItem_dblTotal, 
            True AS _from0
        FROM CodeFirstDatabase.vyuMBILOrderItem AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.vyuMBILOrderTaxCode.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView18()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing vyuMBILOrderTaxCode
        [CodeFirstDatabaseSchema.vyuMBILOrderTaxCode](T1.vyuMBILOrderTaxCode_intOrderTaxId, T1.vyuMBILOrderTaxCode_intOrderItemId, T1.vyuMBILOrderTaxCode_intItemId, T1.vyuMBILOrderTaxCode_intTransactionDetailTaxId, T1.vyuMBILOrderTaxCode_intInvoiceDetailId, T1.vyuMBILOrderTaxCode_intTaxGroupMasterId, T1.vyuMBILOrderTaxCode_intTaxGroupId, T1.vyuMBILOrderTaxCode_intTaxCodeId, T1.vyuMBILOrderTaxCode_intTaxClassId, T1.vyuMBILOrderTaxCode_strTaxableByOtherTaxes, T1.vyuMBILOrderTaxCode_strCalculationMethod, T1.vyuMBILOrderTaxCode_dblRate, T1.vyuMBILOrderTaxCode_dblExemptionPercent, T1.vyuMBILOrderTaxCode_dblTax, T1.vyuMBILOrderTaxCode_dblAdjustedTax, T1.vyuMBILOrderTaxCode_dblBaseAdjustedTax, T1.vyuMBILOrderTaxCode_intSalesTaxAccountId, T1.vyuMBILOrderTaxCode_ysnSeparateOnInvoice, T1.vyuMBILOrderTaxCode_ysnCheckoffTax, T1.vyuMBILOrderTaxCode_strTaxCode, T1.vyuMBILOrderTaxCode_ysnTaxExempt, T1.vyuMBILOrderTaxCode_ysnTaxOnly, T1.vyuMBILOrderTaxCode_ysnInvalidSetup, T1.vyuMBILOrderTaxCode_strTaxGroup, T1.vyuMBILOrderTaxCode_strNotes, T1.vyuMBILOrderTaxCode_intUnitMeasureId, T1.vyuMBILOrderTaxCode_strUnitMeasure, T1.vyuMBILOrderTaxCode_intDriverId, T1.vyuMBILOrderTaxCode_strDriverNo, T1.vyuMBILOrderTaxCode_strDriverName)
    FROM (
        SELECT 
            T.intOrderTaxId AS vyuMBILOrderTaxCode_intOrderTaxId, 
            T.intOrderItemId AS vyuMBILOrderTaxCode_intOrderItemId, 
            T.intItemId AS vyuMBILOrderTaxCode_intItemId, 
            T.intTransactionDetailTaxId AS vyuMBILOrderTaxCode_intTransactionDetailTaxId, 
            T.intInvoiceDetailId AS vyuMBILOrderTaxCode_intInvoiceDetailId, 
            T.intTaxGroupMasterId AS vyuMBILOrderTaxCode_intTaxGroupMasterId, 
            T.intTaxGroupId AS vyuMBILOrderTaxCode_intTaxGroupId, 
            T.intTaxCodeId AS vyuMBILOrderTaxCode_intTaxCodeId, 
            T.intTaxClassId AS vyuMBILOrderTaxCode_intTaxClassId, 
            T.strTaxableByOtherTaxes AS vyuMBILOrderTaxCode_strTaxableByOtherTaxes, 
            T.strCalculationMethod AS vyuMBILOrderTaxCode_strCalculationMethod, 
            T.dblRate AS vyuMBILOrderTaxCode_dblRate, 
            T.dblExemptionPercent AS vyuMBILOrderTaxCode_dblExemptionPercent, 
            T.dblTax AS vyuMBILOrderTaxCode_dblTax, 
            T.dblAdjustedTax AS vyuMBILOrderTaxCode_dblAdjustedTax, 
            T.dblBaseAdjustedTax AS vyuMBILOrderTaxCode_dblBaseAdjustedTax, 
            T.intSalesTaxAccountId AS vyuMBILOrderTaxCode_intSalesTaxAccountId, 
            T.ysnSeparateOnInvoice AS vyuMBILOrderTaxCode_ysnSeparateOnInvoice, 
            T.ysnCheckoffTax AS vyuMBILOrderTaxCode_ysnCheckoffTax, 
            T.strTaxCode AS vyuMBILOrderTaxCode_strTaxCode, 
            T.ysnTaxExempt AS vyuMBILOrderTaxCode_ysnTaxExempt, 
            T.ysnTaxOnly AS vyuMBILOrderTaxCode_ysnTaxOnly, 
            T.ysnInvalidSetup AS vyuMBILOrderTaxCode_ysnInvalidSetup, 
            T.strTaxGroup AS vyuMBILOrderTaxCode_strTaxGroup, 
            T.strNotes AS vyuMBILOrderTaxCode_strNotes, 
            T.intUnitMeasureId AS vyuMBILOrderTaxCode_intUnitMeasureId, 
            T.strUnitMeasure AS vyuMBILOrderTaxCode_strUnitMeasure, 
            T.intDriverId AS vyuMBILOrderTaxCode_intDriverId, 
            T.strDriverNo AS vyuMBILOrderTaxCode_strDriverNo, 
            T.strDriverName AS vyuMBILOrderTaxCode_strDriverName, 
            True AS _from0
        FROM MBILEntities.vyuMBILOrderTaxCodes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for MBILEntities.vyuMBILOrderTaxCodes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView19()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing vyuMBILOrderTaxCodes
        [iRely.MobileBilling.Model.vyuMBILOrderTaxCode](T1.vyuMBILOrderTaxCode_intOrderTaxId, T1.vyuMBILOrderTaxCode_intOrderItemId, T1.vyuMBILOrderTaxCode_intItemId, T1.vyuMBILOrderTaxCode_intTransactionDetailTaxId, T1.vyuMBILOrderTaxCode_intInvoiceDetailId, T1.vyuMBILOrderTaxCode_intTaxGroupMasterId, T1.vyuMBILOrderTaxCode_intTaxGroupId, T1.vyuMBILOrderTaxCode_intTaxCodeId, T1.vyuMBILOrderTaxCode_intTaxClassId, T1.vyuMBILOrderTaxCode_strTaxableByOtherTaxes, T1.vyuMBILOrderTaxCode_strCalculationMethod, T1.vyuMBILOrderTaxCode_dblRate, T1.vyuMBILOrderTaxCode_dblExemptionPercent, T1.vyuMBILOrderTaxCode_dblTax, T1.vyuMBILOrderTaxCode_dblAdjustedTax, T1.vyuMBILOrderTaxCode_dblBaseAdjustedTax, T1.vyuMBILOrderTaxCode_intSalesTaxAccountId, T1.vyuMBILOrderTaxCode_ysnSeparateOnInvoice, T1.vyuMBILOrderTaxCode_ysnCheckoffTax, T1.vyuMBILOrderTaxCode_strTaxCode, T1.vyuMBILOrderTaxCode_ysnTaxExempt, T1.vyuMBILOrderTaxCode_ysnTaxOnly, T1.vyuMBILOrderTaxCode_ysnInvalidSetup, T1.vyuMBILOrderTaxCode_strTaxGroup, T1.vyuMBILOrderTaxCode_strNotes, T1.vyuMBILOrderTaxCode_intUnitMeasureId, T1.vyuMBILOrderTaxCode_strUnitMeasure, T1.vyuMBILOrderTaxCode_intDriverId, T1.vyuMBILOrderTaxCode_strDriverNo, T1.vyuMBILOrderTaxCode_strDriverName)
    FROM (
        SELECT 
            T.intOrderTaxId AS vyuMBILOrderTaxCode_intOrderTaxId, 
            T.intOrderItemId AS vyuMBILOrderTaxCode_intOrderItemId, 
            T.intItemId AS vyuMBILOrderTaxCode_intItemId, 
            T.intTransactionDetailTaxId AS vyuMBILOrderTaxCode_intTransactionDetailTaxId, 
            T.intInvoiceDetailId AS vyuMBILOrderTaxCode_intInvoiceDetailId, 
            T.intTaxGroupMasterId AS vyuMBILOrderTaxCode_intTaxGroupMasterId, 
            T.intTaxGroupId AS vyuMBILOrderTaxCode_intTaxGroupId, 
            T.intTaxCodeId AS vyuMBILOrderTaxCode_intTaxCodeId, 
            T.intTaxClassId AS vyuMBILOrderTaxCode_intTaxClassId, 
            T.strTaxableByOtherTaxes AS vyuMBILOrderTaxCode_strTaxableByOtherTaxes, 
            T.strCalculationMethod AS vyuMBILOrderTaxCode_strCalculationMethod, 
            T.dblRate AS vyuMBILOrderTaxCode_dblRate, 
            T.dblExemptionPercent AS vyuMBILOrderTaxCode_dblExemptionPercent, 
            T.dblTax AS vyuMBILOrderTaxCode_dblTax, 
            T.dblAdjustedTax AS vyuMBILOrderTaxCode_dblAdjustedTax, 
            T.dblBaseAdjustedTax AS vyuMBILOrderTaxCode_dblBaseAdjustedTax, 
            T.intSalesTaxAccountId AS vyuMBILOrderTaxCode_intSalesTaxAccountId, 
            T.ysnSeparateOnInvoice AS vyuMBILOrderTaxCode_ysnSeparateOnInvoice, 
            T.ysnCheckoffTax AS vyuMBILOrderTaxCode_ysnCheckoffTax, 
            T.strTaxCode AS vyuMBILOrderTaxCode_strTaxCode, 
            T.ysnTaxExempt AS vyuMBILOrderTaxCode_ysnTaxExempt, 
            T.ysnTaxOnly AS vyuMBILOrderTaxCode_ysnTaxOnly, 
            T.ysnInvalidSetup AS vyuMBILOrderTaxCode_ysnInvalidSetup, 
            T.strTaxGroup AS vyuMBILOrderTaxCode_strTaxGroup, 
            T.strNotes AS vyuMBILOrderTaxCode_strNotes, 
            T.intUnitMeasureId AS vyuMBILOrderTaxCode_intUnitMeasureId, 
            T.strUnitMeasure AS vyuMBILOrderTaxCode_strUnitMeasure, 
            T.intDriverId AS vyuMBILOrderTaxCode_intDriverId, 
            T.strDriverNo AS vyuMBILOrderTaxCode_strDriverNo, 
            T.strDriverName AS vyuMBILOrderTaxCode_strDriverName, 
            True AS _from0
        FROM CodeFirstDatabase.vyuMBILOrderTaxCode AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.vyuMBILInvoice.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView20()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing vyuMBILInvoice
        [CodeFirstDatabaseSchema.vyuMBILInvoice](T1.vyuMBILInvoice_intInvoiceId, T1.vyuMBILInvoice_strInvoiceNo, T1.vyuMBILInvoice_intOrderId, T1.vyuMBILInvoice_strOrderNumber, T1.vyuMBILInvoice_intEntityCustomerId, T1.vyuMBILInvoice_strCustomerNo, T1.vyuMBILInvoice_strCustomerName, T1.vyuMBILInvoice_intLocationId, T1.vyuMBILInvoice_strLocationName, T1.vyuMBILInvoice_strType, T1.vyuMBILInvoice_dtmDeliveryDate, T1.vyuMBILInvoice_dtmInvoiceDate, T1.vyuMBILInvoice_intDriverId, T1.vyuMBILInvoice_strDriverNo, T1.vyuMBILInvoice_strDriverName, T1.vyuMBILInvoice_intShiftId, T1.vyuMBILInvoice_intShiftNumber, T1.vyuMBILInvoice_strShiftNo, T1.vyuMBILInvoice_strComments, T1.vyuMBILInvoice_strVoidComments, T1.vyuMBILInvoice_dblTotal, T1.vyuMBILInvoice_intTermId, T1.vyuMBILInvoice_strTerm, T1.vyuMBILInvoice_ysnPosted, T1.vyuMBILInvoice_ysnVoided, T1.vyuMBILInvoice_dtmPostedDate, T1.vyuMBILInvoice_dtmVoidedDate, T1.vyuMBILInvoice_inti21InvoiceId, T1.vyuMBILInvoice_stri21InvoiceNo, T1.vyuMBILInvoice_strStatus, T1.vyuMBILInvoice_dblTotalBefTax, T1.vyuMBILInvoice_dblTotalTaxAmount, T1.vyuMBILInvoice_intPaymentMethodId, T1.vyuMBILInvoice_strPaymentMethod, T1.vyuMBILInvoice_strPaymentInfo, T1.vyuMBILInvoice_intConcurrencyId)
    FROM (
        SELECT 
            T.intInvoiceId AS vyuMBILInvoice_intInvoiceId, 
            T.strInvoiceNo AS vyuMBILInvoice_strInvoiceNo, 
            T.intOrderId AS vyuMBILInvoice_intOrderId, 
            T.strOrderNumber AS vyuMBILInvoice_strOrderNumber, 
            T.intEntityCustomerId AS vyuMBILInvoice_intEntityCustomerId, 
            T.strCustomerNo AS vyuMBILInvoice_strCustomerNo, 
            T.strCustomerName AS vyuMBILInvoice_strCustomerName, 
            T.intLocationId AS vyuMBILInvoice_intLocationId, 
            T.strLocationName AS vyuMBILInvoice_strLocationName, 
            T.strType AS vyuMBILInvoice_strType, 
            T.dtmDeliveryDate AS vyuMBILInvoice_dtmDeliveryDate, 
            T.dtmInvoiceDate AS vyuMBILInvoice_dtmInvoiceDate, 
            T.intDriverId AS vyuMBILInvoice_intDriverId, 
            T.strDriverNo AS vyuMBILInvoice_strDriverNo, 
            T.strDriverName AS vyuMBILInvoice_strDriverName, 
            T.intShiftId AS vyuMBILInvoice_intShiftId, 
            T.intShiftNumber AS vyuMBILInvoice_intShiftNumber, 
            T.strShiftNo AS vyuMBILInvoice_strShiftNo, 
            T.strComments AS vyuMBILInvoice_strComments, 
            T.strVoidComments AS vyuMBILInvoice_strVoidComments, 
            T.dblTotal AS vyuMBILInvoice_dblTotal, 
            T.intTermId AS vyuMBILInvoice_intTermId, 
            T.strTerm AS vyuMBILInvoice_strTerm, 
            T.ysnPosted AS vyuMBILInvoice_ysnPosted, 
            T.ysnVoided AS vyuMBILInvoice_ysnVoided, 
            T.dtmPostedDate AS vyuMBILInvoice_dtmPostedDate, 
            T.dtmVoidedDate AS vyuMBILInvoice_dtmVoidedDate, 
            T.inti21InvoiceId AS vyuMBILInvoice_inti21InvoiceId, 
            T.stri21InvoiceNo AS vyuMBILInvoice_stri21InvoiceNo, 
            T.strStatus AS vyuMBILInvoice_strStatus, 
            T.dblTotalBefTax AS vyuMBILInvoice_dblTotalBefTax, 
            T.dblTotalTaxAmount AS vyuMBILInvoice_dblTotalTaxAmount, 
            T.intPaymentMethodId AS vyuMBILInvoice_intPaymentMethodId, 
            T.strPaymentMethod AS vyuMBILInvoice_strPaymentMethod, 
            T.strPaymentInfo AS vyuMBILInvoice_strPaymentInfo, 
            T.intConcurrencyId AS vyuMBILInvoice_intConcurrencyId, 
            True AS _from0
        FROM MBILEntities.vyuMBILInvoices AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.vyuMBILInvoiceItem.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView21()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing vyuMBILInvoiceItem
        [CodeFirstDatabaseSchema.vyuMBILInvoiceItem](T1.vyuMBILInvoiceItem_intInvoiceItemId, T1.vyuMBILInvoiceItem_intInvoiceId, T1.vyuMBILInvoiceItem_strInvoiceNo, T1.vyuMBILInvoiceItem_intOrderId, T1.vyuMBILInvoiceItem_strOrderNumber, T1.vyuMBILInvoiceItem_intEntityCustomerId, T1.vyuMBILInvoiceItem_strCustomerNo, T1.vyuMBILInvoiceItem_strCustomerName, T1.vyuMBILInvoiceItem_intLocationId, T1.vyuMBILInvoiceItem_strLocationName, T1.vyuMBILInvoiceItem_strType, T1.vyuMBILInvoiceItem_dtmDeliveryDate, T1.vyuMBILInvoiceItem_dtmInvoiceDate, T1.vyuMBILInvoiceItem_intDriverId, T1.vyuMBILInvoiceItem_strDriverNo, T1.vyuMBILInvoiceItem_strDriverName, T1.vyuMBILInvoiceItem_intShiftId, T1.vyuMBILInvoiceItem_intShiftNumber, T1.vyuMBILInvoiceItem_strShiftNo, T1.vyuMBILInvoiceItem_strComments, T1.vyuMBILInvoiceItem_dblTotal, T1.vyuMBILInvoiceItem_intTermId, T1.vyuMBILInvoiceItem_strTerm, T1.vyuMBILInvoiceItem_ysnPosted, T1.vyuMBILInvoiceItem_inti21InvoiceId, T1.vyuMBILInvoiceItem_stri21InvoiceNo, T1.vyuMBILInvoiceItem_strStatus, T1.vyuMBILInvoiceItem_intSiteId, T1.vyuMBILInvoiceItem_intSiteNumber, T1.vyuMBILInvoiceItem_strSiteDescription, T1.vyuMBILInvoiceItem_strSiteAddress, T1.vyuMBILInvoiceItem_strCity, T1.vyuMBILInvoiceItem_strState, T1.vyuMBILInvoiceItem_strZipCode, T1.vyuMBILInvoiceItem_strCountry, T1.vyuMBILInvoiceItem_strSiteStatus, T1.vyuMBILInvoiceItem_intItemId, T1.vyuMBILInvoiceItem_strItemNo, T1.vyuMBILInvoiceItem_strItemDescription, T1.vyuMBILInvoiceItem_intItemUOMId, T1.vyuMBILInvoiceItem_strUnitMeasure, T1.vyuMBILInvoiceItem_dblQuantity, T1.vyuMBILInvoiceItem_dblPrice, T1.vyuMBILInvoiceItem_dblPercentageFull, T1.vyuMBILInvoiceItem_intContractDetailId, T1.vyuMBILInvoiceItem_strContractNumber, T1.vyuMBILInvoiceItem_intContractSeq, T1.vyuMBILInvoiceItem_inti21InvoiceDetailId, T1.vyuMBILInvoiceItem_dblItemTotal, T1.vyuMBILInvoiceItem_dblTaxTotal, T1.vyuMBILInvoiceItem_dblRate, T1.vyuMBILInvoiceItem_strCalculationMethod, T1.vyuMBILInvoiceItem_intConcurrencyId)
    FROM (
        SELECT 
            T.intInvoiceItemId AS vyuMBILInvoiceItem_intInvoiceItemId, 
            T.intInvoiceId AS vyuMBILInvoiceItem_intInvoiceId, 
            T.strInvoiceNo AS vyuMBILInvoiceItem_strInvoiceNo, 
            T.intOrderId AS vyuMBILInvoiceItem_intOrderId, 
            T.strOrderNumber AS vyuMBILInvoiceItem_strOrderNumber, 
            T.intEntityCustomerId AS vyuMBILInvoiceItem_intEntityCustomerId, 
            T.strCustomerNo AS vyuMBILInvoiceItem_strCustomerNo, 
            T.strCustomerName AS vyuMBILInvoiceItem_strCustomerName, 
            T.intLocationId AS vyuMBILInvoiceItem_intLocationId, 
            T.strLocationName AS vyuMBILInvoiceItem_strLocationName, 
            T.strType AS vyuMBILInvoiceItem_strType, 
            T.dtmDeliveryDate AS vyuMBILInvoiceItem_dtmDeliveryDate, 
            T.dtmInvoiceDate AS vyuMBILInvoiceItem_dtmInvoiceDate, 
            T.intDriverId AS vyuMBILInvoiceItem_intDriverId, 
            T.strDriverNo AS vyuMBILInvoiceItem_strDriverNo, 
            T.strDriverName AS vyuMBILInvoiceItem_strDriverName, 
            T.intShiftId AS vyuMBILInvoiceItem_intShiftId, 
            T.intShiftNumber AS vyuMBILInvoiceItem_intShiftNumber, 
            T.strShiftNo AS vyuMBILInvoiceItem_strShiftNo, 
            T.strComments AS vyuMBILInvoiceItem_strComments, 
            T.dblTotal AS vyuMBILInvoiceItem_dblTotal, 
            T.intTermId AS vyuMBILInvoiceItem_intTermId, 
            T.strTerm AS vyuMBILInvoiceItem_strTerm, 
            T.ysnPosted AS vyuMBILInvoiceItem_ysnPosted, 
            T.inti21InvoiceId AS vyuMBILInvoiceItem_inti21InvoiceId, 
            T.stri21InvoiceNo AS vyuMBILInvoiceItem_stri21InvoiceNo, 
            T.strStatus AS vyuMBILInvoiceItem_strStatus, 
            T.intSiteId AS vyuMBILInvoiceItem_intSiteId, 
            T.intSiteNumber AS vyuMBILInvoiceItem_intSiteNumber, 
            T.strSiteDescription AS vyuMBILInvoiceItem_strSiteDescription, 
            T.strSiteAddress AS vyuMBILInvoiceItem_strSiteAddress, 
            T.strCity AS vyuMBILInvoiceItem_strCity, 
            T.strState AS vyuMBILInvoiceItem_strState, 
            T.strZipCode AS vyuMBILInvoiceItem_strZipCode, 
            T.strCountry AS vyuMBILInvoiceItem_strCountry, 
            T.strSiteStatus AS vyuMBILInvoiceItem_strSiteStatus, 
            T.intItemId AS vyuMBILInvoiceItem_intItemId, 
            T.strItemNo AS vyuMBILInvoiceItem_strItemNo, 
            T.strItemDescription AS vyuMBILInvoiceItem_strItemDescription, 
            T.intItemUOMId AS vyuMBILInvoiceItem_intItemUOMId, 
            T.strUnitMeasure AS vyuMBILInvoiceItem_strUnitMeasure, 
            T.dblQuantity AS vyuMBILInvoiceItem_dblQuantity, 
            T.dblPrice AS vyuMBILInvoiceItem_dblPrice, 
            T.dblPercentageFull AS vyuMBILInvoiceItem_dblPercentageFull, 
            T.intContractDetailId AS vyuMBILInvoiceItem_intContractDetailId, 
            T.strContractNumber AS vyuMBILInvoiceItem_strContractNumber, 
            T.intContractSeq AS vyuMBILInvoiceItem_intContractSeq, 
            T.inti21InvoiceDetailId AS vyuMBILInvoiceItem_inti21InvoiceDetailId, 
            T.dblItemTotal AS vyuMBILInvoiceItem_dblItemTotal, 
            T.dblTaxTotal AS vyuMBILInvoiceItem_dblTaxTotal, 
            T.dblRate AS vyuMBILInvoiceItem_dblRate, 
            T.strCalculationMethod AS vyuMBILInvoiceItem_strCalculationMethod, 
            T.intConcurrencyId AS vyuMBILInvoiceItem_intConcurrencyId, 
            True AS _from0
        FROM MBILEntities.vyuMBILInvoiceItems AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.vyuMBILInvoiceTaxCode.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView22()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing vyuMBILInvoiceTaxCode
        [CodeFirstDatabaseSchema.vyuMBILInvoiceTaxCode](T1.vyuMBILInvoiceTaxCode_intInvoiceTaxId, T1.vyuMBILInvoiceTaxCode_intInvoiceItemId, T1.vyuMBILInvoiceTaxCode_intItemId, T1.vyuMBILInvoiceTaxCode_intTransactionDetailTaxId, T1.vyuMBILInvoiceTaxCode_intInvoiceDetailId, T1.vyuMBILInvoiceTaxCode_intTaxGroupMasterId, T1.vyuMBILInvoiceTaxCode_intTaxGroupId, T1.vyuMBILInvoiceTaxCode_intTaxCodeId, T1.vyuMBILInvoiceTaxCode_intTaxClassId, T1.vyuMBILInvoiceTaxCode_strTaxableByOtherTaxes, T1.vyuMBILInvoiceTaxCode_strCalculationMethod, T1.vyuMBILInvoiceTaxCode_dblRate, T1.vyuMBILInvoiceTaxCode_dblExemptionPercent, T1.vyuMBILInvoiceTaxCode_dblTax, T1.vyuMBILInvoiceTaxCode_dblAdjustedTax, T1.vyuMBILInvoiceTaxCode_dblBaseAdjustedTax, T1.vyuMBILInvoiceTaxCode_intSalesTaxAccountId, T1.vyuMBILInvoiceTaxCode_ysnSeparateOnInvoice, T1.vyuMBILInvoiceTaxCode_ysnCheckoffTax, T1.vyuMBILInvoiceTaxCode_strTaxCode, T1.vyuMBILInvoiceTaxCode_ysnTaxExempt, T1.vyuMBILInvoiceTaxCode_ysnTaxOnly, T1.vyuMBILInvoiceTaxCode_ysnInvalidSetup, T1.vyuMBILInvoiceTaxCode_strTaxGroup, T1.vyuMBILInvoiceTaxCode_strNotes, T1.vyuMBILInvoiceTaxCode_intUnitMeasureId, T1.vyuMBILInvoiceTaxCode_strUnitMeasure, T1.vyuMBILInvoiceTaxCode_intDriverId, T1.vyuMBILInvoiceTaxCode_strDriverNo, T1.vyuMBILInvoiceTaxCode_strDriverName, T1.vyuMBILInvoiceTaxCode_intConcurrencyId)
    FROM (
        SELECT 
            T.intInvoiceTaxId AS vyuMBILInvoiceTaxCode_intInvoiceTaxId, 
            T.intInvoiceItemId AS vyuMBILInvoiceTaxCode_intInvoiceItemId, 
            T.intItemId AS vyuMBILInvoiceTaxCode_intItemId, 
            T.intTransactionDetailTaxId AS vyuMBILInvoiceTaxCode_intTransactionDetailTaxId, 
            T.intInvoiceDetailId AS vyuMBILInvoiceTaxCode_intInvoiceDetailId, 
            T.intTaxGroupMasterId AS vyuMBILInvoiceTaxCode_intTaxGroupMasterId, 
            T.intTaxGroupId AS vyuMBILInvoiceTaxCode_intTaxGroupId, 
            T.intTaxCodeId AS vyuMBILInvoiceTaxCode_intTaxCodeId, 
            T.intTaxClassId AS vyuMBILInvoiceTaxCode_intTaxClassId, 
            T.strTaxableByOtherTaxes AS vyuMBILInvoiceTaxCode_strTaxableByOtherTaxes, 
            T.strCalculationMethod AS vyuMBILInvoiceTaxCode_strCalculationMethod, 
            T.dblRate AS vyuMBILInvoiceTaxCode_dblRate, 
            T.dblExemptionPercent AS vyuMBILInvoiceTaxCode_dblExemptionPercent, 
            T.dblTax AS vyuMBILInvoiceTaxCode_dblTax, 
            T.dblAdjustedTax AS vyuMBILInvoiceTaxCode_dblAdjustedTax, 
            T.dblBaseAdjustedTax AS vyuMBILInvoiceTaxCode_dblBaseAdjustedTax, 
            T.intSalesTaxAccountId AS vyuMBILInvoiceTaxCode_intSalesTaxAccountId, 
            T.ysnSeparateOnInvoice AS vyuMBILInvoiceTaxCode_ysnSeparateOnInvoice, 
            T.ysnCheckoffTax AS vyuMBILInvoiceTaxCode_ysnCheckoffTax, 
            T.strTaxCode AS vyuMBILInvoiceTaxCode_strTaxCode, 
            T.ysnTaxExempt AS vyuMBILInvoiceTaxCode_ysnTaxExempt, 
            T.ysnTaxOnly AS vyuMBILInvoiceTaxCode_ysnTaxOnly, 
            T.ysnInvalidSetup AS vyuMBILInvoiceTaxCode_ysnInvalidSetup, 
            T.strTaxGroup AS vyuMBILInvoiceTaxCode_strTaxGroup, 
            T.strNotes AS vyuMBILInvoiceTaxCode_strNotes, 
            T.intUnitMeasureId AS vyuMBILInvoiceTaxCode_intUnitMeasureId, 
            T.strUnitMeasure AS vyuMBILInvoiceTaxCode_strUnitMeasure, 
            T.intDriverId AS vyuMBILInvoiceTaxCode_intDriverId, 
            T.strDriverNo AS vyuMBILInvoiceTaxCode_strDriverNo, 
            T.strDriverName AS vyuMBILInvoiceTaxCode_strDriverName, 
            T.intConcurrencyId AS vyuMBILInvoiceTaxCode_intConcurrencyId, 
            True AS _from0
        FROM MBILEntities.vyuMBILInvoiceTaxCodes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.tblMBILShift.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView23()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing tblMBILShift
        [CodeFirstDatabaseSchema.tblMBILShift](T1.tblMBILShift_intShiftId, T1.tblMBILShift_dtmShiftDate, T1.tblMBILShift_intDriverId, T1.tblMBILShift_intLocationId, T1.tblMBILShift_strShiftNo, T1.tblMBILShift_intShiftNumber, T1.tblMBILShift_dtmStartTime, T1.tblMBILShift_dtmEndTime, T1.tblMBILShift_intTruckId, T1.tblMBILShift_intStartOdometer, T1.tblMBILShift_intEndOdometer, T1.tblMBILShift_dblFuelGallonsDelievered, T1.tblMBILShift_dblFuelSales, T1.tblMBILShift_intConcurrencyId)
    FROM (
        SELECT 
            T.intShiftId AS tblMBILShift_intShiftId, 
            T.dtmShiftDate AS tblMBILShift_dtmShiftDate, 
            T.intDriverId AS tblMBILShift_intDriverId, 
            T.intLocationId AS tblMBILShift_intLocationId, 
            T.strShiftNo AS tblMBILShift_strShiftNo, 
            T.intShiftNumber AS tblMBILShift_intShiftNumber, 
            T.dtmStartTime AS tblMBILShift_dtmStartTime, 
            T.dtmEndTime AS tblMBILShift_dtmEndTime, 
            T.intTruckId AS tblMBILShift_intTruckId, 
            T.intStartOdometer AS tblMBILShift_intStartOdometer, 
            T.intEndOdometer AS tblMBILShift_intEndOdometer, 
            T.dblFuelGallonsDelievered AS tblMBILShift_dblFuelGallonsDelievered, 
            T.dblFuelSales AS tblMBILShift_dblFuelSales, 
            T.intConcurrencyId AS tblMBILShift_intConcurrencyId, 
            True AS _from0
        FROM MBILEntities.tblMBILShifts AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.vyuMBILPayment.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView24()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing vyuMBILPayment
        [CodeFirstDatabaseSchema.vyuMBILPayment](T1.vyuMBILPayment_intPaymentId, T1.vyuMBILPayment_strPaymentNo, T1.vyuMBILPayment_intEntityCustomerId, T1.vyuMBILPayment_strCustomerNo, T1.vyuMBILPayment_strCustomerName, T1.vyuMBILPayment_intLocationId, T1.vyuMBILPayment_strLocationName, T1.vyuMBILPayment_intEntityDriverId, T1.vyuMBILPayment_strDriverNo, T1.vyuMBILPayment_strDriverName, T1.vyuMBILPayment_intShiftId, T1.vyuMBILPayment_intShiftNumber, T1.vyuMBILPayment_intConcurrencyId, T1.vyuMBILPayment_dtmDatePaid, T1.vyuMBILPayment_strMethod, T1.vyuMBILPayment_strCheckNumber, T1.vyuMBILPayment_dblPayment, T1.vyuMBILPayment_strComments, T1.vyuMBILPayment_strVoidComments, T1.vyuMBILPayment_ysnPosted, T1.vyuMBILPayment_ysnVoided, T1.vyuMBILPayment_dtmPostedDate, T1.vyuMBILPayment_dtmVoidedDate)
    FROM (
        SELECT 
            T.intPaymentId AS vyuMBILPayment_intPaymentId, 
            T.strPaymentNo AS vyuMBILPayment_strPaymentNo, 
            T.intEntityCustomerId AS vyuMBILPayment_intEntityCustomerId, 
            T.strCustomerNo AS vyuMBILPayment_strCustomerNo, 
            T.strCustomerName AS vyuMBILPayment_strCustomerName, 
            T.intLocationId AS vyuMBILPayment_intLocationId, 
            T.strLocationName AS vyuMBILPayment_strLocationName, 
            T.intEntityDriverId AS vyuMBILPayment_intEntityDriverId, 
            T.strDriverNo AS vyuMBILPayment_strDriverNo, 
            T.strDriverName AS vyuMBILPayment_strDriverName, 
            T.intShiftId AS vyuMBILPayment_intShiftId, 
            T.intShiftNumber AS vyuMBILPayment_intShiftNumber, 
            T.intConcurrencyId AS vyuMBILPayment_intConcurrencyId, 
            T.dtmDatePaid AS vyuMBILPayment_dtmDatePaid, 
            T.strMethod AS vyuMBILPayment_strMethod, 
            T.strCheckNumber AS vyuMBILPayment_strCheckNumber, 
            T.dblPayment AS vyuMBILPayment_dblPayment, 
            T.strComments AS vyuMBILPayment_strComments, 
            T.strVoidComments AS vyuMBILPayment_strVoidComments, 
            T.ysnPosted AS vyuMBILPayment_ysnPosted, 
            T.ysnVoided AS vyuMBILPayment_ysnVoided, 
            T.dtmPostedDate AS vyuMBILPayment_dtmPostedDate, 
            T.dtmVoidedDate AS vyuMBILPayment_dtmVoidedDate, 
            True AS _from0
        FROM MBILEntities.vyuMBILPayments AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.vyuMBILShift.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView25()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing vyuMBILShift
        [CodeFirstDatabaseSchema.vyuMBILShift](T1.vyuMBILShift_intShiftId, T1.vyuMBILShift_dtmShiftDate, T1.vyuMBILShift_intDriverId, T1.vyuMBILShift_strDriverNo, T1.vyuMBILShift_strDriverName, T1.vyuMBILShift_intLocationId, T1.vyuMBILShift_strLocationName, T1.vyuMBILShift_strShiftNo, T1.vyuMBILShift_intShiftNumber, T1.vyuMBILShift_dtmStartTime, T1.vyuMBILShift_dtmEndTime, T1.vyuMBILShift_intTruckId, T1.vyuMBILShift_strTruckName, T1.vyuMBILShift_intStartOdometer, T1.vyuMBILShift_intEndOdometer, T1.vyuMBILShift_dblFuelGallonsDelievered, T1.vyuMBILShift_dblFuelSales)
    FROM (
        SELECT 
            T.intShiftId AS vyuMBILShift_intShiftId, 
            T.dtmShiftDate AS vyuMBILShift_dtmShiftDate, 
            T.intDriverId AS vyuMBILShift_intDriverId, 
            T.strDriverNo AS vyuMBILShift_strDriverNo, 
            T.strDriverName AS vyuMBILShift_strDriverName, 
            T.intLocationId AS vyuMBILShift_intLocationId, 
            T.strLocationName AS vyuMBILShift_strLocationName, 
            T.strShiftNo AS vyuMBILShift_strShiftNo, 
            T.intShiftNumber AS vyuMBILShift_intShiftNumber, 
            T.dtmStartTime AS vyuMBILShift_dtmStartTime, 
            T.dtmEndTime AS vyuMBILShift_dtmEndTime, 
            T.intTruckId AS vyuMBILShift_intTruckId, 
            T.strTruckName AS vyuMBILShift_strTruckName, 
            T.intStartOdometer AS vyuMBILShift_intStartOdometer, 
            T.intEndOdometer AS vyuMBILShift_intEndOdometer, 
            T.dblFuelGallonsDelievered AS vyuMBILShift_dblFuelGallonsDelievered, 
            T.dblFuelSales AS vyuMBILShift_dblFuelSales, 
            True AS _from0
        FROM MBILEntities.vyuMBILShifts AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for MBILEntities.vyuMBILInvoices.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView26()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing vyuMBILInvoices
        [iRely.MobileBilling.Model.vyuMBILInvoice](T1.vyuMBILInvoice_intInvoiceId, T1.vyuMBILInvoice_strInvoiceNo, T1.vyuMBILInvoice_intOrderId, T1.vyuMBILInvoice_strOrderNumber, T1.vyuMBILInvoice_intEntityCustomerId, T1.vyuMBILInvoice_strCustomerNo, T1.vyuMBILInvoice_strCustomerName, T1.vyuMBILInvoice_intLocationId, T1.vyuMBILInvoice_strLocationName, T1.vyuMBILInvoice_strType, T1.vyuMBILInvoice_dtmDeliveryDate, T1.vyuMBILInvoice_dtmInvoiceDate, T1.vyuMBILInvoice_intDriverId, T1.vyuMBILInvoice_strDriverNo, T1.vyuMBILInvoice_strDriverName, T1.vyuMBILInvoice_intShiftId, T1.vyuMBILInvoice_intShiftNumber, T1.vyuMBILInvoice_strShiftNo, T1.vyuMBILInvoice_strComments, T1.vyuMBILInvoice_strVoidComments, T1.vyuMBILInvoice_dblTotal, T1.vyuMBILInvoice_intTermId, T1.vyuMBILInvoice_strTerm, T1.vyuMBILInvoice_ysnPosted, T1.vyuMBILInvoice_ysnVoided, T1.vyuMBILInvoice_dtmPostedDate, T1.vyuMBILInvoice_dtmVoidedDate, T1.vyuMBILInvoice_inti21InvoiceId, T1.vyuMBILInvoice_stri21InvoiceNo, T1.vyuMBILInvoice_strStatus, T1.vyuMBILInvoice_dblTotalBefTax, T1.vyuMBILInvoice_dblTotalTaxAmount, T1.vyuMBILInvoice_intPaymentMethodId, T1.vyuMBILInvoice_strPaymentMethod, T1.vyuMBILInvoice_strPaymentInfo, T1.vyuMBILInvoice_intConcurrencyId)
    FROM (
        SELECT 
            T.intInvoiceId AS vyuMBILInvoice_intInvoiceId, 
            T.strInvoiceNo AS vyuMBILInvoice_strInvoiceNo, 
            T.intOrderId AS vyuMBILInvoice_intOrderId, 
            T.strOrderNumber AS vyuMBILInvoice_strOrderNumber, 
            T.intEntityCustomerId AS vyuMBILInvoice_intEntityCustomerId, 
            T.strCustomerNo AS vyuMBILInvoice_strCustomerNo, 
            T.strCustomerName AS vyuMBILInvoice_strCustomerName, 
            T.intLocationId AS vyuMBILInvoice_intLocationId, 
            T.strLocationName AS vyuMBILInvoice_strLocationName, 
            T.strType AS vyuMBILInvoice_strType, 
            T.dtmDeliveryDate AS vyuMBILInvoice_dtmDeliveryDate, 
            T.dtmInvoiceDate AS vyuMBILInvoice_dtmInvoiceDate, 
            T.intDriverId AS vyuMBILInvoice_intDriverId, 
            T.strDriverNo AS vyuMBILInvoice_strDriverNo, 
            T.strDriverName AS vyuMBILInvoice_strDriverName, 
            T.intShiftId AS vyuMBILInvoice_intShiftId, 
            T.intShiftNumber AS vyuMBILInvoice_intShiftNumber, 
            T.strShiftNo AS vyuMBILInvoice_strShiftNo, 
            T.strComments AS vyuMBILInvoice_strComments, 
            T.strVoidComments AS vyuMBILInvoice_strVoidComments, 
            T.dblTotal AS vyuMBILInvoice_dblTotal, 
            T.intTermId AS vyuMBILInvoice_intTermId, 
            T.strTerm AS vyuMBILInvoice_strTerm, 
            T.ysnPosted AS vyuMBILInvoice_ysnPosted, 
            T.ysnVoided AS vyuMBILInvoice_ysnVoided, 
            T.dtmPostedDate AS vyuMBILInvoice_dtmPostedDate, 
            T.dtmVoidedDate AS vyuMBILInvoice_dtmVoidedDate, 
            T.inti21InvoiceId AS vyuMBILInvoice_inti21InvoiceId, 
            T.stri21InvoiceNo AS vyuMBILInvoice_stri21InvoiceNo, 
            T.strStatus AS vyuMBILInvoice_strStatus, 
            T.dblTotalBefTax AS vyuMBILInvoice_dblTotalBefTax, 
            T.dblTotalTaxAmount AS vyuMBILInvoice_dblTotalTaxAmount, 
            T.intPaymentMethodId AS vyuMBILInvoice_intPaymentMethodId, 
            T.strPaymentMethod AS vyuMBILInvoice_strPaymentMethod, 
            T.strPaymentInfo AS vyuMBILInvoice_strPaymentInfo, 
            T.intConcurrencyId AS vyuMBILInvoice_intConcurrencyId, 
            True AS _from0
        FROM CodeFirstDatabase.vyuMBILInvoice AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for MBILEntities.vyuMBILInvoiceItems.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView27()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing vyuMBILInvoiceItems
        [iRely.MobileBilling.Model.vyuMBILInvoiceItem](T1.vyuMBILInvoiceItem_intInvoiceItemId, T1.vyuMBILInvoiceItem_intInvoiceId, T1.vyuMBILInvoiceItem_strInvoiceNo, T1.vyuMBILInvoiceItem_intOrderId, T1.vyuMBILInvoiceItem_strOrderNumber, T1.vyuMBILInvoiceItem_intEntityCustomerId, T1.vyuMBILInvoiceItem_strCustomerNo, T1.vyuMBILInvoiceItem_strCustomerName, T1.vyuMBILInvoiceItem_intLocationId, T1.vyuMBILInvoiceItem_strLocationName, T1.vyuMBILInvoiceItem_strType, T1.vyuMBILInvoiceItem_dtmDeliveryDate, T1.vyuMBILInvoiceItem_dtmInvoiceDate, T1.vyuMBILInvoiceItem_intDriverId, T1.vyuMBILInvoiceItem_strDriverNo, T1.vyuMBILInvoiceItem_strDriverName, T1.vyuMBILInvoiceItem_intShiftId, T1.vyuMBILInvoiceItem_intShiftNumber, T1.vyuMBILInvoiceItem_strShiftNo, T1.vyuMBILInvoiceItem_strComments, T1.vyuMBILInvoiceItem_dblTotal, T1.vyuMBILInvoiceItem_intTermId, T1.vyuMBILInvoiceItem_strTerm, T1.vyuMBILInvoiceItem_ysnPosted, T1.vyuMBILInvoiceItem_inti21InvoiceId, T1.vyuMBILInvoiceItem_stri21InvoiceNo, T1.vyuMBILInvoiceItem_strStatus, T1.vyuMBILInvoiceItem_intSiteId, T1.vyuMBILInvoiceItem_intSiteNumber, T1.vyuMBILInvoiceItem_strSiteDescription, T1.vyuMBILInvoiceItem_strSiteAddress, T1.vyuMBILInvoiceItem_strCity, T1.vyuMBILInvoiceItem_strState, T1.vyuMBILInvoiceItem_strZipCode, T1.vyuMBILInvoiceItem_strCountry, T1.vyuMBILInvoiceItem_strSiteStatus, T1.vyuMBILInvoiceItem_intItemId, T1.vyuMBILInvoiceItem_strItemNo, T1.vyuMBILInvoiceItem_strItemDescription, T1.vyuMBILInvoiceItem_intItemUOMId, T1.vyuMBILInvoiceItem_strUnitMeasure, T1.vyuMBILInvoiceItem_dblQuantity, T1.vyuMBILInvoiceItem_dblPrice, T1.vyuMBILInvoiceItem_dblPercentageFull, T1.vyuMBILInvoiceItem_intContractDetailId, T1.vyuMBILInvoiceItem_strContractNumber, T1.vyuMBILInvoiceItem_intContractSeq, T1.vyuMBILInvoiceItem_inti21InvoiceDetailId, T1.vyuMBILInvoiceItem_dblItemTotal, T1.vyuMBILInvoiceItem_dblTaxTotal, T1.vyuMBILInvoiceItem_dblRate, T1.vyuMBILInvoiceItem_strCalculationMethod, T1.vyuMBILInvoiceItem_intConcurrencyId)
    FROM (
        SELECT 
            T.intInvoiceItemId AS vyuMBILInvoiceItem_intInvoiceItemId, 
            T.intInvoiceId AS vyuMBILInvoiceItem_intInvoiceId, 
            T.strInvoiceNo AS vyuMBILInvoiceItem_strInvoiceNo, 
            T.intOrderId AS vyuMBILInvoiceItem_intOrderId, 
            T.strOrderNumber AS vyuMBILInvoiceItem_strOrderNumber, 
            T.intEntityCustomerId AS vyuMBILInvoiceItem_intEntityCustomerId, 
            T.strCustomerNo AS vyuMBILInvoiceItem_strCustomerNo, 
            T.strCustomerName AS vyuMBILInvoiceItem_strCustomerName, 
            T.intLocationId AS vyuMBILInvoiceItem_intLocationId, 
            T.strLocationName AS vyuMBILInvoiceItem_strLocationName, 
            T.strType AS vyuMBILInvoiceItem_strType, 
            T.dtmDeliveryDate AS vyuMBILInvoiceItem_dtmDeliveryDate, 
            T.dtmInvoiceDate AS vyuMBILInvoiceItem_dtmInvoiceDate, 
            T.intDriverId AS vyuMBILInvoiceItem_intDriverId, 
            T.strDriverNo AS vyuMBILInvoiceItem_strDriverNo, 
            T.strDriverName AS vyuMBILInvoiceItem_strDriverName, 
            T.intShiftId AS vyuMBILInvoiceItem_intShiftId, 
            T.intShiftNumber AS vyuMBILInvoiceItem_intShiftNumber, 
            T.strShiftNo AS vyuMBILInvoiceItem_strShiftNo, 
            T.strComments AS vyuMBILInvoiceItem_strComments, 
            T.dblTotal AS vyuMBILInvoiceItem_dblTotal, 
            T.intTermId AS vyuMBILInvoiceItem_intTermId, 
            T.strTerm AS vyuMBILInvoiceItem_strTerm, 
            T.ysnPosted AS vyuMBILInvoiceItem_ysnPosted, 
            T.inti21InvoiceId AS vyuMBILInvoiceItem_inti21InvoiceId, 
            T.stri21InvoiceNo AS vyuMBILInvoiceItem_stri21InvoiceNo, 
            T.strStatus AS vyuMBILInvoiceItem_strStatus, 
            T.intSiteId AS vyuMBILInvoiceItem_intSiteId, 
            T.intSiteNumber AS vyuMBILInvoiceItem_intSiteNumber, 
            T.strSiteDescription AS vyuMBILInvoiceItem_strSiteDescription, 
            T.strSiteAddress AS vyuMBILInvoiceItem_strSiteAddress, 
            T.strCity AS vyuMBILInvoiceItem_strCity, 
            T.strState AS vyuMBILInvoiceItem_strState, 
            T.strZipCode AS vyuMBILInvoiceItem_strZipCode, 
            T.strCountry AS vyuMBILInvoiceItem_strCountry, 
            T.strSiteStatus AS vyuMBILInvoiceItem_strSiteStatus, 
            T.intItemId AS vyuMBILInvoiceItem_intItemId, 
            T.strItemNo AS vyuMBILInvoiceItem_strItemNo, 
            T.strItemDescription AS vyuMBILInvoiceItem_strItemDescription, 
            T.intItemUOMId AS vyuMBILInvoiceItem_intItemUOMId, 
            T.strUnitMeasure AS vyuMBILInvoiceItem_strUnitMeasure, 
            T.dblQuantity AS vyuMBILInvoiceItem_dblQuantity, 
            T.dblPrice AS vyuMBILInvoiceItem_dblPrice, 
            T.dblPercentageFull AS vyuMBILInvoiceItem_dblPercentageFull, 
            T.intContractDetailId AS vyuMBILInvoiceItem_intContractDetailId, 
            T.strContractNumber AS vyuMBILInvoiceItem_strContractNumber, 
            T.intContractSeq AS vyuMBILInvoiceItem_intContractSeq, 
            T.inti21InvoiceDetailId AS vyuMBILInvoiceItem_inti21InvoiceDetailId, 
            T.dblItemTotal AS vyuMBILInvoiceItem_dblItemTotal, 
            T.dblTaxTotal AS vyuMBILInvoiceItem_dblTaxTotal, 
            T.dblRate AS vyuMBILInvoiceItem_dblRate, 
            T.strCalculationMethod AS vyuMBILInvoiceItem_strCalculationMethod, 
            T.intConcurrencyId AS vyuMBILInvoiceItem_intConcurrencyId, 
            True AS _from0
        FROM CodeFirstDatabase.vyuMBILInvoiceItem AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for MBILEntities.vyuMBILInvoiceTaxCodes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView28()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing vyuMBILInvoiceTaxCodes
        [iRely.MobileBilling.Model.vyuMBILInvoiceTaxCode](T1.vyuMBILInvoiceTaxCode_intInvoiceTaxId, T1.vyuMBILInvoiceTaxCode_intInvoiceItemId, T1.vyuMBILInvoiceTaxCode_intItemId, T1.vyuMBILInvoiceTaxCode_intTransactionDetailTaxId, T1.vyuMBILInvoiceTaxCode_intInvoiceDetailId, T1.vyuMBILInvoiceTaxCode_intTaxGroupMasterId, T1.vyuMBILInvoiceTaxCode_intTaxGroupId, T1.vyuMBILInvoiceTaxCode_intTaxCodeId, T1.vyuMBILInvoiceTaxCode_intTaxClassId, T1.vyuMBILInvoiceTaxCode_strTaxableByOtherTaxes, T1.vyuMBILInvoiceTaxCode_strCalculationMethod, T1.vyuMBILInvoiceTaxCode_dblRate, T1.vyuMBILInvoiceTaxCode_dblExemptionPercent, T1.vyuMBILInvoiceTaxCode_dblTax, T1.vyuMBILInvoiceTaxCode_dblAdjustedTax, T1.vyuMBILInvoiceTaxCode_dblBaseAdjustedTax, T1.vyuMBILInvoiceTaxCode_intSalesTaxAccountId, T1.vyuMBILInvoiceTaxCode_ysnSeparateOnInvoice, T1.vyuMBILInvoiceTaxCode_ysnCheckoffTax, T1.vyuMBILInvoiceTaxCode_strTaxCode, T1.vyuMBILInvoiceTaxCode_ysnTaxExempt, T1.vyuMBILInvoiceTaxCode_ysnTaxOnly, T1.vyuMBILInvoiceTaxCode_ysnInvalidSetup, T1.vyuMBILInvoiceTaxCode_strTaxGroup, T1.vyuMBILInvoiceTaxCode_strNotes, T1.vyuMBILInvoiceTaxCode_intUnitMeasureId, T1.vyuMBILInvoiceTaxCode_strUnitMeasure, T1.vyuMBILInvoiceTaxCode_intDriverId, T1.vyuMBILInvoiceTaxCode_strDriverNo, T1.vyuMBILInvoiceTaxCode_strDriverName, T1.vyuMBILInvoiceTaxCode_intConcurrencyId)
    FROM (
        SELECT 
            T.intInvoiceTaxId AS vyuMBILInvoiceTaxCode_intInvoiceTaxId, 
            T.intInvoiceItemId AS vyuMBILInvoiceTaxCode_intInvoiceItemId, 
            T.intItemId AS vyuMBILInvoiceTaxCode_intItemId, 
            T.intTransactionDetailTaxId AS vyuMBILInvoiceTaxCode_intTransactionDetailTaxId, 
            T.intInvoiceDetailId AS vyuMBILInvoiceTaxCode_intInvoiceDetailId, 
            T.intTaxGroupMasterId AS vyuMBILInvoiceTaxCode_intTaxGroupMasterId, 
            T.intTaxGroupId AS vyuMBILInvoiceTaxCode_intTaxGroupId, 
            T.intTaxCodeId AS vyuMBILInvoiceTaxCode_intTaxCodeId, 
            T.intTaxClassId AS vyuMBILInvoiceTaxCode_intTaxClassId, 
            T.strTaxableByOtherTaxes AS vyuMBILInvoiceTaxCode_strTaxableByOtherTaxes, 
            T.strCalculationMethod AS vyuMBILInvoiceTaxCode_strCalculationMethod, 
            T.dblRate AS vyuMBILInvoiceTaxCode_dblRate, 
            T.dblExemptionPercent AS vyuMBILInvoiceTaxCode_dblExemptionPercent, 
            T.dblTax AS vyuMBILInvoiceTaxCode_dblTax, 
            T.dblAdjustedTax AS vyuMBILInvoiceTaxCode_dblAdjustedTax, 
            T.dblBaseAdjustedTax AS vyuMBILInvoiceTaxCode_dblBaseAdjustedTax, 
            T.intSalesTaxAccountId AS vyuMBILInvoiceTaxCode_intSalesTaxAccountId, 
            T.ysnSeparateOnInvoice AS vyuMBILInvoiceTaxCode_ysnSeparateOnInvoice, 
            T.ysnCheckoffTax AS vyuMBILInvoiceTaxCode_ysnCheckoffTax, 
            T.strTaxCode AS vyuMBILInvoiceTaxCode_strTaxCode, 
            T.ysnTaxExempt AS vyuMBILInvoiceTaxCode_ysnTaxExempt, 
            T.ysnTaxOnly AS vyuMBILInvoiceTaxCode_ysnTaxOnly, 
            T.ysnInvalidSetup AS vyuMBILInvoiceTaxCode_ysnInvalidSetup, 
            T.strTaxGroup AS vyuMBILInvoiceTaxCode_strTaxGroup, 
            T.strNotes AS vyuMBILInvoiceTaxCode_strNotes, 
            T.intUnitMeasureId AS vyuMBILInvoiceTaxCode_intUnitMeasureId, 
            T.strUnitMeasure AS vyuMBILInvoiceTaxCode_strUnitMeasure, 
            T.intDriverId AS vyuMBILInvoiceTaxCode_intDriverId, 
            T.strDriverNo AS vyuMBILInvoiceTaxCode_strDriverNo, 
            T.strDriverName AS vyuMBILInvoiceTaxCode_strDriverName, 
            T.intConcurrencyId AS vyuMBILInvoiceTaxCode_intConcurrencyId, 
            True AS _from0
        FROM CodeFirstDatabase.vyuMBILInvoiceTaxCode AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for MBILEntities.tblMBILShifts.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView29()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing tblMBILShifts
        [iRely.MobileBilling.Model.tblMBILShift](T1.tblMBILShift_intShiftId, T1.tblMBILShift_dtmShiftDate, T1.tblMBILShift_intDriverId, T1.tblMBILShift_intLocationId, T1.tblMBILShift_strShiftNo, T1.tblMBILShift_intShiftNumber, T1.tblMBILShift_dtmStartTime, T1.tblMBILShift_dtmEndTime, T1.tblMBILShift_intTruckId, T1.tblMBILShift_intStartOdometer, T1.tblMBILShift_intEndOdometer, T1.tblMBILShift_dblFuelGallonsDelievered, T1.tblMBILShift_dblFuelSales, T1.tblMBILShift_intConcurrencyId)
    FROM (
        SELECT 
            T.intShiftId AS tblMBILShift_intShiftId, 
            T.dtmShiftDate AS tblMBILShift_dtmShiftDate, 
            T.intDriverId AS tblMBILShift_intDriverId, 
            T.intLocationId AS tblMBILShift_intLocationId, 
            T.strShiftNo AS tblMBILShift_strShiftNo, 
            T.intShiftNumber AS tblMBILShift_intShiftNumber, 
            T.dtmStartTime AS tblMBILShift_dtmStartTime, 
            T.dtmEndTime AS tblMBILShift_dtmEndTime, 
            T.intTruckId AS tblMBILShift_intTruckId, 
            T.intStartOdometer AS tblMBILShift_intStartOdometer, 
            T.intEndOdometer AS tblMBILShift_intEndOdometer, 
            T.dblFuelGallonsDelievered AS tblMBILShift_dblFuelGallonsDelievered, 
            T.dblFuelSales AS tblMBILShift_dblFuelSales, 
            T.intConcurrencyId AS tblMBILShift_intConcurrencyId, 
            True AS _from0
        FROM CodeFirstDatabase.tblMBILShift AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for MBILEntities.vyuMBILPayments.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView30()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing vyuMBILPayments
        [iRely.MobileBilling.Model.vyuMBILPayment](T1.vyuMBILPayment_intPaymentId, T1.vyuMBILPayment_strPaymentNo, T1.vyuMBILPayment_intEntityCustomerId, T1.vyuMBILPayment_strCustomerNo, T1.vyuMBILPayment_strCustomerName, T1.vyuMBILPayment_intLocationId, T1.vyuMBILPayment_strLocationName, T1.vyuMBILPayment_intEntityDriverId, T1.vyuMBILPayment_strDriverNo, T1.vyuMBILPayment_strDriverName, T1.vyuMBILPayment_intShiftId, T1.vyuMBILPayment_intShiftNumber, T1.vyuMBILPayment_intConcurrencyId, T1.vyuMBILPayment_dtmDatePaid, T1.vyuMBILPayment_strMethod, T1.vyuMBILPayment_strCheckNumber, T1.vyuMBILPayment_dblPayment, T1.vyuMBILPayment_strComments, T1.vyuMBILPayment_strVoidComments, T1.vyuMBILPayment_ysnPosted, T1.vyuMBILPayment_ysnVoided, T1.vyuMBILPayment_dtmPostedDate, T1.vyuMBILPayment_dtmVoidedDate)
    FROM (
        SELECT 
            T.intPaymentId AS vyuMBILPayment_intPaymentId, 
            T.strPaymentNo AS vyuMBILPayment_strPaymentNo, 
            T.intEntityCustomerId AS vyuMBILPayment_intEntityCustomerId, 
            T.strCustomerNo AS vyuMBILPayment_strCustomerNo, 
            T.strCustomerName AS vyuMBILPayment_strCustomerName, 
            T.intLocationId AS vyuMBILPayment_intLocationId, 
            T.strLocationName AS vyuMBILPayment_strLocationName, 
            T.intEntityDriverId AS vyuMBILPayment_intEntityDriverId, 
            T.strDriverNo AS vyuMBILPayment_strDriverNo, 
            T.strDriverName AS vyuMBILPayment_strDriverName, 
            T.intShiftId AS vyuMBILPayment_intShiftId, 
            T.intShiftNumber AS vyuMBILPayment_intShiftNumber, 
            T.intConcurrencyId AS vyuMBILPayment_intConcurrencyId, 
            T.dtmDatePaid AS vyuMBILPayment_dtmDatePaid, 
            T.strMethod AS vyuMBILPayment_strMethod, 
            T.strCheckNumber AS vyuMBILPayment_strCheckNumber, 
            T.dblPayment AS vyuMBILPayment_dblPayment, 
            T.strComments AS vyuMBILPayment_strComments, 
            T.strVoidComments AS vyuMBILPayment_strVoidComments, 
            T.ysnPosted AS vyuMBILPayment_ysnPosted, 
            T.ysnVoided AS vyuMBILPayment_ysnVoided, 
            T.dtmPostedDate AS vyuMBILPayment_dtmPostedDate, 
            T.dtmVoidedDate AS vyuMBILPayment_dtmVoidedDate, 
            True AS _from0
        FROM CodeFirstDatabase.vyuMBILPayment AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for MBILEntities.vyuMBILShifts.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView31()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing vyuMBILShifts
        [iRely.MobileBilling.Model.vyuMBILShift](T1.vyuMBILShift_intShiftId, T1.vyuMBILShift_dtmShiftDate, T1.vyuMBILShift_intDriverId, T1.vyuMBILShift_strDriverNo, T1.vyuMBILShift_strDriverName, T1.vyuMBILShift_intLocationId, T1.vyuMBILShift_strLocationName, T1.vyuMBILShift_strShiftNo, T1.vyuMBILShift_intShiftNumber, T1.vyuMBILShift_dtmStartTime, T1.vyuMBILShift_dtmEndTime, T1.vyuMBILShift_intTruckId, T1.vyuMBILShift_strTruckName, T1.vyuMBILShift_intStartOdometer, T1.vyuMBILShift_intEndOdometer, T1.vyuMBILShift_dblFuelGallonsDelievered, T1.vyuMBILShift_dblFuelSales)
    FROM (
        SELECT 
            T.intShiftId AS vyuMBILShift_intShiftId, 
            T.dtmShiftDate AS vyuMBILShift_dtmShiftDate, 
            T.intDriverId AS vyuMBILShift_intDriverId, 
            T.strDriverNo AS vyuMBILShift_strDriverNo, 
            T.strDriverName AS vyuMBILShift_strDriverName, 
            T.intLocationId AS vyuMBILShift_intLocationId, 
            T.strLocationName AS vyuMBILShift_strLocationName, 
            T.strShiftNo AS vyuMBILShift_strShiftNo, 
            T.intShiftNumber AS vyuMBILShift_intShiftNumber, 
            T.dtmStartTime AS vyuMBILShift_dtmStartTime, 
            T.dtmEndTime AS vyuMBILShift_dtmEndTime, 
            T.intTruckId AS vyuMBILShift_intTruckId, 
            T.strTruckName AS vyuMBILShift_strTruckName, 
            T.intStartOdometer AS vyuMBILShift_intStartOdometer, 
            T.intEndOdometer AS vyuMBILShift_intEndOdometer, 
            T.dblFuelGallonsDelievered AS vyuMBILShift_dblFuelGallonsDelievered, 
            T.dblFuelSales AS vyuMBILShift_dblFuelSales, 
            True AS _from0
        FROM CodeFirstDatabase.vyuMBILShift AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.tblMBILPayment.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView32()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing tblMBILPayment
        [CodeFirstDatabaseSchema.tblMBILPayment](T1.tblMBILPayment_intPaymentId, T1.tblMBILPayment_intShiftId, T1.tblMBILPayment_strPaymentNo, T1.tblMBILPayment_intEntityCustomerId, T1.tblMBILPayment_intEntityDriverId, T1.tblMBILPayment_intLocationId, T1.tblMBILPayment_dtmDatePaid, T1.tblMBILPayment_strMethod, T1.tblMBILPayment_strCheckNumber, T1.tblMBILPayment_dblPayment, T1.tblMBILPayment_strComments, T1.tblMBILPayment_strVoidComments, T1.tblMBILPayment_ysnPosted, T1.tblMBILPayment_ysnVoided, T1.tblMBILPayment_dtmPostedDate, T1.tblMBILPayment_dtmVoidedDate, T1.tblMBILPayment_intConcurrencyId)
    FROM (
        SELECT 
            T.intPaymentId AS tblMBILPayment_intPaymentId, 
            T.intShiftId AS tblMBILPayment_intShiftId, 
            T.strPaymentNo AS tblMBILPayment_strPaymentNo, 
            T.intEntityCustomerId AS tblMBILPayment_intEntityCustomerId, 
            T.intEntityDriverId AS tblMBILPayment_intEntityDriverId, 
            T.intLocationId AS tblMBILPayment_intLocationId, 
            T.dtmDatePaid AS tblMBILPayment_dtmDatePaid, 
            T.strMethod AS tblMBILPayment_strMethod, 
            T.strCheckNumber AS tblMBILPayment_strCheckNumber, 
            T.dblPayment AS tblMBILPayment_dblPayment, 
            T.strComments AS tblMBILPayment_strComments, 
            T.strVoidComments AS tblMBILPayment_strVoidComments, 
            T.ysnPosted AS tblMBILPayment_ysnPosted, 
            T.ysnVoided AS tblMBILPayment_ysnVoided, 
            T.dtmPostedDate AS tblMBILPayment_dtmPostedDate, 
            T.dtmVoidedDate AS tblMBILPayment_dtmVoidedDate, 
            T.intConcurrencyId AS tblMBILPayment_intConcurrencyId, 
            True AS _from0
        FROM MBILEntities.tblMBILPayments AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for MBILEntities.tblMBILPayments.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView33()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing tblMBILPayments
        [iRely.MobileBilling.Model.tblMBILPayment](T1.tblMBILPayment_intPaymentId, T1.tblMBILPayment_intShiftId, T1.tblMBILPayment_strPaymentNo, T1.tblMBILPayment_intEntityCustomerId, T1.tblMBILPayment_intEntityDriverId, T1.tblMBILPayment_intLocationId, T1.tblMBILPayment_dtmDatePaid, T1.tblMBILPayment_strMethod, T1.tblMBILPayment_strCheckNumber, T1.tblMBILPayment_dblPayment, T1.tblMBILPayment_strComments, T1.tblMBILPayment_strVoidComments, T1.tblMBILPayment_ysnPosted, T1.tblMBILPayment_ysnVoided, T1.tblMBILPayment_dtmPostedDate, T1.tblMBILPayment_dtmVoidedDate, T1.tblMBILPayment_intConcurrencyId)
    FROM (
        SELECT 
            T.intPaymentId AS tblMBILPayment_intPaymentId, 
            T.intShiftId AS tblMBILPayment_intShiftId, 
            T.strPaymentNo AS tblMBILPayment_strPaymentNo, 
            T.intEntityCustomerId AS tblMBILPayment_intEntityCustomerId, 
            T.intEntityDriverId AS tblMBILPayment_intEntityDriverId, 
            T.intLocationId AS tblMBILPayment_intLocationId, 
            T.dtmDatePaid AS tblMBILPayment_dtmDatePaid, 
            T.strMethod AS tblMBILPayment_strMethod, 
            T.strCheckNumber AS tblMBILPayment_strCheckNumber, 
            T.dblPayment AS tblMBILPayment_dblPayment, 
            T.strComments AS tblMBILPayment_strComments, 
            T.strVoidComments AS tblMBILPayment_strVoidComments, 
            T.ysnPosted AS tblMBILPayment_ysnPosted, 
            T.ysnVoided AS tblMBILPayment_ysnVoided, 
            T.dtmPostedDate AS tblMBILPayment_dtmPostedDate, 
            T.dtmVoidedDate AS tblMBILPayment_dtmVoidedDate, 
            T.intConcurrencyId AS tblMBILPayment_intConcurrencyId, 
            True AS _from0
        FROM CodeFirstDatabase.tblMBILPayment AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.tblMBILOutOfGas.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView34()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing tblMBILOutOfGas
        [CodeFirstDatabaseSchema.tblMBILOutOfGas](T1.tblMBILOutOfGas_intOutOfGasId, T1.tblMBILOutOfGas_intEntityId, T1.tblMBILOutOfGas_intSiteId, T1.tblMBILOutOfGas_ysnLeakTest, T1.tblMBILOutOfGas_dblPressureReading, T1.tblMBILOutOfGas_dblMinutesHeld, T1.tblMBILOutOfGas_ysnTaggedLocked, T1.tblMBILOutOfGas_ysnCustomerNotified, T1.tblMBILOutOfGas_ysnAppliancesLit, T1.tblMBILOutOfGas_strNotes, T1.tblMBILOutOfGas_intConcurrencyId)
    FROM (
        SELECT 
            T.intOutOfGasId AS tblMBILOutOfGas_intOutOfGasId, 
            T.intEntityId AS tblMBILOutOfGas_intEntityId, 
            T.intSiteId AS tblMBILOutOfGas_intSiteId, 
            T.ysnLeakTest AS tblMBILOutOfGas_ysnLeakTest, 
            T.dblPressureReading AS tblMBILOutOfGas_dblPressureReading, 
            T.dblMinutesHeld AS tblMBILOutOfGas_dblMinutesHeld, 
            T.ysnTaggedLocked AS tblMBILOutOfGas_ysnTaggedLocked, 
            T.ysnCustomerNotified AS tblMBILOutOfGas_ysnCustomerNotified, 
            T.ysnAppliancesLit AS tblMBILOutOfGas_ysnAppliancesLit, 
            T.strNotes AS tblMBILOutOfGas_strNotes, 
            T.intConcurrencyId AS tblMBILOutOfGas_intConcurrencyId, 
            True AS _from0
        FROM MBILEntities.tblMBILOutOfGas AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for MBILEntities.tblMBILOutOfGas.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView35()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing tblMBILOutOfGas
        [iRely.MobileBilling.Model.tblMBILOutOfGas](T1.tblMBILOutOfGas_intOutOfGasId, T1.tblMBILOutOfGas_intEntityId, T1.tblMBILOutOfGas_intSiteId, T1.tblMBILOutOfGas_ysnLeakTest, T1.tblMBILOutOfGas_dblPressureReading, T1.tblMBILOutOfGas_dblMinutesHeld, T1.tblMBILOutOfGas_ysnTaggedLocked, T1.tblMBILOutOfGas_ysnCustomerNotified, T1.tblMBILOutOfGas_ysnAppliancesLit, T1.tblMBILOutOfGas_strNotes, T1.tblMBILOutOfGas_intConcurrencyId)
    FROM (
        SELECT 
            T.intOutOfGasId AS tblMBILOutOfGas_intOutOfGasId, 
            T.intEntityId AS tblMBILOutOfGas_intEntityId, 
            T.intSiteId AS tblMBILOutOfGas_intSiteId, 
            T.ysnLeakTest AS tblMBILOutOfGas_ysnLeakTest, 
            T.dblPressureReading AS tblMBILOutOfGas_dblPressureReading, 
            T.dblMinutesHeld AS tblMBILOutOfGas_dblMinutesHeld, 
            T.ysnTaggedLocked AS tblMBILOutOfGas_ysnTaggedLocked, 
            T.ysnCustomerNotified AS tblMBILOutOfGas_ysnCustomerNotified, 
            T.ysnAppliancesLit AS tblMBILOutOfGas_ysnAppliancesLit, 
            T.strNotes AS tblMBILOutOfGas_strNotes, 
            T.intConcurrencyId AS tblMBILOutOfGas_intConcurrencyId, 
            True AS _from0
        FROM CodeFirstDatabase.tblMBILOutOfGas AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.vyuMBILOutOfGas.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView36()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing vyuMBILOutOfGas
        [CodeFirstDatabaseSchema.vyuMBILOutOfGas](T1.vyuMBILOutOfGas_intOutOfGasId, T1.vyuMBILOutOfGas_intEntityId, T1.vyuMBILOutOfGas_strCustomerNumber, T1.vyuMBILOutOfGas_strName, T1.vyuMBILOutOfGas_intSiteId, T1.vyuMBILOutOfGas_intSiteNumber, T1.vyuMBILOutOfGas_strSerialNumber, T1.vyuMBILOutOfGas_dblTankCapacity, T1.vyuMBILOutOfGas_strDescription, T1.vyuMBILOutOfGas_ysnLeakTest, T1.vyuMBILOutOfGas_dblPressureReading, T1.vyuMBILOutOfGas_dblMinutesHeld, T1.vyuMBILOutOfGas_ysnTaggedLocked, T1.vyuMBILOutOfGas_ysnCustomerNotified, T1.vyuMBILOutOfGas_ysnAppliancesLit, T1.vyuMBILOutOfGas_strNotes)
    FROM (
        SELECT 
            T.intOutOfGasId AS vyuMBILOutOfGas_intOutOfGasId, 
            T.intEntityId AS vyuMBILOutOfGas_intEntityId, 
            T.strCustomerNumber AS vyuMBILOutOfGas_strCustomerNumber, 
            T.strName AS vyuMBILOutOfGas_strName, 
            T.intSiteId AS vyuMBILOutOfGas_intSiteId, 
            T.intSiteNumber AS vyuMBILOutOfGas_intSiteNumber, 
            T.strSerialNumber AS vyuMBILOutOfGas_strSerialNumber, 
            T.dblTankCapacity AS vyuMBILOutOfGas_dblTankCapacity, 
            T.strDescription AS vyuMBILOutOfGas_strDescription, 
            T.ysnLeakTest AS vyuMBILOutOfGas_ysnLeakTest, 
            T.dblPressureReading AS vyuMBILOutOfGas_dblPressureReading, 
            T.dblMinutesHeld AS vyuMBILOutOfGas_dblMinutesHeld, 
            T.ysnTaggedLocked AS vyuMBILOutOfGas_ysnTaggedLocked, 
            T.ysnCustomerNotified AS vyuMBILOutOfGas_ysnCustomerNotified, 
            T.ysnAppliancesLit AS vyuMBILOutOfGas_ysnAppliancesLit, 
            T.strNotes AS vyuMBILOutOfGas_strNotes, 
            True AS _from0
        FROM MBILEntities.vyuMBILOutOfGas AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for MBILEntities.vyuMBILOutOfGas.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView37()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing vyuMBILOutOfGas
        [iRely.MobileBilling.Model.vyuMBILOutOfGas](T1.vyuMBILOutOfGas_intOutOfGasId, T1.vyuMBILOutOfGas_intEntityId, T1.vyuMBILOutOfGas_strCustomerNumber, T1.vyuMBILOutOfGas_strName, T1.vyuMBILOutOfGas_intSiteId, T1.vyuMBILOutOfGas_intSiteNumber, T1.vyuMBILOutOfGas_strSerialNumber, T1.vyuMBILOutOfGas_dblTankCapacity, T1.vyuMBILOutOfGas_strDescription, T1.vyuMBILOutOfGas_ysnLeakTest, T1.vyuMBILOutOfGas_dblPressureReading, T1.vyuMBILOutOfGas_dblMinutesHeld, T1.vyuMBILOutOfGas_ysnTaggedLocked, T1.vyuMBILOutOfGas_ysnCustomerNotified, T1.vyuMBILOutOfGas_ysnAppliancesLit, T1.vyuMBILOutOfGas_strNotes)
    FROM (
        SELECT 
            T.intOutOfGasId AS vyuMBILOutOfGas_intOutOfGasId, 
            T.intEntityId AS vyuMBILOutOfGas_intEntityId, 
            T.strCustomerNumber AS vyuMBILOutOfGas_strCustomerNumber, 
            T.strName AS vyuMBILOutOfGas_strName, 
            T.intSiteId AS vyuMBILOutOfGas_intSiteId, 
            T.intSiteNumber AS vyuMBILOutOfGas_intSiteNumber, 
            T.strSerialNumber AS vyuMBILOutOfGas_strSerialNumber, 
            T.dblTankCapacity AS vyuMBILOutOfGas_dblTankCapacity, 
            T.strDescription AS vyuMBILOutOfGas_strDescription, 
            T.ysnLeakTest AS vyuMBILOutOfGas_ysnLeakTest, 
            T.dblPressureReading AS vyuMBILOutOfGas_dblPressureReading, 
            T.dblMinutesHeld AS vyuMBILOutOfGas_dblMinutesHeld, 
            T.ysnTaggedLocked AS vyuMBILOutOfGas_ysnTaggedLocked, 
            T.ysnCustomerNotified AS vyuMBILOutOfGas_ysnCustomerNotified, 
            T.ysnAppliancesLit AS vyuMBILOutOfGas_ysnAppliancesLit, 
            T.strNotes AS vyuMBILOutOfGas_strNotes, 
            True AS _from0
        FROM CodeFirstDatabase.vyuMBILOutOfGas AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.tblMBILCompanyPreference.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView38()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing tblMBILCompanyPreference
        [CodeFirstDatabaseSchema.tblMBILCompanyPreference](T1.tblMBILCompanyPreference_intCompanyPreferenceId, T1.tblMBILCompanyPreference_ysnShowLogo, T1.tblMBILCompanyPreference_intCompanyContact, T1.tblMBILCompanyPreference_strCompanyName, T1.tblMBILCompanyPreference_strDefaultCustomerNo, T1.tblMBILCompanyPreference_strDefaultSiteNo, T1.tblMBILCompanyPreference_strHazardousSpillCompanyName, T1.tblMBILCompanyPreference_strHazardousSpillCompanyPhoneNumber, T1.tblMBILCompanyPreference_strEmergencyCustomerCode, T1.tblMBILCompanyPreference_intConcurrencyId)
    FROM (
        SELECT 
            T.intCompanyPreferenceId AS tblMBILCompanyPreference_intCompanyPreferenceId, 
            T.ysnShowLogo AS tblMBILCompanyPreference_ysnShowLogo, 
            T.intCompanyContact AS tblMBILCompanyPreference_intCompanyContact, 
            T.strCompanyName AS tblMBILCompanyPreference_strCompanyName, 
            T.strDefaultCustomerNo AS tblMBILCompanyPreference_strDefaultCustomerNo, 
            T.strDefaultSiteNo AS tblMBILCompanyPreference_strDefaultSiteNo, 
            T.strHazardousSpillCompanyName AS tblMBILCompanyPreference_strHazardousSpillCompanyName, 
            T.strHazardousSpillCompanyPhoneNumber AS tblMBILCompanyPreference_strHazardousSpillCompanyPhoneNumber, 
            T.strEmergencyCustomerCode AS tblMBILCompanyPreference_strEmergencyCustomerCode, 
            T.intConcurrencyId AS tblMBILCompanyPreference_intConcurrencyId, 
            True AS _from0
        FROM MBILEntities.tblMBILCompanyPreferences AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for MBILEntities.tblMBILCompanyPreferences.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView39()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing tblMBILCompanyPreferences
        [iRely.MobileBilling.Model.tblMBILCompanyPreference](T1.tblMBILCompanyPreference_intCompanyPreferenceId, T1.tblMBILCompanyPreference_ysnShowLogo, T1.tblMBILCompanyPreference_intCompanyContact, T1.tblMBILCompanyPreference_strCompanyName, T1.tblMBILCompanyPreference_strDefaultCustomerNo, T1.tblMBILCompanyPreference_strDefaultSiteNo, T1.tblMBILCompanyPreference_strHazardousSpillCompanyName, T1.tblMBILCompanyPreference_strHazardousSpillCompanyPhoneNumber, T1.tblMBILCompanyPreference_strEmergencyCustomerCode, T1.tblMBILCompanyPreference_intConcurrencyId)
    FROM (
        SELECT 
            T.intCompanyPreferenceId AS tblMBILCompanyPreference_intCompanyPreferenceId, 
            T.ysnShowLogo AS tblMBILCompanyPreference_ysnShowLogo, 
            T.intCompanyContact AS tblMBILCompanyPreference_intCompanyContact, 
            T.strCompanyName AS tblMBILCompanyPreference_strCompanyName, 
            T.strDefaultCustomerNo AS tblMBILCompanyPreference_strDefaultCustomerNo, 
            T.strDefaultSiteNo AS tblMBILCompanyPreference_strDefaultSiteNo, 
            T.strHazardousSpillCompanyName AS tblMBILCompanyPreference_strHazardousSpillCompanyName, 
            T.strHazardousSpillCompanyPhoneNumber AS tblMBILCompanyPreference_strHazardousSpillCompanyPhoneNumber, 
            T.strEmergencyCustomerCode AS tblMBILCompanyPreference_strEmergencyCustomerCode, 
            T.intConcurrencyId AS tblMBILCompanyPreference_intConcurrencyId, 
            True AS _from0
        FROM CodeFirstDatabase.tblMBILCompanyPreference AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.tblSMStartingNumber.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView40()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing tblSMStartingNumber
        [CodeFirstDatabaseSchema.tblSMStartingNumber](T1.tblSMStartingNumber_intStartingNumberId, T1.tblSMStartingNumber_strTransactionType, T1.tblSMStartingNumber_strPrefix, T1.tblSMStartingNumber_intNumber, T1.tblSMStartingNumber_strModule, T1.tblSMStartingNumber_ysnEnable, T1.tblSMStartingNumber_intConcurrencyId)
    FROM (
        SELECT 
            T.intStartingNumberId AS tblSMStartingNumber_intStartingNumberId, 
            T.strTransactionType AS tblSMStartingNumber_strTransactionType, 
            T.strPrefix AS tblSMStartingNumber_strPrefix, 
            T.intNumber AS tblSMStartingNumber_intNumber, 
            T.strModule AS tblSMStartingNumber_strModule, 
            T.ysnEnable AS tblSMStartingNumber_ysnEnable, 
            T.intConcurrencyId AS tblSMStartingNumber_intConcurrencyId, 
            True AS _from0
        FROM MBILEntities.tblSMStartingNumbers AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for MBILEntities.tblSMStartingNumbers.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView41()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing tblSMStartingNumbers
        [iRely.MobileBilling.Model.tblSMStartingNumber](T1.tblSMStartingNumber_intStartingNumberId, T1.tblSMStartingNumber_strTransactionType, T1.tblSMStartingNumber_strPrefix, T1.tblSMStartingNumber_intNumber, T1.tblSMStartingNumber_strModule, T1.tblSMStartingNumber_ysnEnable, T1.tblSMStartingNumber_intConcurrencyId)
    FROM (
        SELECT 
            T.intStartingNumberId AS tblSMStartingNumber_intStartingNumberId, 
            T.strTransactionType AS tblSMStartingNumber_strTransactionType, 
            T.strPrefix AS tblSMStartingNumber_strPrefix, 
            T.intNumber AS tblSMStartingNumber_intNumber, 
            T.strModule AS tblSMStartingNumber_strModule, 
            T.ysnEnable AS tblSMStartingNumber_ysnEnable, 
            T.intConcurrencyId AS tblSMStartingNumber_intConcurrencyId, 
            True AS _from0
        FROM CodeFirstDatabase.tblSMStartingNumber AS T
    ) AS T1");
        }
    }
}
