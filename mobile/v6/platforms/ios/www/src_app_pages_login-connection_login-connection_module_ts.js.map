{"version":3,"sources":["./src/app/framework/brl/implementation/user.ts","./src/app/framework/brl/interface/iuser.ts","./src/app/pages/login-connection/login-connection-routing.module.ts","./src/app/pages/login-connection/login-connection.module.ts","./src/app/pages/login-connection/login-connection.page.ts","./src/app/pages/login-connection/login-connection.page.scss","./src/app/pages/login-connection/login-connection.page.html"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAgE;AACrB;AACgC;AAC7B;AAEO;IAGxC,OAAO,SAAP,OAAQ,SAAQ,sDAAQ;IAEjC,YAAmB,MAAiB,EAAS,EAAU;QACnD,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;QADH,WAAM,GAAN,MAAM,CAAW;QAAS,OAAE,GAAF,EAAE,CAAQ;IAEvD,CAAC;IAED,YAAY,CAAC,QAAgB,EAAE,QAAgB;QAC3C,IAAI,EAAE,GAAG,IAAI,CAAC;QACd,IACA;YACI,OAAO,EAAE,CAAC,UAAU,CAAC,wCAAwC,GAAG,QAAQ,GAAG,qBAAqB,GAAG,QAAQ,GAAG,GAAG,CAAC,CAAC;SACtH;QACD,OAAO,CAAC,EAAE;YACN,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;gBACnC,OAAO,CAAC,QAAQ,CAAC,CAAC;YACtB,CAAC,CAAC,CAAC;SACN;IACL,CAAC;IAEM,aAAa,CAAC,MAAY;QAC7B,IAAI,OAAO,GAAG,IAAI,0DAAU,EAAE,CAAC;QAC/B,OAAO,CAAC,eAAe,GAAG,MAAM,CAAC,eAAe,CAAC;QACjD,OAAO,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QACrC,OAAO,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;QACzC,OAAO,CAAC,eAAe,GAAG,MAAM,CAAC,eAAe,CAAC;QACjD,OAAO,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;QACzC,OAAO,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;QACzC,OAAO,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;QACzC,OAAO,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;QAEzC,OAAO,CAAC,eAAe,GAAG,KAAK,CAAC;QAChC,OAAO,CAAC,eAAe,GAAG,IAAI,CAAC;QAC/B,OAAO,CAAC,cAAc,GAAG,EAAE,CAAC;QAE5B,OAAO,CAAC,eAAe,GAAG,MAAM,CAAC,eAAe,CAAC;QACjD,OAAO,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;QACzC,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC;QAEzB,OAAO,OAAO,CAAC;IACnB,CAAC;CAEJ;;YA/CQ,+EAAS;YAFT,4DAAM;;AAQF,OAAO;IADnB,yDAAU,EAAE;GACA,OAAO,CAyCnB;AAzCmB;;;;;;;;;;;;;;;;;;;;;;ACR4C;AACrB;AAGqB;AACW;IAG9D,QAAQ,SAAR,QAAS,SAAQ,oEAAU;IAEpC,YAAmB,MAAiB,EAAS,EAAU;QACnD,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;QADH,WAAM,GAAN,MAAM,CAAW;QAAS,OAAE,GAAF,EAAE,CAAQ;IAEvD,CAAC;CAEJ;;YATQ,+EAAS;YALT,4DAAM;;AAQF,QAAQ;IADpB,yDAAU,EAAE;GACA,QAAQ,CAMpB;AANoB;;;;;;;;;;;;;;;;;;;;;ACRoB;AACc;AAEO;AAE9D,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,uEAAmB;KAC/B;CACF,CAAC;IAMW,gCAAgC,SAAhC,gCAAgC;CAAG;AAAnC,gCAAgC;IAJ5C,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,gCAAgC,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBJ;AACM;AACgC;AAElC;AAEwC;AAEvB;AAEI;AACmB;AACP;AAEf;IAmBlD,yBAAyB,SAAzB,yBAAyB;CAAG;AAA5B,yBAAyB;IAjBrC,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,+DAAmB;YACnB,wDAAW;YACX,8FAAgC;SACjC;QACD,YAAY,EAAE,CAAC,uEAAmB,CAAC;QACnC,SAAS,EAAE;YACT,mEAAO;YACP,uDAAW;YACX,uEAAO;YACP,yFAAS;YACT,mFAAa;SACd;KACF,CAAC;GACW,yBAAyB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjCY;AAC2C;AACZ;AAGvC;AAGqB;AACqB;AACvB;AAQpB;AACA;IAQ1B,mBAAmB,SAAnB,mBAAmB;IAO9B,YAAmB,OAAsB;IAC7B,gCAAgC;IAChC,uCAAuC;IAC/B,YAA0B,EAC3B,WAAwB,EACvB,WAAoB;IAC5B,oCAAoC;IAC5B,WAA8B,EAC9B,SAA0B;IAClC,wBAAwB;IACjB,KAAc,EACd,MAAc,EACb,QAAkB;QAZnB,YAAO,GAAP,OAAO,CAAe;QAGrB,iBAAY,GAAZ,YAAY,CAAc;QAC3B,gBAAW,GAAX,WAAW,CAAa;QACvB,gBAAW,GAAX,WAAW,CAAS;QAEpB,gBAAW,GAAX,WAAW,CAAmB;QAC9B,cAAS,GAAT,SAAS,CAAiB;QAE3B,UAAK,GAAL,KAAK,CAAS;QACd,WAAM,GAAN,MAAM,CAAQ;QACb,aAAQ,GAAR,QAAQ,CAAU;QACpC,IAAI,EAAE,GAAG,IAAI,CAAC;QACd,mDAAmD;QAEnD,IAAI,WAAW,GAAG,CAAC,OAAoB,EAAE,EAAE;YACzC,IAAG,OAAO,CAAC,KAAK,EAAC;gBACf,IAAG,OAAO,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,KAAK,CAAC,MAAM,GAAC,CAAC,EAAC;oBAC1D,oGAAyB,GAAG,OAAO,CAAC,KAAK,GAAG,GAAG,CAAC;oBAEhD,EAAE,CAAC,WAAW,EAAE,CAAC;oBAEjB,OAAO,CAAC,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE;wBAC5B,EAAE,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;4BACjC,OAAO,CAAC,IAAI,CAAC,CAAC;wBAChB,CAAC,EAAE,GAAG,CAAC,EAAE;4BACP,OAAO,CAAC,KAAK,CAAC,CAAC;wBACjB,CAAC,CAAC,CAAC;oBACL,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAC,YAAY,EAAE,IAAI,EAAC,CAAC,CAAC;iBACxD;qBACG;oBACF,IAAI,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;oBACrC,oGAAyB,GAAG,KAAK,CAAC,CAAC,+BAA+B;oBAElE,EAAE,CAAC,WAAW,EAAE,CAAC;oBAEjB,OAAO,CAAC,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE;wBAC5B,EAAE,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;4BACjC,OAAO,CAAC,IAAI,CAAC,CAAC;wBAChB,CAAC,EAAE,GAAG,CAAC,EAAE;4BACP,OAAO,CAAC,KAAK,CAAC,CAAC;wBACjB,CAAC,CAAC,CAAC;oBACL,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAC,YAAY,EAAE,IAAI,EAAC,CAAC,CAAC;oBAEvD,mCAAmC;oBACnC,oBAAoB;oBACpB,2DAA2D;iBAC5D;aACF;QACH,CAAC,CAAC;QAEF,EAAE,CAAC,cAAc,GAAG,EAAE,CAAC,WAAW,CAAC,KAAK,CAAC;YACrC,OAAO,EAAE,CAAC,EAAE,EAAE,+DAAmB,EAAE,WAAW,CAAC;YAC/C,UAAU,EAAE,CAAC,EAAE,EAAE,+DAAmB,CAAC;SACxC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,SAAS;QACP,IAAI,EAAE,GAAG,IAAI,CAAC;QAEd,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAE1B,EAAE,CAAC,WAAW,EAAE,CAAC;QACjB,EAAE,CAAC,YAAY,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,CAAC,UAAU,EAAE,EAAE;YACvD,CAAC;YACD,IAAI,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;YAC7C,IACA;gBACE,IAAI,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;gBAC7C,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;gBAE5C,oGAAyB,GAAG,cAAc,CAAC,OAAO,IAAI,oGAAyB,CAAC;gBAChF,gGAAqB,GAAG,cAAc,CAAC,UAAU,IAAI,gGAAqB,CAAC;gBAE3E,EAAE,CAAC,cAAc,CAAC,QAAQ,CAAC;oBACzB,OAAO,EAAE,UAAU,CAAC,OAAO,IAAI,cAAc,CAAC,OAAO;oBACrD,UAAU,EAAE,UAAU,CAAC,UAAU,IAAI,cAAc,CAAC,UAAU;iBAC/D,CAAC,CAAC;aACJ;YACD,OAAM,CAAC,EACP;gBACE,oGAAyB,GAAG,UAAU,CAAC,OAAO,IAAI,oGAAyB,CAAC;gBAC5E,gGAAqB,GAAG,UAAU,CAAC,UAAU,IAAI,gGAAqB,CAAC;gBAEvE,EAAE,CAAC,cAAc,CAAC,QAAQ,CAAC;oBACzB,OAAO,EAAE,UAAU,CAAC,OAAO,IAAI,oGAAyB;oBACxD,UAAU,EAAE,UAAU,CAAC,UAAU,IAAI,gGAAqB;iBAC3D,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,gBAAgB,EAAE,CAAC;IACxB,CAAC;IAED,WAAW;QACT,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IACtB,CAAC;IAED,QAAQ;QACN,IAAI,EAAE,GAAG,IAAI,CAAC;QACd,EAAE,CAAC,WAAW,EAAE,CAAC;QACjB,OAAO,EAAE,CAAC,YAAY,CAAC,WAAW,EAAE;aACnC,IAAI,CAAC,mDAAG,CAAC,CAAC,MAAM,EAAE,EAAE;YACnB,EAAE,CAAC,WAAW,EAAE,CAAC;YACjB,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;gBACxB,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACvB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC,CAAC;IACN,CAAC;IAED,IAAI,CAAC,KAAiB,EAAE,KAAc;QACpC,IAAI,EAAE,GAAG,IAAI,CAAC;QACd,EAAE,CAAC,aAAa,GAAG,IAAI,CAAC;QAExB,IAAI,KAAK,EAAE;YACT,gGAAqB,GAAG,KAAK,CAAC,UAAU,CAAC;YACzC,oGAAyB,GAAG,KAAK,CAAC,OAAO,GAAG,GAAG,CAAC;YAEhD,EAAE,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YACrC,EAAE,CAAC,WAAW,CAAC,gBAAgB,CAAC,yCAAyC,EAAE;gBACzE,wBAAwB;gBAExB,EAAE,CAAC,SAAS,CAAC,OAAO,CAAC;oBACnB,WAAW,EAAE,IAAI;iBAClB,CAAC,CAAC;gBAEH,yBAAyB;gBACzB,oCAAoC;gBACpC,IAAI;YAEN,CAAC,EAAE,IAAI,CAAC,CAAC;SACV;IACH,CAAC;IAEK,gBAAgB;;YACpB,IAAI,EAAE,GAAG,IAAI,CAAC;YACd,EAAE,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE;gBAC5B,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,UAAU,GAAG;oBAChC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;oBACjB,EAAE,CAAC,UAAU,GAAG,EAAE,CAAC;oBACnB,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,GAAG,CAAC,MAAM,GAAC,CAAC,EAAE,CAAC,EAAE,EAAC;wBACpC,IAAG,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,EAAC;4BACrC,IAAI,OAAO,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,cAAc,EAAC,EAAE,CAAC,CAAC,OAAO,CAAC,WAAW,EAAC,OAAO,CAAC,CAAC;4BAC7E,IAAI,YAAY,GAAG,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;4BAC1C,IAAI,MAAM,GAAG;gCACX,OAAO,EAAE,OAAO;gCAChB,IAAI,EAAE,YAAY,CAAC,CAAC,CAAC;gCACrB,OAAO,EAAE,YAAY,CAAC,CAAC,CAAC;6BACzB;4BACD,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;4BAC3B,YAAY,CAAC,OAAO,CAAC,YAAY,EAAC,MAAM,CAAC,OAAO,CAAC,CAAC;yBACnD;qBACF;gBACH,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACL,CAAC;KAAA;IAED,GAAG,CAAC,KAAiB,EAAE,KAAc;QACnC,IAAI,EAAE,GAAG,IAAI,CAAC;QACd,EAAE,CAAC,aAAa,GAAG,IAAI,CAAC;QAExB,IAAI,KAAK,EAAE;YACT,gGAAqB,GAAG,KAAK,CAAC,UAAU,CAAC;YACzC,oGAAyB,GAAG,KAAK,CAAC,OAAO,CAAC;YAE1C,EAAE,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YACrC,EAAE,CAAC,gBAAgB,EAAE,CAAC;SACvB;IACH,CAAC;IAED,kBAAkB,CAAC,IAAI;QACrB,gGAAqB,GAAG,IAAI,CAAC,OAAO,CAAC;QACrC,oGAAyB,GAAG,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;QAE5C,IAAI,UAAU,GAAG,EAAC,SAAS,EAAE,IAAI,CAAC,IAAI,EAAC,YAAY,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC;QAEnE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,cAAc,GAAG,UAAU,CAAC,OAAO,GAAG,WAAW,GAAG,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,cAAc,GAAG,UAAU,CAAC,UAAU,GAAG,kBAAkB,GAAG,UAAU,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC;QAC/L,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,EAAE,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC;QACzD,YAAY,CAAC,OAAO,CAAC,YAAY,EAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAClD,CAAC;CAEF;;YA3NM,yDAAa;YASb,kEAAY;YARZ,uDAAW;YAMX,mEAAO;YAPyB,6DAAiB;YAAlC,2DAAe;YAiB9B,mDAAO;YACP,oDAAM;YAlB6C,oDAAQ;;AA0BrD,mBAAmB;IANjC,yDAAS,CAAC;QACT,QAAQ,EAAE,sBAAsB;QAChC,qFAA2C;;KAE5C,CAAC;IACF,uDAAuD;GACxC,mBAAmB,CAiM/B;AAjM+B;;;;;;;;;;;;;;;;AC3BlC,iEAAe,8CAA8C,+HAA+H,E;;;;;;;;;;;;;;;ACA5L,iEAAe,qQAAqQ,yuCAAyuC,sBAAsB,8UAA8U,oBAAoB,uaAAua,cAAc,6LAA6L,E","file":"src_app_pages_login-connection_login-connection_module_ts.js","sourcesContent":["import { SQLite, SQLiteObject } from '@ionic-native/sqlite/ngx';\nimport { Injectable } from '@angular/core';\nimport { CommonSQL } from '../../_common/sqlite/implementation/common-sql';\nimport { IUserBRL } from '../interface/iuser';\nimport { User } from '../../models/user';\nimport { GlobalInfo } from '../../models/globalinfo';\n\n@Injectable()\nexport class UserBRL extends IUserBRL {\n\n    constructor(public common: CommonSQL, public db: SQLite){\n        super(common, db);\n    }\n\n    loginOffline(username: string, password: string) {\n        var me = this;\n        try\n        {            \n            return me.getByQuery(\"SELECT * FROM user WHERE strUserName='\" + username + \"' and strPassword='\" + password + \"'\");\n        }\n        catch (e) {\n            return new Promise((resolve, reject) => {\n                resolve(\"failed\");\n            });\n        }\n    }\n\n    public defaultRecord(record: User){\n        var _global = new GlobalInfo();\n        _global.intUserMobileId = record.intUserMobileId;\n        _global.intUserId = record.intUserId;\n        _global.intLocation = record.intLocation;\n        _global.intDriverNumber = record.intDriverNumber;\n        _global.strFullName = record.strFullName;\n        _global.strLocation = record.strLocation;\n        _global.strPassword = record.strPassword;\n        _global.strUserName = record.strUserName;\n\n        _global.ysnShiftOnGoing = false;\n        _global.intShiftCounter = null;\n        _global.strTruckNumber = '';\n\n        _global.ContactParentId = record.ContactParentId;\n        _global.CompanyName = record.CompanyName;\n        _global.ysnLogged = true;\n\n        return _global;\n    }\n\n}","import { SQLite, SQLiteObject } from '@ionic-native/sqlite/ngx';\nimport { Injectable } from '@angular/core';\n\nimport { User } from '../../models/user';\nimport { Base } from '../../_common/sqlite/implementation/base';\nimport { CommonSQL } from '../../_common/sqlite/implementation/common-sql';\n\n@Injectable()\nexport class IUserBRL extends Base<User> {\n\n    constructor(public common: CommonSQL, public db: SQLite){\n        super(common, db);\n    }\n\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginConnectionPage } from './login-connection.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginConnectionPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginConnectionPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule, FormBuilder } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginConnectionPageRoutingModule } from './login-connection-routing.module';\n\nimport { LoginConnectionPage } from './login-connection.page';\n\nimport { UserBRL } from '../../framework/brl/implementation/user';\nimport { CommonSQL } from '../../framework/_common/sqlite/implementation/common-sql';\nimport { GlobalInfoBRL } from '../../framework/brl/implementation/globalinfo';\n\nimport { Message } from '../../framework/_common/base/message';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    LoginConnectionPageRoutingModule\n  ],\n  declarations: [LoginConnectionPage],\n  providers: [\n    Message,\n    FormBuilder,\n    UserBRL,\n    CommonSQL,\n    GlobalInfoBRL\n  ]\n})\nexport class LoginConnectionPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { NavController, ModalController, LoadingController, Platform } from '@ionic/angular';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\n\nimport { Observable, from, of } from \"rxjs\";\nimport { map, tap } from 'rxjs/operators';\nimport { catchError } from 'rxjs/operators';\n\nimport { Message } from '../../framework/_common/base/message';\nimport { Configuration } from '../../framework/_common/configuration/configuration';\nimport { LoginService } from '../../providers/login.service';\nimport { NetworkService } from '../../providers/network.service';\nimport { User } from '../../framework/models/user';\nimport { Connection } from '../../framework/models/connection';\nimport { GlobalInfo } from '../../framework/models/globalinfo';\nimport { AppVersion } from '@ionic-native/app-version/ngx';\n\nimport { CommonSQL } from '../../framework/_common/sqlite/implementation/common-sql';\nimport { Storage } from '@ionic/storage';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login-connection',\n  templateUrl: './login-connection.page.html',\n  styleUrls: ['./login-connection.page.scss'],\n})\n// export class LoginConnectionPage implements OnInit {\n  export class LoginConnectionPage implements OnInit {\n    companies: Connection[];\n    connectionForm: FormGroup;\n    submitAttempt: boolean;\n    fromSettings: boolean;\n    serverList: any[];\n  \n    constructor(public navCtrl: NavController, \n                // public navParams: NavParams, \n                // private service: ConnectionService, \n                private loginService: LoginService, \n                public formBuilder: FormBuilder, \n                private messageUtil: Message,\n                // private viewCtrl: ViewController,\n                private loadingCtrl: LoadingController,\n                private modalCtrl: ModalController,\n                // private zone: NgZone,\n                public local: Storage,\n                public router: Router,\n                private platform: Platform) {\n      let me = this;\n      // me.fromSettings = navParams.get(\"fromSettings\");\n  \n      let isLinkValid = (control: FormControl) => {\n        if(control.value){\n          if(control.value.lastIndexOf('/') != control.value.length-1){\n            Configuration.BaseAddress = control.value + '/';\n  \n            me.resetValues();\n            \n            return (new Promise(resolve => {\n              me.loadData().subscribe((result) => {\n                resolve(true); \n              }, err => {\n                resolve(false);\n              });\n            })).then(result => result ? {} : {\"is_invalid\": true}); \n          }\n          else{\n            var _link = control.value.toString();\n            Configuration.BaseAddress = _link; //.substring(0,_link.length-1);\n  \n            me.resetValues();\n  \n            return (new Promise(resolve => {\n              me.loadData().subscribe((result) => {\n                resolve(true); \n              }, err => {\n                resolve(false);\n              });\n            })).then(result => result ? {} : {\"is_invalid\": true}); \n  \n            // return (new Promise(resolve => {\n            //   resolve(false);\n            // })).then(result => result ? {} : {\"is_invalid\": true}); \n          }\n        }\n      };\n  \n      me.connectionForm = me.formBuilder.group({\n          strLink: ['', Validators.required, isLinkValid],\n          strCompany: ['', Validators.required]\n      });\n    }\n\n    ngOnInit() {\n      this.setupInit();\n    }\n  \n    setupInit() {\n      var me = this;\n\n      console.log('connection');\n\n      me.resetValues();\n      me.loginService.getConnection().subscribe((connection) => {\n        ;\n        var _connection = JSON.stringify(connection);\n        try\n        {\n          var _newConnection = JSON.parse(_connection);\n          _newConnection = JSON.parse(_newConnection);\n          \n          Configuration.BaseAddress = _newConnection.strLink || Configuration.BaseAddress;\n          Configuration.Company = _newConnection.strCompany || Configuration.Company;\n  \n          me.connectionForm.setValue({\n            strLink: connection.strLink || _newConnection.strLink,\n            strCompany: connection.strCompany || _newConnection.strCompany\n          });\n        }\n        catch(e)\n        {\n          Configuration.BaseAddress = connection.strLink || Configuration.BaseAddress;\n          Configuration.Company = connection.strCompany || Configuration.Company;\n  \n          me.connectionForm.setValue({\n            strLink: connection.strLink || Configuration.BaseAddress,\n            strCompany: connection.strCompany || Configuration.Company\n          });\n        }\n      });\n  \n      me.getCurrentServer();\n    }\n  \n    resetValues() {\n      this.companies = [];\n    }\n  \n    loadData() {   \n      var me = this;\n      me.resetValues();\n      return me.loginService.loadCompany()\n      .pipe(map((result) => {  \n        me.resetValues();\n        result.data.forEach((d) => { \n          me.companies.push(d);\n        });\n      }));\n    }\n  \n    save(value: Connection, valid: boolean) {\n      var me = this;\n      me.submitAttempt = true;\n  \n      if (valid) {\n        Configuration.Company = value.strCompany;\n        Configuration.BaseAddress = value.strLink + \"/\";\n  \n        me.loginService.addConnection(value);\n        me.messageUtil.showToastMessage(\"Connection has been successfully saved.\", function() {\n          //me.viewCtrl.dismiss();\n\n          me.modalCtrl.dismiss({\n            'dismissed': true\n          });\n  \n          // if (me.fromSettings) {\n          //me.router.navigateByUrl('/login');\n          // }\n  \n        }, 1000);\n      }\n    }\n  \n    async getCurrentServer(){\n      var me = this;      \n      me.platform.ready().then(() => {\n        me.local.keys().then(function (val) {\n          console.log(val);\n          me.serverList = [];\n          for(var x = 0; x <= val.length-1; x++){\n            if(val[x].indexOf('servername_') != -1){\n              var _server = val[x].replace('_servername_','').replace('_company_','  -  ');\n              var _splitServer = _server.split('  -  ');\n              var server = {\n                display: _server,\n                name: _splitServer[0],\n                company: _splitServer[1]\n              }\n              me.serverList.push(server);\n              localStorage.setItem('connection',server.display);\n            }\n          }\n        });\n      });\n    }\n  \n    add(value: Connection, valid: boolean) {\n      var me = this;\n      me.submitAttempt = true;\n  \n      if (valid) {\n        Configuration.Company = value.strCompany;\n        Configuration.BaseAddress = value.strLink;\n  \n        me.loginService.addConnection(value);\n        me.getCurrentServer();\n      }\n    }\n\n    selectedConnection(item) {\n      Configuration.Company = item.company;\n      Configuration.BaseAddress = item.name + \"/\";\n\n      var connection = {\"strLink\": item.name,\"strCompany\": item.company};\n\n      this.local.set('_servername_' + connection.strLink + '_company_' + connection.strCompany, JSON.parse('{\"strLink\":\"' + connection.strCompany + '\",\"strCompany\":\"' + connection.strLink + '\"}'));    \n      this.local.set('connection', JSON.stringify(connection));\n      localStorage.setItem('connection',item.display);\n    }\n  \n  }","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsb2dpbi1jb25uZWN0aW9uLnBhZ2Uuc2NzcyJ9 */\";","export default \"<ion-header>\\n  <ion-toolbar class=\\\"my-toolbar box-shadow\\\" >\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title> Connection </ion-title>\\n    <ion-buttons slot=\\\"end\\\" style=\\\"padding-right: 15px;\\\">\\n      <ion-button ion-button (click)=\\\"save(connectionForm.value, connectionForm.valid)\\\" [disabled]=\\\"!this.connectionForm.dirty || !this.connectionForm.valid\\\">Save</ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>  \\n</ion-header>\\n\\n<ion-content padding>\\n  <form (ngSubmit)=\\\"save(connectionForm.value, connectionForm.valid)\\\" [formGroup]=\\\"connectionForm\\\">\\n    <div >\\n      <p class=\\\"connection-label\\\">Enter the i21 link and company <br> you want to connect</p>\\n    </div>\\n    <ion-list>\\n      <ion-item>\\n        <ion-label class=\\\"connectionlabel\\\">Link</ion-label>\\n        <ion-input type=\\\"text\\\" formControlName=\\\"strLink\\\" clearInput></ion-input>\\n      </ion-item>\\n\\n      <ion-item *ngIf=\\\"!connectionForm.controls.strLink.valid && connectionForm.controls.strLink.dirty\\\" no-lines>\\n        <p class=\\\"validationmessage\\\">Invalid link.</p>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label class=\\\"connectionlabel\\\">Company</ion-label>\\n        <ion-select formControlName=\\\"strCompany\\\" [disabled]=\\\"!connectionForm.controls.strLink.valid\\\" [value]=\\\"connectionForm.controls.strLink\\\" clearInput> \\n          <ion-select-option *ngFor=\\\"let company of companies\\\" [value]=\\\"company.strCompany\\\">\\n            <span>{{ company.strCompany }}</span>\\n          </ion-select-option>\\n        </ion-select>\\n      </ion-item>\\n\\n      <ion-item *ngIf=\\\"!connectionForm.controls.strCompany.valid && connectionForm.controls.strCompany.dirty\\\" no-lines>\\n        <p class=\\\"validationmessage\\\">This field is required.</p>\\n      </ion-item>\\n\\n      <div style=\\\"text-align: right; margin-right: 10px;\\\">\\n        <ion-button ion-button end (click)=\\\"add(connectionForm.value, connectionForm.valid)\\\">Add Connection</ion-button>\\n      </div>      \\n       \\n      <div >\\n        <p class=\\\"connection-label\\\">Select Server Name to connect:</p>\\n      </div>\\n      <ion-list>\\n        <ion-radio-group>\\n          <ion-item *ngFor=\\\"let item of serverList\\\" (click)=\\\"selectedConnection(item)\\\">\\n            <ion-label>{{item.display}}</ion-label>\\n            <ion-radio checked=\\\"false\\\"></ion-radio>\\n          </ion-item>\\n        </ion-radio-group>\\n      </ion-list>\\n\\n    </ion-list> \\n  </form>\\n</ion-content>\\n\\n\";"],"sourceRoot":"webpack:///"}