{"version":3,"sources":["./src/app/pages/tankwagon-inventory/tankwagon-inventory-routing.module.ts","./src/app/pages/tankwagon-inventory/tankwagon-inventory.module.ts","./src/app/pages/tankwagon-inventory/tankwagon-inventory.page.ts","./src/app/pages/tankwagon-inventory/tankwagon-inventory.page.scss","./src/app/pages/tankwagon-inventory/tankwagon-inventory.page.html"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AAEa;AAEpE,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,6EAAsB;KAClC;CACF,CAAC;IAMW,mCAAmC,SAAnC,mCAAmC;CAAG;AAAtC,mCAAmC;IAJ/C,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,mCAAmC,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBP;AACM;AACF;AAEA;AAE8C;AAEvB;AAEL;AACsB;AACP;IAgBjE,4BAA4B,SAA5B,4BAA4B;CAAG;AAA/B,4BAA4B;IAdxC,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,oGAAmC;SACpC;QACD,YAAY,EAAE,CAAC,6EAAsB,CAAC;QACtC,SAAS,EAAE;YACT,mEAAO;YACP,yFAAS;YACT,mFAAa;SACd;KACF,CAAC;GACW,4BAA4B,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5BS;AACiC;AAC1C;AAE4C;AACtB;AAEa;IAO/D,sBAAsB,SAAtB,sBAAsB;IAKjC,YAAmB,OAAsB,EACtB,WAA8B,EAC9B,SAA0B,EACzB,MAAc,EACd,mBAAwC,EACzC,SAAoB,EACnB,aAA4B;QAN7B,YAAO,GAAP,OAAO,CAAe;QACtB,gBAAW,GAAX,WAAW,CAAmB;QAC9B,cAAS,GAAT,SAAS,CAAiB;QACzB,WAAM,GAAN,MAAM,CAAQ;QACd,wBAAmB,GAAnB,mBAAmB,CAAqB;QACzC,cAAS,GAAT,SAAS,CAAW;QACnB,kBAAa,GAAb,aAAa,CAAe;QAThD,SAAI,GAAG,EAAE,CAAC;QACV,eAAU,GAAG,CAAC,CAAC;IASf,CAAC;IAED,QAAQ;IACR,CAAC;IAED,eAAe;QACb,OAAO,CAAC,GAAG,CAAC,uCAAuC,CAAC,CAAC;QAErD,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAEK,YAAY;;YAChB,IAAI,EAAE,GAAG,IAAI,CAAC;YACd,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC;YAEb,IAAI,MAAM,GAAG,MAAM,EAAE,CAAC,WAAW,CAAC,MAAM,CAAC,EAAC,OAAO,EAAE,iBAAiB,EAAE,eAAe,EAAE,IAAI,EAAC,CAAC,CAAC;YAC9F,MAAM,CAAC,OAAO,EAAE,CAAC;YAEjB,EAAE,CAAC,SAAS,CAAC,YAAY,CAAC,4CAA4C,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;gBACjF,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;gBAC/C,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;gBAEtB,IAAI,SAAS,GAAG,EAAC,WAAW,EAAE,CAAC,EAAE,WAAW,EAAE,EAAE,EAAE,gBAAgB,EAAE,EAAE,EAAE,aAAa,EAAE,CAAC,EAAC,CAAC;gBAC1F,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;oBACzB,IAAG,SAAS,CAAC,SAAS,IAAI,OAAO,CAAC,SAAS,EAAE;wBAC3C,IAAG,SAAS,CAAC,SAAS,IAAI,CAAC,EAAE;4BAC3B,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;4BACxB,SAAS,GAAG,OAAO,CAAC;yBACrB;6BACI,IAAG,OAAO,CAAC,kBAAkB,IAAI,YAAY,EAAE;4BAClD,SAAS,GAAG,OAAO,CAAC;yBACrB;qBACF;yBACI,IAAG,OAAO,CAAC,kBAAkB,IAAI,YAAY,EAAE;wBAClD,SAAS,CAAC,WAAW,GAAG,SAAS,CAAC,WAAW,GAAG,UAAU,CAAC,OAAO,CAAC,WAAW,IAAI,CAAC,CAAC,CAAC;qBACtF;oBAED,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;gBACvB,CAAC,CAAC,CAAC;gBACH,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBAExB,MAAM,CAAC,OAAO,EAAE,CAAC;YACnB,CAAC,CAAC;iBACD,KAAK,CAAC,CAAC,CAAC,EAAE;gBACT,MAAM,CAAC,OAAO,EAAE,CAAC;YACnB,CAAC,CAAC,CAAC;QACL,CAAC;KAAA;IAEK,WAAW;;YACf,IAAI,EAAE,GAAG,IAAI,CAAC;YACd,EAAE,CAAC,MAAM,CAAC,aAAa,CAAC,8BAA8B,CAAC,CAAC;QAC1D,CAAC;KAAA;CAEF;;YA9EQ,yDAAa;YAAE,6DAAiB;YAAE,2DAAe;YACjD,mDAAM;YAKN,iFAAmB;YAHnB,yFAAS;YACT,oEAAa;;AAST,sBAAsB;IALlC,wDAAS,CAAC;QACT,QAAQ,EAAE,yBAAyB;QACnC,wFAA8C;;KAE/C,CAAC;GACW,sBAAsB,CAiElC;AAjEkC;;;;;;;;;;;;;;;;ACdnC,iEAAe,8CAA8C,mIAAmI,E;;;;;;;;;;;;;;;ACAhM,iEAAe,s2BAAs2B,wKAAwK,8FAA8F,gBAAgB,sIAAsI,qBAAqB,sIAAsI,8BAA8B,kBAAkB,oLAAoL,kCAAkC,iCAAiC,yBAAyB,E","file":"src_app_pages_tankwagon-inventory_tankwagon-inventory_module_ts.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TankwagonInventoryPage } from './tankwagon-inventory.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TankwagonInventoryPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TankwagonInventoryPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TankwagonInventoryPageRoutingModule } from './tankwagon-inventory-routing.module';\n\nimport { TankwagonInventoryPage } from './tankwagon-inventory.page';\n\nimport { Message } from '../../framework/_common/base/message';\nimport { CommonSQL } from '../../framework/_common/sqlite/implementation/common-sql';\nimport { GlobalInfoBRL } from '../../framework/brl/implementation/globalinfo';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    TankwagonInventoryPageRoutingModule\n  ],\n  declarations: [TankwagonInventoryPage],\n  providers: [\n    Message,\n    CommonSQL,\n    GlobalInfoBRL\n  ]\n})\nexport class TankwagonInventoryPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { NavController, LoadingController, AlertController } from '@ionic/angular';\nimport { Router } from '@angular/router';\n\nimport { CommonSQL } from '../../framework/_common/sqlite/implementation/common-sql';\nimport { ReportService } from '../../providers/report.service';\n\nimport { GlobalEventsService } from '../../providers/global-events.service';\n\n@Component({\n  selector: 'app-tankwagon-inventory',\n  templateUrl: './tankwagon-inventory.page.html',\n  styleUrls: ['./tankwagon-inventory.page.scss'],\n})\nexport class TankwagonInventoryPage implements OnInit {\n\n  data = [];\n  grandTotal = 0;\n\n  constructor(public navCtrl: NavController,\n              public loadingCtrl: LoadingController,\n              public alertCtrl: AlertController,\n              private router: Router,\n              private globalEventsService: GlobalEventsService,\n              public commonSQL: CommonSQL,\n              private reportService: ReportService) {\n  }\n\n  ngOnInit() {\n  }\n\n  ionViewDidEnter() {\n    console.log('ionViewDidLoad ShiftLoadinventoryPage');\n    \n    this.getTankWagon();\n  }\n\n  async getTankWagon() {\n    var me = this;\n    me.data = [];\n\n    let loader = await me.loadingCtrl.create({message: \"Loading data...\", backdropDismiss: true});\n    loader.present();\n\n    me.commonSQL.getDataQuery('SELECT * FROM tankwagon order by intItemId').then(res => {\n      var _records = JSON.parse(JSON.stringify(res));      \n      console.log(_records);\n\n      var _previous = {'intItemId': 0, 'strItemNo': '', 'strDescription': '', 'dblQuantity': 0};\n      _records.forEach(element => {\n        if(_previous.intItemId != element.intItemId) {\n          if(_previous.intItemId != 0) {\n            me.data.push(_previous);\n            _previous = element;\n          }\n          else if(element.strTransactionType != 'Line Flush') {\n            _previous = element;\n          }          \n        }\n        else if(element.strTransactionType != 'Line Flush') {\n          _previous.dblQuantity = _previous.dblQuantity + parseFloat(element.dblQuantity || 0);\n        }\n        \n        console.log(me.data);\n      });\n      me.data.push(_previous);\n\n      loader.dismiss();\n    })\n    .catch(e => {\n      loader.dismiss();\n    });\n  }\n\n  async tankDetails() {\n    var me = this;\n    me.router.navigateByUrl('/tankwagon-inventory-details');\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ0YW5rd2Fnb24taW52ZW50b3J5LnBhZ2Uuc2NzcyJ9 */\";","export default \"<ion-header>\\n  <ion-toolbar class=\\\"my-toolbar box-shadow\\\" >\\n    <ion-grid no-padding>\\n      <ion-row>\\n        <ion-col size=\\\"9\\\"></ion-col>\\n        <ion-col size=\\\"3\\\" end>\\n          <ion-button end ion-button expand=\\\"block\\\" primary size=\\\"large\\\"(click)=\\\"tankDetails()\\\" class=\\\"button-global\\\">Tank Detail</ion-button>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>       \\n  <br>\\n  <ion-list>\\n    <ion-grid padding>\\n      <ion-row justify-content-start>       \\n        <ion-col size=\\\"3\\\">\\n          <ion-item>\\n            <b>Item Number</b>\\n          </ion-item>\\n        </ion-col>\\n        <ion-col size=\\\"5\\\">\\n          <ion-item>\\n            <b>Description</b>\\n          </ion-item>\\n        </ion-col>\\n        <ion-col size=\\\"4\\\">\\n          <ion-item style=\\\"text-align: center;\\\">\\n            <ion-label><b>Current Inventory</b></ion-label>\\n          </ion-item>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row *ngFor=\\\"let item of data; let i=index\\\">\\n        <ion-col size=\\\"3\\\">\\n          <ion-item>\\n            <ion-label>{{item.strItemNo}}</ion-label>\\n          </ion-item>\\n        </ion-col>\\n        <ion-col size=\\\"5\\\">\\n          <ion-item>\\n            <ion-label>{{item.strDescription}}</ion-label>\\n          </ion-item>\\n        </ion-col>\\n        <ion-col size=\\\"4\\\">\\n          <ion-item style=\\\"text-align: center;\\\">\\n            <ion-label>{{item.dblQuantity}}</ion-label>\\n          </ion-item>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </ion-list>\\n</ion-content>\\n<!-- <ion-footer padding>\\n  <h3 style=\\\"text-align: end; padding-right: 20px\\\">Remains: {{(grandTotal || 0.00).toFixed(2)}}</h3>\\n</ion-footer> -->\";"],"sourceRoot":"webpack:///"}