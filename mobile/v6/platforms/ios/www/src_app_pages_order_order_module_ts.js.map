{"version":3,"sources":["./src/app/pages/order/order-routing.module.ts","./src/app/pages/order/order.module.ts","./src/app/pages/order/order.page.ts","./src/app/pages/order/order.page.scss","./src/app/pages/order/order.page.html"],"names":[],"mappings":"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","file":"src_app_pages_order_order_module_ts.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { OrderPage } from './order.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OrderPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OrderPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { OrderPageRoutingModule } from './order-routing.module';\n\nimport { OrderPage } from './order.page';\n\nimport { OrderBRL } from '../../framework/brl/implementation/order';\nimport { GlobalInfoBRL } from '../../framework/brl/implementation/globalinfo';\nimport { GlobalInfo } from '../../framework/models/globalinfo';\nimport { CommonSQL } from '../../framework/_common/sqlite/implementation/common-sql';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    OrderPageRoutingModule\n  ],\n  declarations: [OrderPage],\n  providers: [\n    OrderBRL,\n    GlobalInfoBRL,\n    GlobalInfo,\n    CommonSQL\n  ]\n})\nexport class OrderPageModule {}\n","import { Component, OnInit, ViewChild ,NgZone } from '@angular/core';\nimport { NavController, AlertController, LoadingController, Platform, MenuController } from '@ionic/angular';\nimport { Keyboard } from '@ionic-native/keyboard/ngx';\nimport { HttpClient, HttpResponse, HttpHeaders, HttpRequest } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { GetRequest } from '../../framework/_common/base/api';\n\nimport { Configuration } from '../../framework/_common/configuration/configuration';\nimport { OrderBRL } from '../../framework/brl/implementation/order';\nimport { CommonSQL } from '../../framework/_common/sqlite/implementation/common-sql';\nimport { GlobalInfoBRL } from '../../framework/brl/implementation/globalinfo';\nimport { GlobalInfo } from '../../framework/models/globalinfo';\nimport { i21SyncDeviceService } from '../../providers/i21syncdevice.service';\nimport { newArray } from '@angular/compiler/src/util';\nimport { Service } from '../../framework/_common/base/service';\nimport { Token } from '../../framework/_common/base/token';\nimport { HTTP } from '@ionic-native/http/ngx';\nimport { DatePipe } from '@angular/common';\nimport { NetworkService } from '../../providers/network.service';\nimport { interval, Observable } from 'rxjs';\nimport {MBILOrder } from '../../framework/models/tblMBILOrder';\nimport { Subscription } from 'rxjs';\nimport { __values } from 'tslib';\n\n@Component({\n  selector: 'page-order',\n  templateUrl: 'order.page.html',\n  styleUrls: ['./order.page.scss'],\n  providers: [DatePipe]\n})\nexport class OrderPage {\n  @ViewChild('txtSearch', {static: false}) searchInput;\n\n  data = [];\n  detail = [];\n  currentSort = '';\n  currentFilter = '';\n  currentCustomer = '';\n  currentOrder = [];\n  invoice = [];\n  allOrders = [];\n  globalInfo: any;\n  searchValue: any;\n  createInvoiceButton: boolean = true;\n  showSearchbar: boolean = false;\n  counter: number = 0;\n  order_status = 'pending';\n\n  orders : Observable<any>;\n  orderDataChangedSubscription: Subscription\n\n  constructor(public navCtrl: NavController,\n              public loadingCtrl: LoadingController,\n              public alertCtrl: AlertController,\n              public globalBRL: GlobalInfoBRL,\n              public globalValue : GlobalInfo,\n              private router: Router,\n              private menu: MenuController,\n              private i21syncDeviceService: i21SyncDeviceService,\n              private commonSQL: CommonSQL,\n          \n              private ngZone: NgZone,\n              private orderBRL: OrderBRL)\n               {}               \n  \n\n  ionViewDidEnter () {\n    var me = this;\n    me.currentFilter = ' tblMBILOrder.strOrderStatus != \\'Delivered\\' ';\n    me.currentSort = ' order by tblMBILOrder.strRouteId, cast(tblMBILOrder.intSequence as int) asc,tblMBILOrder.dtmRequestedDate'; // order by tblMBILOrder.strRouteId, tblMBILOrder.intSequence, tblMBILOrder.dtmRequestedDate\n    console.log('ionViewDidLoad OrderMainPage');\n\n    me.userGlobalInfo();\n\n    me.menu.enable(true);\n    me.order_status = 'pending';\n  }\n\n  ngOnInit() {\n    var me = this;\n    this.orderDataChangedSubscription = this.i21syncDeviceService.OrderSubject$.subscribe((res)=>{\n     console.log(\"ORDER DATA CHANGED LOG\",res)\n     me.data = res;\n    })\n  }\n  userGlobalInfo() {\n    var me = this;\n    me.globalBRL.getByQuery('select * from globalinfo where ysnLogged = \\'true\\'').then(async res => {\n      console.log(res);\n      if(res[0]) {\n        me.globalInfo = res[0];\n        let loader = await me.loadingCtrl.create({message: \"Loading...\", backdropDismiss: true});\n       // me.getOrderList();\n       // me.i21syncDeviceService.getOrderInterval(me.globalInfo.intDriverNumber,loader)\n        (await me.i21syncDeviceService.getOrderList(me.globalInfo.intDriverNumber,this.currentFilter,this.currentSort)).subscribe((res) =>{\n          debugger;\n          console.log(\"Response ======\",res);\n            me.data = res;\n            if(me.data.length == 0){\n              //me.getOrderList();\n              me.i21syncDeviceService.getOrderInterval(me.globalInfo.intDriverNumber,loader)\n            }\n        })\n      }\n    });\n  \n    console.log(me.globalInfo); \n    \n  }\n\n\n  sortOrder(query: string) {\n    var me = this,\n        _sort = '';\n\n    switch(query) {\n      case 'Stop Number':\n        _sort = 'intStopNumber';\n        break;\n      case 'Customer Name':\n        _sort = 'strCustomerNumber';\n        break;\n      case 'Site Description':\n        _sort = 'strDescription';\n        break;\n      case 'Site Address':\n        _sort = 'strSiteAddress';\n        break;\n      case 'Site City':\n        _sort = 'strCity';\n        break;\n      case 'Item Number':\n        _sort = 'strItemNo';\n        break;;\n      case 'Quantity':\n        _sort = 'dblQuantity';\n        break;\n      default:\n        _sort = 'intSiteID';\n    }\n\n    me.currentSort = ' order by ' + _sort;\n   // me.getOrderList();\n   let loader =  me.loadingCtrl.create({message: \"Fetching tables...\", backdropDismiss: true});\n   me.i21syncDeviceService.getOrderInterval(me.globalInfo.intDriverNumber,loader)\n    \n  }\n\n  async sortFilter(query: string) {\n    var me = this,\n        _filter = '';\n\n    switch(query) {\n      case 'Delivered':\n        _filter = ' tblMBILOrder.strOrderStatus = \\'Delivered\\' ';\n        break;\n      case 'Open':\n        _filter = ' tblMBILOrder.strOrderStatus != \\'Delivered\\' ';\n        break;\n      default:\n        _filter = '';\n    }\n\n    me.currentFilter = _filter;\n    (await me.i21syncDeviceService.getOrderList(me.globalInfo.intDriverNumber, this.currentFilter, this.currentSort)).subscribe((res) =>{\n      me.data = res;\n    })\n    // me.getPreviosOrderList();\n    // me.getOrderList();\n  }\n\n  // async getPreviosOrderList() {\n  //   var me = this,\n  //       _query = '';\n\n  //       ;\n\n  //   // me.createInvoiceButton = true;\n  //   // me.detail = [];\n  //   // me.data = [];\n  //   me.allOrders = [];\n  //   me.commonSQL.getDataQuery('SELECT * FROM tblMBILOrder').then((res) => {\n  //     console.log(\"AFTER SEND SHIFT DATA ===\",res)\n  //   })\n  //   // let loader = await me.loadingCtrl.create({message: \"Loading data...\", backdropDismiss: true});\n  //   // loader.present();\n\n  //   _query = `SELECT \\'order-item\\' as baseClass, tblMBILOrder.*,\n  //                    CASE WHEN tblMBILOrder.strRouteId IS NULL THEN \\'XXX\\' ELSE tblMBILOrder.strRouteId END as strRouteId2,\n  //                    tblTMSite.*, tblARCustomer.*, tblMBILOrderItem.dblQuantity, tblMBILOrderItem.dblPrice,\n  //                    tblMBILOrderItem.intContractDetailId, tblContractExport.strContractNumber,\n  //                    IFNULL(tblContractExport.dblAvailableQty,0) as dblAvailableQty,\n  //                    (SELECT IFNULL(SUM(dblQuantity),0) as dblQuantity FROM tankwagon where tankwagon.intItemId = tblMBILOrderItem.intItemId) as dblTankQuantity\n  //             FROM tblMBILOrder\n  //             LEFT JOIN tblMBILOrderItem ON tblMBILOrder.intOrderId = tblMBILOrderItem.intOrderId\n  //             LEFT JOIN tblTMSite ON tblMBILOrderItem.intSiteId = tblTMSite.intSiteID\n  //             LEFT JOIN tblARCustomer ON tblMBILOrder.intEntityId = tblARCustomer.intEntityId\n  //             LEFT JOIN tblContractExport ON tblContractExport.intContractDetailId = tblMBILOrderItem.intContractDetailId\n  //             Where tblMBILOrder.intDriverId = '${ me.globalInfo.intDriverNumber }'`;\n  //   // _query = 'SELECT \\'order-item\\' as baseClass, tblMBILOrder.*, tblTMSite.*, tblARCustomer.*, tblMBILOrderItem.dblQuantity, tblMBILOrderItem.dblPrice, tblMBILOrderItem.intContractDetailId, tblContractExport.dblQuantity, contractheader.strContractNumber FROM orders LEFT JOIN tblMBILOrderItem ON tblMBILOrder.intOrderId = tblMBILOrderItem.intOrderId LEFT JOIN consumptionsite ON tblMBILOrderItem.intSiteId = tblTMSite.intSiteId LEFT JOIN tblARCustomer ON tblTMSite.strEntityNo = tblARCustomer.strCustomerNumber LEFT JOIN contractheader ON contractheader.intContractHeaderId = tblMBILOrderItem.intContractDetailId LEFT JOIN tblContractExport ON tblContractExport.intContractHeaderId = contractheader.intContractHeaderId ';\n\n  //   console.log(_query);\n\n  //     console.log(_query + ' and ' + me.currentFilter + ' ' + me.currentSort);\n  //     me.commonSQL.getDataQuery(_query + ' and ' + me.currentFilter + ' ' + me.currentSort)\n  //     .then(res => {\n  //       me.detail = [];\n  //      // me.data = [];\n  //       me.allOrders = [];\n\n  //       me.allOrders = res;\n  //       console.log('all orders are here. . .')\n  //       console.log(me.allOrders);\n        \n  //     },\n  //     err => {\n  //       console.log(err);\n  //      // loader.dismiss();\n  //     });\n    \n\n  // }\n  async getOrderList() {\n    var me = this,\n        _query = '';\n\n        ;\n\n    me.createInvoiceButton = true;\n    me.detail = [];\n   // me.data = [];\n    me.allOrders = [];\n  \n\n    let loader = await me.loadingCtrl.create({message: \"Loading data...\", backdropDismiss: true});\n    loader.present();\n\n    _query = `SELECT \\'order-item\\' as baseClass, tblMBILOrder.*,\n                     CASE WHEN tblMBILOrder.strRouteId IS NULL THEN \\'XXX\\' ELSE tblMBILOrder.strRouteId END as strRouteId2,\n                     TMSite.*, tblARCustomer.*, \n                     (SELECT IFNULL(SUM(dblQuantity),0) as dblQuantity FROM tblMBILOrderItem as MBILItem where MBILItem.intOrderId = tblMBILOrder.intOrderId) as dblQuantity,\n                     (SELECT IFNULL(dblPrice,0) as dblPrice FROM tblMBILOrderItem as MBILItem where MBILItem.intOrderId = tblMBILOrder.intOrderId LIMIT 1) as dblPrice,\n                     (SELECT intContractDetailId FROM tblMBILOrderItem as MBILItem where MBILItem.intOrderId = tblMBILOrder.intOrderId AND intContractDetailId IS NOT NULL LIMIT 1) as intContractDetailId,\n                     (SELECT strContractNumber FROM tblContractExport WHERE intContractDetailId = (SELECT intContractDetailId FROM tblMBILOrderItem as MBILItem where MBILItem.intOrderId = tblMBILOrder.intOrderId AND intContractDetailId IS NOT NULL LIMIT 1) LIMIT 1) as strContractNumber,\n                     IFNULL((SELECT dblAvailableQty FROM tblContractExport WHERE intContractDetailId = (SELECT intContractDetailId FROM tblMBILOrderItem as MBILItem where MBILItem.intOrderId = tblMBILOrder.intOrderId AND intContractDetailId IS NOT NULL LIMIT 1) LIMIT 1),0) as dblAvailableQty,\n                     (SELECT IFNULL(SUM(dblQuantity),0) as dblQuantity FROM tankwagon where tankwagon.intItemId = tblMBILOrderItem.intItemId) as dblTankQuantity\n              FROM tblMBILOrder\n              LEFT JOIN tblMBILOrderItem ON tblMBILOrder.intOrderId = tblMBILOrderItem.intOrderId\n              LEFT JOIN (SELECT * FROM tblTMSite WHERE tblTMSite.intSiteID = (SELECT intSiteId FROM tblMBILOrderItem WHERE intOrderId = (SELECT intOrderId FROM tblMBILOrder WHERE intDriverId = '${ me.globalInfo.intDriverNumber }') LIMIT 1)) as TMSite\n              LEFT JOIN tblARCustomer ON tblMBILOrder.intEntityId = tblARCustomer.intEntityId\n              Where tblMBILOrder.intDriverId = '${ me.globalInfo.intDriverNumber }'`;\n    // _query = 'SELECT \\'order-item\\' as baseClass, tblMBILOrder.*, tblTMSite.*, tblARCustomer.*, tblMBILOrderItem.dblQuantity, tblMBILOrderItem.dblPrice, tblMBILOrderItem.intContractDetailId, tblContractExport.dblQuantity, contractheader.strContractNumber FROM orders LEFT JOIN tblMBILOrderItem ON tblMBILOrder.intOrderId = tblMBILOrderItem.intOrderId LEFT JOIN consumptionsite ON tblMBILOrderItem.intSiteId = tblTMSite.intSiteId LEFT JOIN tblARCustomer ON tblTMSite.strEntityNo = tblARCustomer.strCustomerNumber LEFT JOIN contractheader ON contractheader.intContractHeaderId = tblMBILOrderItem.intContractDetailId LEFT JOIN tblContractExport ON tblContractExport.intContractHeaderId = contractheader.intContractHeaderId ';\n\n    console.log(_query);\n\n    if (me.searchValue && me.showSearchbar == true) {\n      _query = _query + ' and tblARCustomer.strCustomerName like \\'%' + me.searchValue + '%\\'';\n      me.commonSQL.getDataQuery(_query + ' and ' + me.currentFilter + ' ' + me.currentSort)\n      .then(res => {\n        me.detail = [];\n        me.data = [];\n        me.allOrders = [];\n\n        me.allOrders = res;\n        console.log('all orders are here. . .')\n        console.log(me.allOrders);\n\n        var _strOrder = '';\n        var _hasNoRoute = false;\n        for(var x = 0; x <= res.length - 1; x++) {\n          if(_strOrder != res[x].strOrderNumber) {\n            if(res[x].dblQuantity > res[x].dblTankQuantity) {\n              res[x].strOrderStatus = 'fuelnotenough';\n            }\n            if(res[x].strRouteId == null && _hasNoRoute == false) {\n              _hasNoRoute = true;\n              res[x].intSequence = 1;\n            }\n            me.data.push(res[x]);\n          }\n          _strOrder = res[x].strOrderNumber;\n        }\n\n        loader.dismiss();\n\n        var _txtSearch = me.searchInput.el;\n        _txtSearch.getElementsByTagName('input')[0].focus();\n      },\n      err => {\n        console.log(err);\n        loader.dismiss();\n      });\n    }\n    else {\n      console.log(_query + ' and ' + me.currentFilter + ' ' + me.currentSort);\n      me.commonSQL.getDataQuery(_query + ' and ' + me.currentFilter + ' ' + me.currentSort)\n      .then(res => {\n        me.detail = [];\n       \n        me.allOrders = [];\n\n        me.allOrders = res;\n        console.log('all orders are here. . .')\n        console.log(me.allOrders);\n        var _strOrder = '';\n        var _strRoute = '';\n        var _hasNoRoute = false;\n         me.data = [];\n        for(var x = 0; x <= res.length - 1; x++) {\n          if(_strOrder != res[x].strOrderNumber) {\n            if(res[x].dblQuantity > res[x].dblTankQuantity) {\n              res[x].strOrderStatus = 'fuelnotenough';\n            }\n            if(res[x].strRouteId == null) {\n              res[x].strRouteId2 = 'NOROUTE';\n              if(_hasNoRoute == false) {\n                res[x].intSequence = 1;\n                _hasNoRoute = true;\n              }\n            }\n            else if(_strRoute != res[x].strRouteId) {\n              res[x].strRouteId2 = 'XXX';\n            }\n\n            console.log(res[x]);\n            me.data.push(res[x]);\n           \n          }\n          _strOrder = res[x].strOrderNumber;\n          _strRoute = res[x].strRouteId;\n        }\n\n        loader.dismiss();\n      },\n      err => {\n        console.log(err);\n        loader.dismiss();\n      });\n    }\n\n  }\n\n  reorderItems(indexes) {\n    let element = this.data[indexes.from];\n    this.data.splice(indexes.from, 1);\n    this.data.splice(indexes.to, 0, element);\n  }\n\n  async showInvoice() {\n    var me = this;\n    console.log(me.detail);\n\n    if(me.detail.length != 0) {\n\n      var meteredMsg = await this.alertCtrl.create({\n        header: 'Create Invoice',\n        message: 'Is this invoice a metered delivery?',\n        cssClass: 'order-msgbox',\n        buttons: [\n          {\n            text: 'Yes',\n            handler: () => {\n              me.buildInvoice(true);\n            }\n          },\n          {\n            text: 'No',\n            handler: () => {\n              me.buildInvoice(false);\n            }\n          }\n        ]\n      });\n\n      var shiftMsg = await me.alertCtrl.create({\n        message: 'Shift has not yet started!',\n        buttons: [\n          {\n            text: 'Ok',\n            handler: () => {\n            }\n          }\n        ]\n      });\n\n      let confirm = await me.alertCtrl.create({\n        header: 'Create Invoice',\n        message: 'Are you sure you want to continue?',\n        cssClass: 'order-msgbox',\n        buttons: [\n          {\n            text: 'Yes',\n            handler: () => {\n              if(me.globalInfo && (me.globalInfo['ysnShiftOnGoing'] == 'true' || me.globalInfo['ysnShiftOnGoing'] == true)) {\n                meteredMsg.present();\n              }\n              else {\n                shiftMsg.present();\n              }\n            }\n          },\n          {\n            text: 'No',\n            handler: () => {\n\n            }\n          }\n        ]\n      });\n      confirm.present();\n    }\n  }\n\n  async showOrderDetails(item) {\n    var me = this;\n    console.log('order details ===> ',item);\n    Configuration.navParams = {orderDetail: item};\n    me.router.navigateByUrl('/order-detail');\n  }\n\n  buildInvoice(isMeter) {\n    var me = this;\n    me.orderBRL.buildInvoice(me.detail, false).then(res => {\n      console.log(res);\n      Configuration.navParams = {invoice: res, isMeter: isMeter};\n      me.router.navigateByUrl('/invoice');\n    });\n  }\n\n  async receiveOrder() {\n    // console.log(record);\n\n    var me = this;\n    me.counter = 0;\n   // me.previousOrders = [];\n\n    let loader = await me.loadingCtrl.create({message: \"Fetching tables...\", backdropDismiss: true});\n\n    let confirm = await me.alertCtrl.create({\n      message: 'Are you sure you want to continue?',\n      buttons: [\n        {\n          text: 'Yes',\n          handler: () => {\n            loader.present();\n            me.i21syncDeviceService.getOrderInterval(me.globalInfo.intDriverNumber,loader)\n \n          }\n        },\n        {\n          text: 'No',\n          handler: () => {\n\n          }\n        }\n      ]\n    });\n    confirm.present();\n  }\n\n\n\n}\n","export default \"div[scrollX=true] {\\n  display: flex;\\n  flex-wrap: nowrap;\\n  overflow-x: auto;\\n}\\ndiv[scrollX=true]::-webkit-scrollbar {\\n  display: none;\\n}\\ndiv[scrollX=true] .scroll-item {\\n  flex: 0 0 auto;\\n}\\n.fuelnotenough {\\n  background-color: rgba(255, 252, 0, 0.2);\\n}\\nion-item-sliding[track=generated] ion-label {\\n  border-left: 2px solid var(--ion-color-primary);\\n  padding-left: 10px;\\n}\\nion-item-sliding[track=fuelnotenough] ion-label {\\n  background-color: #fffd002b;\\n}\\nion-item-sliding[track=new] ion-label {\\n  background-color: #caecd2;\\n}\\nion-item-sliding[track=dispatched] ion-label {\\n  border-left: 2px solid var(--ion-color-primary);\\n  padding-left: 10px;\\n}\\nion-item-sliding[track=fuelnotenough] ion-label {\\n  background-color: #fffd002b;\\n}\\nion-item-sliding[track=new] ion-label {\\n  background-color: #caecd2;\\n}\\nion-item-sliding[track=delivered] ion-label {\\n  border-left: 2px solid #69bb7b;\\n  padding-left: 10px;\\n}\\nion-item-sliding[track=fuelnotenough] ion-label {\\n  background-color: #fffd002b;\\n}\\nion-item-sliding[track=new] ion-label {\\n  background-color: #caecd2;\\n}\\nion-item-sliding[track=fuelnotenough] ion-label {\\n  border-left: 2px solid red;\\n  padding-left: 10px;\\n}\\nion-item-sliding[track=fuelnotenough] ion-label {\\n  background-color: #fffd002b;\\n}\\nion-item-sliding[track=new] ion-label {\\n  background-color: #caecd2;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9yZGVyLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGFBQUE7RUFDQSxpQkFBQTtFQUNBLGdCQUFBO0FBQ0o7QUFBSTtFQUNHLGFBQUE7QUFFUDtBQUFLO0VBQ0UsY0FBQTtBQUVQO0FBRUU7RUFDRSx3Q0FBQTtBQUNKO0FBY0c7RUFDRSwrQ0FBQTtFQUNBLGtCQUFBO0FBWEw7QUFhRztFQUNDLDJCQUFBO0FBVko7QUFZRTtFQUNFLHlCQUFBO0FBVEo7QUFDRztFQUNFLCtDQUFBO0VBQ0Esa0JBQUE7QUFFTDtBQUFHO0VBQ0MsMkJBQUE7QUFHSjtBQURFO0VBQ0UseUJBQUE7QUFJSjtBQVpHO0VBQ0UsOEJBQUE7RUFDQSxrQkFBQTtBQWVMO0FBYkc7RUFDQywyQkFBQTtBQWdCSjtBQWRFO0VBQ0UseUJBQUE7QUFpQko7QUF6Qkc7RUFDRSwwQkFBQTtFQUNBLGtCQUFBO0FBNEJMO0FBMUJHO0VBQ0MsMkJBQUE7QUE2Qko7QUEzQkU7RUFDRSx5QkFBQTtBQThCSiIsImZpbGUiOiJvcmRlci5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJkaXZbc2Nyb2xsWD10cnVlXSB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LXdyYXA6IG5vd3JhcDtcbiAgICBvdmVyZmxvdy14OiBhdXRvO1xuICAgICY6Oi13ZWJraXQtc2Nyb2xsYmFyIHtcbiAgICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cbiAgICAgLnNjcm9sbC1pdGVtIHtcbiAgICAgICBmbGV4OiAwIDAgYXV0bztcbiAgICB9XG4gIH1cblxuICAuZnVlbG5vdGVub3VnaCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDI1NSAyNTIgMCAvIDIwJSk7XG4gIH0gIFxuXG5cbiAgJGNhdGVnb3JpZXM6IChcbiAgIGdlbmVyYXRlZDogdmFyKC0taW9uLWNvbG9yLXByaW1hcnkpLFxuICAgZGlzcGF0Y2hlZDogdmFyKC0taW9uLWNvbG9yLXByaW1hcnkpLFxuICAgZGVsaXZlcmVkOiAjNjliYjdiLFxuICAgZnVlbG5vdGVub3VnaDogcmVkLFxuLy8gICBmb29kOiAjM2JjN2M0LFxuLy8gICBkb2N1bWVudGF0aW9uOiAjYjE2YmUzLFxuLy8gICBuYXZpZ2F0aW9uOiAjNjYwMGNjXG4pO1xuXG5AZWFjaCAkdHJhY2ssICR2YWx1ZSBpbiBtYXAtcmVtb3ZlKCRjYXRlZ29yaWVzKSB7XG4gICBpb24taXRlbS1zbGlkaW5nW3RyYWNrPScjeyR0cmFja30nXSBpb24tbGFiZWwge1xuICAgICBib3JkZXItbGVmdDogMnB4IHNvbGlkICR2YWx1ZTtcbiAgICAgcGFkZGluZy1sZWZ0OiAxMHB4O1xuICAgfVxuICAgaW9uLWl0ZW0tc2xpZGluZ1t0cmFjaz0nZnVlbG5vdGVub3VnaCddIGlvbi1sYWJlbCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmQwMDJiO1xuICB9XG4gIGlvbi1pdGVtLXNsaWRpbmdbdHJhY2s9J25ldyddIGlvbi1sYWJlbCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogICNjYWVjZDI7XG4gIH1cbiB9Il19 */\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title *ngIf=\\\"!showSearchbar\\\">Order List</ion-title>\\n    <ion-searchbar #txtSearch  *ngIf=\\\"showSearchbar\\\" showCancelButton=\\\"always\\\" [(ngModel)]=\\\"searchValue\\\" (ionChange)=\\\"getOrderList()\\\" (ionCancel)=\\\"showSearchbar = false\\\" placeholder=\\\"Search\\\" [debounce]=\\\"2000\\\"></ion-searchbar>\\n\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button *ngIf=\\\"!showSearchbar\\\" (click)=\\\"showSearchbar = true\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"search\\\"></ion-icon>\\n      </ion-button>\\n      <ion-button color=\\\"primary\\\" (click)=\\\"receiveOrder()\\\" fill=\\\"outline\\\">Refresh Order</ion-button> \\n    </ion-buttons>\\n  </ion-toolbar>\\n  <ion-toolbar>\\n    <ion-segment [(ngModel)]=\\\"order_status\\\">\\n      <ion-segment-button (click)=\\\"sortFilter('Open')\\\" value=\\\"pending\\\">\\n        Pending\\n      </ion-segment-button>\\n      <ion-segment-button (click)=\\\"sortFilter('Delivered')\\\" value=\\\"complete\\\">\\n        Complete\\n      </ion-segment-button>\\n    </ion-segment>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content fullscreen=\\\"true\\\">\\n  <ion-list #scheduleList>\\n\\n    <ng-container *ngFor=\\\"let item of data; let i=index\\\">\\n      <ion-list-header *ngIf=\\\"item.strRouteId2 == 'XXX'\\\">\\n        <ion-label>\\n          <h1>Route #{{item.strRouteId}}</h1>\\n        </ion-label>\\n      </ion-list-header>\\n      <ion-list-header *ngIf=\\\"item.strRouteId2 == 'NOROUTE' && item.intSequence == 1\\\">\\n        <ion-label>\\n          <h1>No Route</h1>\\n        </ion-label>\\n      </ion-list-header>\\n    <ion-item-sliding  #slidingItem [attr.track]=\\\"item.strOrderStatus | lowercase\\\">      \\n      <ion-item (click)=\\\"showOrderDetails(item)\\\">\\n        <ion-label class=\\\"item.strOrderStatus | lowercase\\\">\\n          <h3><b *ngIf=\\\"item.strRouteId2 != 'NOROUTE'\\\">Seq #{{item.intSequence}}&nbsp;-&nbsp;</b> <b>{{item.strOrderNumber}} &mdash; {{item.strCustomerName}} &mdash; {{item.strCustomerNumber}}</b><ion-badge *ngIf=\\\"item.strOrderStatus == 'NEW'\\\" color=\\\"warning\\\">NEW</ion-badge></h3>\\n          <p>\\n            <b>Site Description:</b> {{item.strDescription}}\\n          </p>\\n          <p>\\n            <b>Site Address:</b> {{item.strSiteAddress}}, {{item.strCity}}, {{item.strState}}, {{item.strZipCode}}\\n          </p>\\n          <p>\\n            <b>Item:</b> {{item.strItemNo}} &mdash; <b>Quantity:</b> {{item.dblQuantity}}\\n          </p>\\n        </ion-label>\\n      </ion-item>\\n    </ion-item-sliding>\\n  </ng-container>\\n\\n  </ion-list>\\n</ion-content>\\n\";"],"sourceRoot":"webpack:///"}